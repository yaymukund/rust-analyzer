var searchIndex = JSON.parse('{\
"base_db":{"doc":"base_db defines basic database traits. The concrete DB is …","t":[12,12,12,12,12,3,3,13,18,3,3,3,3,3,3,3,3,13,17,3,4,13,13,13,3,3,8,3,3,3,3,3,3,13,3,3,8,3,4,8,8,3,3,3,3,3,3,3,3,8,3,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,12,12,10,12,10,10,11,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,10,12,11,11,11,11,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,12,10,11,10,11,11,12,12,11,10,11,10,10,10,10,10,11,10,10,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,3,17,8,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["0","0","0","0","0","AnchoredPath","AnchoredPathBuf","Attr","CURRENT","Cancelled","Change","CrateData","CrateDisplayName","CrateGraph","CrateGraphQuery","CrateId","CrateName","CustomDerive","DEFAULT_LRU_CAP","Dependency","Edition","Edition2015","Edition2018","Edition2021","Env","FileId","FileLoader","FileLoaderDelegate","FilePosition","FileRange","FileSet","FileSourceRootQuery","FileTextQuery","FuncLike","ParseQuery","ProcMacro","ProcMacroExpander","ProcMacroId","ProcMacroKind","SourceDatabase","SourceDatabaseExt","SourceDatabaseExtGroupStorage__","SourceDatabaseExtStorage","SourceDatabaseGroupStorage__","SourceDatabaseStorage","SourceRoot","SourceRootCratesQuery","SourceRootId","SourceRootQuery","Upcast","VfsPath","add_crate_root","add_dep","anchor","anchor","apply","as_path","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","catch","cfg_options","change_file","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","crate_graph","crate_graph","crate_graph","crate_id","crate_id_for_crate_root","crates_in_topological_order","default","default","default","default","default","default","default","default","default","default","dependencies","deref","deref","display_name","edition","env","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute","execute","expand","expander","extend","file_for_path","file_for_path","file_id","file_id","file_source_root","file_source_root","file_text","file_text","file_text","file_text","files_changed","fixture","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_index","fmt_index","for_each_query","for_each_query","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_canonical_name","from_iter","from_str","get","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","impl_intern_key","in_db","in_db","in_db","in_db","in_db","in_db","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","index","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_empty","is_library","iter","iter","iter","iter","join","kind","len","maybe_changed_since","maybe_changed_since","name","name","name_and_extension","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new_library","new_local","new_virtual_path","normalize_dashes","offset","parent","parse","parse","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","patch_cfg_if","path","path","path_for_file","path_for_file","pop","potential_cfg_options","proc_macro","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","range","relevant_crates","relevant_crates","resolve_path","resolve_path","resolve_path","root_file_id","roots","set","set_crate_graph","set_crate_graph","set_crate_graph_with_durability","set_file_source_root","set_file_source_root_with_durability","set_file_text","set_file_text_with_durability","set_roots","set_source_root","set_source_root_with_durability","source_root","source_root","source_root_crates","source_root_crates","starts_with","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","transitive_deps","transitive_rev_deps","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","ChangeFixture","WORKSPACE","WithFixture","borrow","borrow_mut","change","file_position","files","from","into","parse","test_crate","try_from","try_into","type_id","with_files","with_many_files","with_position","with_range","with_range_or_offset","with_single_file"],"q":["base_dbbase_db::fixture","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","Path relative to a file.","Path relative to a file.","","","A panic payload indicating that a salsa revision was …","Encapsulate a bunch of raw <code>.set</code> calls on the database.","","","<code>CrateGraph</code> is a bit of information which turns a set of …","","","","","","","","","","","","Handle to a file in [<code>Vfs</code>]","","Silly workaround for cyclic deps between the traits","","","A set of [<code>VfsPath</code>]s identified by [<code>FileId</code>]s.","","","","","","","","","Database which stores all significant input facts: source …","We don’t want to give HIR knowledge of source roots, …","","Representative struct for the query group.","","Representative struct for the query group.","","","Files are grouped into source roots. A source root is a …","","","Path in <code>Vfs</code>.","","","File that this path is relative to.","File that this path is relative to.","","Returns the <code>AbsPath</code> representation of <code>self</code> if <code>self</code> is on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Runs <code>f</code>, and catches any salsa cancellation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The crate graph.","","","","","Returns all crates in the graph, sorted in topological …","","","","","","","","","","","","","","A name used in the package’s project declaration: for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extends this crate graph by adding a complete disjoint …","","Get the id corresponding to <code>path</code> if it exists in the set.","","","Path to a file, relative to the root of its source root. …","","Text of the file.","","","","","A set of high-level utility fixture methods to use in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","","Insert the <code>file_id, path</code> pair into the set.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sysroot or crates.io library.","","","","Iterate over this set’s ids.","Creates a new <code>VfsPath</code> with <code>path</code> adjoined to <code>self</code>.","","Returns the number of stored paths.","","","","","Returns <code>self</code>’s base name and file extension.","","","","","","","","","","","","","","","Creates a crate name, checking for dashes in the string …","","","","","","Creates an “in-memory” path from <code>/</code>-separated string.","Creates a crate name, unconditionally replacing the …","","Returns the <code>VfsPath</code> without its final component, if there …","","","","","","","","","Path relative to <code>anchor</code>’s containing directory.","Path relative to <code>anchor</code>’s containing directory.","","Get the path corresponding to <code>file</code> if it exists in the …","Remove the last component of <code>self</code> if there is one.","","","","","","","","","","","","","","Get the id of the file corresponding to <code>path</code>.","","","","Set the value of the <code>crate_graph</code> input.","","Set the value of the <code>crate_graph</code> input and promise that …","Set the value of the <code>file_source_root</code> input.","Set the value of the <code>file_source_root</code> input and promise …","Set the value of the <code>file_text</code> input.","Set the value of the <code>file_text</code> input and promise that its …","","Set the value of the <code>source_root</code> input.","Set the value of the <code>source_root</code> input and promise that …","Contents of the source root.","","","","Returns <code>true</code> if <code>other</code> is a prefix of <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over all transitive dependencies of …","Returns all transitive reverse dependencies of the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,3,4,5,0,0,6,7,0,0,0,0,0,0,0,0,6,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,9,10,11,12,1,2,13,8,3,14,15,4,6,16,17,7,18,19,11,20,21,22,23,24,25,26,27,28,29,30,31,9,10,32,12,5,33,1,2,13,8,3,14,15,4,6,16,17,7,18,19,11,20,21,22,23,24,25,26,27,28,29,30,31,9,10,32,12,5,33,33,17,11,2,13,8,3,14,15,4,6,16,17,7,18,19,20,21,9,10,32,12,5,2,13,8,3,14,15,4,6,16,17,7,18,19,20,21,9,10,32,12,5,2,3,7,12,5,34,11,23,19,8,8,8,18,11,24,25,28,29,30,31,32,17,14,15,17,17,17,2,13,3,14,15,4,6,7,18,19,21,9,10,32,12,5,2,13,3,14,15,4,6,7,18,19,21,9,10,32,12,5,24,31,35,16,8,13,32,20,21,36,27,37,36,1,27,11,0,2,13,8,3,14,14,15,15,4,6,16,17,7,7,18,19,11,20,21,24,25,28,29,30,31,9,10,32,12,12,5,33,33,23,27,23,27,1,2,13,8,3,14,15,15,4,6,16,17,7,18,19,11,20,21,22,23,24,25,26,27,28,29,30,31,9,10,32,12,12,5,33,15,18,7,18,2,3,14,15,4,6,7,21,12,5,0,24,25,28,29,30,31,24,25,28,29,30,31,8,32,1,2,13,8,3,14,15,4,6,16,17,7,18,19,11,20,21,22,23,24,25,26,27,28,29,30,31,9,10,32,12,5,33,8,13,13,8,18,32,12,16,32,23,27,16,19,12,2,13,3,14,15,4,18,19,21,9,10,32,12,5,14,11,23,27,13,13,12,14,20,12,34,23,2,3,7,12,5,8,9,10,13,32,12,17,17,24,25,28,29,30,31,21,37,1,37,1,32,17,11,18,34,11,34,36,36,36,36,11,36,36,36,27,36,27,12,2,13,8,3,14,15,4,6,16,17,7,18,19,20,21,9,10,32,12,5,14,15,7,12,33,8,8,1,2,13,8,3,14,15,4,6,16,17,7,18,19,11,20,21,22,23,24,25,26,27,28,29,30,31,9,10,32,12,5,33,1,2,13,8,3,14,15,4,6,16,17,7,18,19,11,20,21,22,23,24,25,26,27,28,29,30,31,9,10,32,12,5,33,1,2,13,8,3,14,15,4,6,16,17,7,18,19,11,20,21,22,23,24,25,26,27,28,29,30,31,9,10,32,12,5,33,38,0,0,0,39,39,39,39,39,39,39,39,40,39,39,39,40,40,40,40,40,40],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["edition",4],["vec",3],["env",3],["option",4],["fileid",3],["procmacro",3],["cfgoptions",3],["cratedisplayname",3]],["crateid",3]],[[["cratename",3],["crateid",3]],[["result",4],["cyclicdependencieserror",3]]],null,null,[[["sourcedatabaseext",8]]],[[],[["abspath",3],["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["cancelled",3],["result",4]]],null,[[["arc",3],["option",4],["fileid",3]]],[[],["sourcerootid",3]],[[],["sourceroot",3]],[[],["crategraph",3]],[[],["crateid",3]],[[],["cratename",3]],[[],["cratedisplayname",3]],[[],["procmacroid",3]],[[],["procmacrokind",4]],[[],["procmacro",3]],[[],["cratedata",3]],[[],["edition",4]],[[],["env",3]],[[],["dependency",3]],[[],["fileposition",3]],[[],["filerange",3]],[[],["anchoredpathbuf",3]],[[],["anchoredpath",3]],[[],["fileset",3]],[[],["vfspath",3]],[[],["fileid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["sourcerootid",3]],["ordering",4]],[[["crateid",3]],["ordering",4]],[[["edition",4]],["ordering",4]],[[["vfspath",3]],["ordering",4]],[[["fileid",3]],["ordering",4]],[[],[["crategraph",3],["arc",3]]],null,null,null,[[["fileid",3]],[["option",4],["crateid",3]]],[[],[["vec",3],["crateid",3]]],[[],["crategraph",3]],[[],["env",3]],[[],["change",3]],[[],["parsequery",3]],[[],["crategraphquery",3]],[[],["filetextquery",3]],[[],["filesourcerootquery",3]],[[],["sourcerootquery",3]],[[],["sourcerootcratesquery",3]],[[],["fileset",3]],null,[[],["str",15]],[[],["str",15]],null,null,null,[[["sourcerootid",3]],["bool",15]],[[["sourceroot",3]],["bool",15]],[[["crateid",3]],["bool",15]],[[["cratename",3]],["bool",15]],[[["cratedisplayname",3]],["bool",15]],[[["procmacroid",3]],["bool",15]],[[["procmacrokind",4]],["bool",15]],[[["edition",4]],["bool",15]],[[["env",3]],["bool",15]],[[["dependency",3]],["bool",15]],[[["filerange",3]],["bool",15]],[[["anchoredpathbuf",3]],["bool",15]],[[["anchoredpath",3]],["bool",15]],[[["fileset",3]],["bool",15]],[[["vfspath",3]],["bool",15]],[[["fileid",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[["subtree",3],["env",3],["option",4]],[["result",4],["expansionerror",4],["subtree",3]]],null,[[["crategraph",3]],["u32",15]],[[["vfspath",3]],[["fileid",3],["option",4]]],[[["vfspath",3]],[["option",4],["fileid",3]]],null,null,[[["fileid",3]],["sourcerootid",3]],null,[[["fileid",3]],[["arc",3],["string",3]]],[[["fileid",3]],[["arc",3],["string",3]]],[[["fileid",3]],[["arc",3],["string",3]]],null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["databasekeyindex",3],["sourcedatabase",8],["formatter",3]],["result",6]],[[["databasekeyindex",3],["formatter",3],["sourcedatabaseext",8]],["result",6]],[[["runtime",3],["fnmut",8]]],[[["runtime",3],["fnmut",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["cratename",3]],["cratedisplayname",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["abspathbuf",3]],["vfspath",3]],[[]],[[]],[[]],[[["string",3]],["cratedisplayname",3]],[[["intoiterator",8]]],[[["str",15]],["result",4]],[[["str",15]],[["string",3],["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["sourcedatabase",8]],["querytable",3]],[[["sourcedatabase",8]],["querytable",3]],[[["sourcedatabaseext",8]],["querytable",3]],[[["sourcedatabaseext",8]],["querytable",3]],[[["sourcedatabaseext",8]],["querytable",3]],[[["sourcedatabaseext",8]],["querytable",3]],[[["sourcedatabase",8]],["querytablemut",3]],[[["sourcedatabase",8]],["querytablemut",3]],[[["sourcedatabaseext",8]],["querytablemut",3]],[[["sourcedatabaseext",8]],["querytablemut",3]],[[["sourcedatabaseext",8]],["querytablemut",3]],[[["sourcedatabaseext",8]],["querytablemut",3]],[[["crateid",3]],["cratedata",3]],[[["fileid",3],["vfspath",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],null,[[]],[[]],[[]],[[]],[[["str",15]],[["option",4],["vfspath",3]]],null,[[],["usize",15]],[[["databasekeyindex",3],["sourcedatabase",8],["revision",3]],["bool",15]],[[["databasekeyindex",3],["revision",3],["sourcedatabaseext",8]],["bool",15]],null,null,[[],["option",4]],[[["sourcerootid",3]],["bool",15]],[[["sourceroot",3]],["bool",15]],[[["crateid",3]],["bool",15]],[[["cratename",3]],["bool",15]],[[["cratedisplayname",3]],["bool",15]],[[["procmacroid",3]],["bool",15]],[[["env",3]],["bool",15]],[[["dependency",3]],["bool",15]],[[["filerange",3]],["bool",15]],[[["anchoredpathbuf",3]],["bool",15]],[[["anchoredpath",3]],["bool",15]],[[["fileset",3]],["bool",15]],[[["vfspath",3]],["bool",15]],[[["fileid",3]],["bool",15]],[[["str",15]],[["cratename",3],["result",4],["str",15]]],[[],["change",3]],[[["u16",15]]],[[["u16",15]]],[[["fileset",3]],["sourceroot",3]],[[["fileset",3]],["sourceroot",3]],[[["string",3]],["vfspath",3]],[[["str",15]],["cratename",3]],null,[[],[["option",4],["vfspath",3]]],[[["fileid",3]],[["parse",3],["sourcefile",3]]],null,[[["sourcerootid",3]],[["option",4],["ordering",4]]],[[["crateid",3]],[["option",4],["ordering",4]]],[[["edition",4]],[["option",4],["ordering",4]]],[[["vfspath",3]],[["option",4],["ordering",4]]],[[["fileid",3]],[["option",4],["ordering",4]]],[[],["bool",15]],null,null,[[["fileid",3]],[["vfspath",3],["option",4]]],[[["fileid",3]],[["option",4],["vfspath",3]]],[[],["bool",15]],null,null,[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],null,[[["fileid",3]],[["arc",3],["fxhashset",6]]],[[["fileid",3]],[["arc",3],["fxhashset",6]]],[[["anchoredpath",3]],[["option",4],["fileid",3]]],[[["anchoredpath",3]],[["option",4],["fileid",3]]],[[["anchoredpath",3]],[["fileid",3],["option",4]]],null,null,[[["string",3],["str",15]]],[[["crategraph",3],["arc",3]]],[[["crategraph",3]]],[[["durability",3],["crategraph",3],["arc",3]]],[[["fileid",3],["sourcerootid",3]]],[[["durability",3],["fileid",3],["sourcerootid",3]]],[[["arc",3],["string",3],["fileid",3]]],[[["arc",3],["string",3],["durability",3],["fileid",3]]],[[["sourceroot",3],["vec",3]]],[[["sourceroot",3],["arc",3],["sourcerootid",3]]],[[["sourceroot",3],["durability",3],["sourcerootid",3],["arc",3]]],[[["sourcerootid",3]],[["sourceroot",3],["arc",3]]],null,[[["sourcerootid",3]],[["arc",3],["fxhashset",6]]],null,[[["vfspath",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[["crateid",3]]],[[["crateid",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,null,null,[[]],[[]],null,null,null,[[]],[[]],[[["str",15]],["changefixture",3]],[[],["crateid",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]]],"p":[[3,"FileLoaderDelegate"],[3,"SourceRootId"],[3,"CrateId"],[3,"ProcMacroId"],[3,"FileId"],[4,"ProcMacroKind"],[4,"Edition"],[3,"CrateGraph"],[3,"AnchoredPathBuf"],[3,"AnchoredPath"],[3,"Change"],[3,"VfsPath"],[3,"SourceRoot"],[3,"CrateName"],[3,"CrateDisplayName"],[3,"ProcMacro"],[3,"CrateData"],[3,"Env"],[3,"Dependency"],[3,"FilePosition"],[3,"FileRange"],[3,"SourceDatabaseStorage"],[3,"SourceDatabaseGroupStorage__"],[3,"ParseQuery"],[3,"CrateGraphQuery"],[3,"SourceDatabaseExtStorage"],[3,"SourceDatabaseExtGroupStorage__"],[3,"FileTextQuery"],[3,"FileSourceRootQuery"],[3,"SourceRootQuery"],[3,"SourceRootCratesQuery"],[3,"FileSet"],[3,"Cancelled"],[8,"SourceDatabase"],[8,"ProcMacroExpander"],[8,"SourceDatabaseExt"],[8,"FileLoader"],[8,"Upcast"],[3,"ChangeFixture"],[8,"WithFixture"]]},\
"cfg":{"doc":"cfg defines conditional compiling options, <code>cfg</code> attribute …","t":[13,13,13,4,3,4,3,3,13,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["All","Any","Atom","CfgAtom","CfgDiff","CfgExpr","CfgOptions","DnfExpr","Flag","InactiveReason","Invalid","KeyValue","Not","apply_diff","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","compute_enable_hints","default","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","from","from","from","from","from","from","from","get_cfg_keys","get_cfg_values","hash","hash","insert_atom","insert_key_value","into","into","into","into","into","into","is_target_defined","len","ne","ne","ne","ne","new","new","parse","partial_cmp","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","why_inactive","key","value"],"q":["cfg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cfg::CfgAtom",""],"d":["","","","A simple configuration value passed in from the outside.","","","Configuration options used for conditional compilation on …","A <code>#[cfg]</code> directive in Disjunctive Normal Form (DNF).","eg. <code>#[cfg(test)]</code>","","","eg. <code>#[cfg(target_os = \\\"linux\\\")]</code>","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>CfgDiff</code> objects that would enable this directive …","","","","","","","","","","","","","","Fold the cfg by querying all basic <code>Atom</code> and <code>KeyValue</code> …","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> when the atom comes from the target …","Returns the total number of atoms changed by this diff.","","","","","","Create a new CfgDiff. Will return None if the same item …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes a list of present or absent atoms in <code>opts</code> that …","",""],"i":[1,1,1,0,0,0,0,0,2,0,1,2,1,3,4,5,2,1,3,6,4,5,2,1,3,6,3,2,1,3,6,2,1,3,6,2,4,3,2,1,3,6,4,5,2,2,1,3,6,6,1,4,5,2,1,1,3,6,3,3,2,1,3,3,4,5,2,1,3,6,2,6,2,1,3,6,4,6,1,2,2,1,3,6,4,5,2,6,4,5,2,1,3,6,4,5,2,1,3,6,4,5,2,1,3,6,4,7,7],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cfgdiff",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["cfgexpr",4]],[["bool",15],["option",4]]],[[],["cfgatom",4]],[[],["cfgexpr",4]],[[],["cfgoptions",3]],[[],["cfgdiff",3]],[[]],[[]],[[]],[[]],[[["cfgatom",4]],["ordering",4]],[[["cfgoptions",3]]],[[],["cfgoptions",3]],[[["cfgatom",4]],["bool",15]],[[["cfgexpr",4]],["bool",15]],[[["cfgoptions",3]],["bool",15]],[[["cfgdiff",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["fn",8]],[["bool",15],["option",4]]],[[]],[[]],[[]],[[["cfgatom",4]]],[[]],[[]],[[]],[[],[["smolstr",3],["vec",3]]],[[["str",15]],[["smolstr",3],["vec",3]]],[[]],[[]],[[["smolstr",3]]],[[["smolstr",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["usize",15]],[[["cfgatom",4]],["bool",15]],[[["cfgexpr",4]],["bool",15]],[[["cfgoptions",3]],["bool",15]],[[["cfgdiff",3]],["bool",15]],[[["cfgexpr",4]]],[[["cfgatom",4],["vec",3]],[["cfgdiff",3],["option",4]]],[[["subtree",3]],["cfgexpr",4]],[[["cfgatom",4]],[["option",4],["ordering",4]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["cfgoptions",3]],[["inactivereason",3],["option",4]]],null,null],"p":[[4,"CfgExpr"],[4,"CfgAtom"],[3,"CfgOptions"],[3,"DnfExpr"],[3,"InactiveReason"],[3,"CfgDiff"],[13,"KeyValue"]]},\
"flycheck":{"doc":"Flycheck provides the functionality needed to run …","t":[13,4,13,13,3,3,4,3,3,13,13,13,13,13,13,4,3,13,13,13,13,13,4,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,12,11,11,11,11,11,11,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["AddDiagnostic","Applicability","CargoCommand","CustomCommand","Diagnostic","DiagnosticCode","DiagnosticLevel","DiagnosticSpan","DiagnosticSpanMacroExpansion","DidCancel","DidCheckCrate","DidFinish","DidStart","Error","FailureNote","FlycheckConfig","FlycheckHandle","HasPlaceholders","Help","Ice","MachineApplicable","MaybeIncorrect","Message","Note","Progress","Progress","Unspecified","Warning","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_end","byte_start","children","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","code","column_end","column_start","def_site_span","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expansion","explanation","file_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","is_primary","label","level","line_end","line_start","macro_decl_name","message","ne","ne","ne","ne","ne","rendered","serialize","serialize","serialize","serialize","serialize","serialize","span","spans","spawn","suggested_replacement","suggestion_applicability","text","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","all_features","all_targets","args","command","command","extra_args","features","no_default_features","target_triple","diagnostic","id","progress","workspace_root"],"q":["flycheckflycheck::FlycheckConfig","","","","","","","","","flycheck::Message","","",""],"d":["Request adding a diagnostic with fixes included to a file","Whether a suggestion can be safely applied.","","","A diagnostic message generated by rustc","The error code associated to this diagnostic.","The diagnostic level","A section of the source code associated with a Diagnostic","Macro expansion information associated with a diagnostic.","","","","","Error","Failure note","","Flycheck wraps the shared state and communication …","The suggested replacement has placeholders that will need …","Help","Internal compiler error","The suggested replacement can be applied automatically …","The suggested replacement may be incorrect in some …","","Note","","Request check progress notification to client","The suggested replacement will probably not work.","Warning","","","","","","","","","","","","","","","","","","","","","The byte offset in the file where this diagnostic ends.","The byte offset in the file where this diagnostic starts …","Associated diagnostic messages.","","","","","","","","","","","","","","","The code itself.","The associated error code for this diagnostic","1-based, character offset.","1-based, character offset.","span where macro was defined (if known)","","","","","","","","","","","","","","","","","","","","","Macro invocations that created the code at this span, if …","An explanation for the code","The file name or the macro name this diagnostic comes …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Is this a “primary” span – meaning the point, or …","Label that should be placed at this location (if any)","“error: internal compiler error”, “error”, “…","1-based. The line in the file.","1-based. The line in the file.","name of macro that was applied (e.g., “foo!” or “#[…","The error message of this diagnostic.","","","","","","The message as rustc would render it","","","","","","","span where macro was applied to generate this code; note …","A list of source code spans this diagnostic is associated …","","If we are suggesting a replacement, this will contain text…","If the suggestion is approximate","Source text from the start of line_start to the end of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Schedule a re-start of the cargo check worker.","","","","","","","","","","","Flycheck instance ID","",""],"i":[1,0,2,2,0,0,0,0,0,3,3,3,3,4,4,0,0,5,4,4,5,5,0,4,0,1,5,4,1,2,6,3,7,8,9,5,4,10,1,2,6,3,7,8,9,5,4,10,9,9,10,2,7,8,9,5,4,10,2,7,8,9,5,4,10,7,10,9,9,8,7,8,9,5,4,10,2,7,8,9,5,4,10,2,7,8,9,5,4,10,9,7,9,1,2,2,6,3,7,8,9,5,4,10,10,1,2,6,3,7,8,9,5,4,10,7,8,9,5,4,10,1,2,6,3,7,8,9,5,4,10,9,9,10,9,9,8,10,2,7,8,9,10,10,7,8,9,5,4,10,8,10,6,9,9,9,2,7,8,9,5,4,10,2,10,1,2,6,3,7,8,9,5,4,10,1,2,6,3,7,8,9,5,4,10,1,2,6,3,7,8,9,5,4,10,6,11,11,12,11,12,11,11,11,11,13,14,14,13],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[],["flycheckconfig",4]],[[],["diagnosticcode",3]],[[],["diagnosticspanmacroexpansion",3]],[[],["diagnosticspan",3]],[[],["applicability",4]],[[],["diagnosticlevel",4]],[[],["diagnostic",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[],[["diagnosticcode",3],["result",4]]],[[],[["result",4],["diagnosticspanmacroexpansion",3]]],[[],[["result",4],["diagnosticspan",3]]],[[],[["applicability",4],["result",4]]],[[],[["diagnosticlevel",4],["result",4]]],[[],[["diagnostic",3],["result",4]]],[[["flycheckconfig",4]],["bool",15]],[[["diagnosticcode",3]],["bool",15]],[[["diagnosticspanmacroexpansion",3]],["bool",15]],[[["diagnosticspan",3]],["bool",15]],[[["applicability",4]],["bool",15]],[[["diagnosticlevel",4]],["bool",15]],[[["diagnostic",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[["flycheckconfig",4]],["bool",15]],[[["diagnosticcode",3]],["bool",15]],[[["diagnosticspanmacroexpansion",3]],["bool",15]],[[["diagnosticspan",3]],["bool",15]],[[["diagnostic",3]],["bool",15]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[["fn",8],["flycheckconfig",4],["box",3],["usize",15],["abspathbuf",3]],["flycheckhandle",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"Message"],[4,"FlycheckConfig"],[4,"Progress"],[4,"DiagnosticLevel"],[4,"Applicability"],[3,"FlycheckHandle"],[3,"DiagnosticCode"],[3,"DiagnosticSpanMacroExpansion"],[3,"DiagnosticSpan"],[3,"Diagnostic"],[13,"CargoCommand"],[13,"CustomCommand"],[13,"AddDiagnostic"],[13,"Progress"]]},\
"hir":{"doc":"HIR (previously known as descriptors) provides a …","t":[13,4,4,13,13,13,13,13,13,8,4,13,4,16,13,3,13,3,3,13,13,3,13,13,13,13,3,4,4,4,3,13,3,13,13,13,13,3,13,13,3,13,3,13,13,13,4,13,3,13,13,18,3,13,13,13,3,3,4,13,13,3,13,13,13,13,13,4,4,13,8,8,8,8,8,3,3,13,13,13,13,3,3,13,4,13,3,13,3,13,3,13,13,13,13,3,13,3,4,13,13,3,3,13,13,13,4,13,4,13,4,3,13,4,13,13,4,13,3,13,4,4,13,13,13,13,4,13,13,13,13,13,4,3,13,3,3,13,13,13,13,3,13,13,3,13,13,4,13,3,13,13,13,13,13,13,13,3,3,13,13,13,3,3,13,13,4,13,13,3,13,13,13,13,13,13,3,13,13,13,4,4,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,10,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,3,8,3,3,3,3,3,3,3,3,3,3,3,8,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,8,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,8,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,10,12,11,11,11,11,11,11,10,12,10,12,10,10,12,10,12,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,10,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,10,10,12,10,12,10,12,10,12,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,10,12,10,12,10,12,10,12,11,11,11,11,11,11,10,10,12,10,12,10,12,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,10,12,10,12,10,12,10,12,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,10,12,10,12,10,12,10,12,10,12,10,12,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,10,10,12,10,12,10,12,11,11,11,11,11,11,10,12,10,12,10,12,10,12,10,12,10,12,10,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,10,12,10,12,4,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,3,4,3,3,13,3,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,5,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17],"n":["Abs","Access","Adt","Adt","Adt","AdtSelfType","All","Any","Array","AsAssocItem","AssocItem","AssocItem","AssocItemContainer","Ast","Atom","Attr","Attr","Attrs","AttrsWithOwner","BlockExpr","BuiltIn","BuiltinType","BuiltinType","ByCrate","BySelf","Call","Callable","CallableKind","CfgAtom","CfgExpr","CfgOptions","Closure","Const","Const","Const","Const","Const","ConstParam","ConstParam","ConstParam","Crate","Crate","CrateDependency","Declarative","Def","Def","DefWithBody","Derive","Documentation","DollarCrate","DynTrait","EMPTY","Enum","Enum","Error","Exclusive","ExpandResult","Field","FieldSource","Flag","Fn","Function","Function","Function","Function","Function","Function","GenericDef","GenericParam","GenericParam","HasAttrs","HasCrate","HasSource","HasVisibility","HirDisplay","HirFileId","Impl","Impl","Impl","ImplSelfType","ImplTrait","InFile","IncorrectCase","Invalid","ItemInNs","KeyValue","Label","Label","LifetimeParam","LifetimeParam","Local","Local","Local","Macro","Macro","MacroDef","MacroDef","MacroFile","MacroKind","Macros","Macros","ModPath","Module","Module","Module","Module","ModuleDef","ModuleDef","ModuleSource","Mut","Mutability","Name","Named","Namespace","Never","Not","Origin","Owned","Param","Path","PathKind","PathResolution","Placeholder","Plain","Plain","Pos","PrefixKind","ProcMacro","Public","RawPtr","Record","Reference","ScopeDef","SelfParam","SelfType","Semantics","SemanticsScope","Shared","Shared","Slice","SourceFile","Static","Static","Static","Struct","Struct","Struct","StructKind","Super","Trait","Trait","Trait","Trait","Tuple","Tuple","TupleEnumVariant","TupleStruct","Type","TypeAlias","TypeAlias","TypeAlias","TypeAlias","TypeInfo","TypeParam","TypeParam","TypeParam","TypeRef","Types","Types","Union","Union","Union","Unit","Unknown","Values","Values","Variant","Variant","Variant","Variant","VariantDef","Visibility","access","adjusted","adjusted","all","all_for_trait","all_for_type","all_in_crate","all_items","ancestors_at_offset_with_macros","ancestors_with_macros","ancestors_with_macros","ancestors_with_macros","applicable_inherent_traits","apply_diff","as_adt","as_assoc_item","as_assoc_item","as_assoc_item","as_assoc_item","as_assoc_item","as_associated_type_parent_trait","as_builtin","as_call_id_with_errors","as_callable","as_dyn_trait","as_ident","as_impl_traits","as_keyword_for_ptr","as_keyword_for_ref","as_local","as_module_def","as_ref","as_self_param","as_str","as_tuple_index","assert_contains_node","assoc_fn_params","assoc_type_shorthand_candidates","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","autoderef","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","by_key","call_node","canonical_module_path","canonical_path","cfg","cfg","check","children","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloned","cmp","cmp","cmp","cmp","container","containing_trait","containing_trait_impl","containing_trait_or_trait_impl","contains_unknown","could_unify_with","crate_root","db","db","db","debug_hir","declaration_source","declarations","default","default","default","definition_source","dependencies","deref","deref","descend_into_macros","descend_node_at_offset","descendants","diagnostics","diagnostics","diagnostics","diagnostics","diagnostics_display_range","display","display","display_name","display_source_code","display_test","display_truncated","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs_with_rangemap","edition","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","err","expand","expand_attr_macro","expansion_info","expansion_level","expected_case","fields","fields","fields","fields","fields","file","file_id","file_syntax","find_node_at_offset_with_descend","find_node_at_offset_with_macros","find_use_path","find_use_path_prefixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ast","from_kind","from_mutable","from_segments","from_src","get_cfg_keys","get_cfg_values","get_html_root_url","has_adjustment","has_body","has_doc_hidden","has_non_default_type_params","has_non_default_type_params","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","ident","ident_text","ident_type","impl_defs","impls_fnonce","impls_future","impls_trait","import_map","insert_atom","insert_key_value","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_displayable","is_async","is_attr_macro_call","is_auto","is_bool","is_builtin_derive","is_builtin_derive","is_closure","is_copy","is_fn","is_fn_like","is_ident","is_include_macro","is_macro","is_mod_rs","is_mut","is_mut","is_mutable_reference","is_negative","is_never","is_packed","is_param","is_raw_ptr","is_ref","is_reference","is_self","is_self","is_target_defined","is_unit","is_unknown","is_unsafe","is_unsafe","is_unsafe_ident_pat","is_unsafe_method_call","is_unsafe_ref_expr","is_usize","is_visible_from","is_visible_from","items","items","iterate_assoc_items","iterate_method_candidates","iterate_path_candidates","kind","kind","kind","kind","kind","known","krate","krate","krate","krate","krate","krate","krate","krate","krate","len","map","map","method_params","missing","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","n_params","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new_lifetime","new_tuple_field","normalize_trait_assoc_type","ok","only_err","original","original","original_file","original_file_range","original_range","params","params","parent","parent","parent","parent","parent","parent_def","parent_enum","parse","parse","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path_to_root","pattern_source","pop_segment","potential_cfg","process_all_names","push_segment","query_external_importables","receiver_param","record_literal_missing_fields","record_pattern_missing_fields","remove_ref","repr","resolve_bind_pat_to_const","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_extern_crate","resolve_field","resolve_label","resolve_lifetime_param","resolve_macro_call","resolve_method_call","resolve_method_call_as_callable","resolve_path","resolve_record_field","resolve_record_pat_field","resolve_type","resolve_variant","resolver","result","ret_type","return_type","reverse_dependencies","root_file","root_module","scope","scope","scope_at_offset","scope_for_def","segments","self_param","self_ty","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source_map","speculative_expand","speculative_resolve","storage","storage","str_err","string_value","strip_references","suggested_text","syntax","to_def","to_module_def","to_module_defs","to_node","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","token_ancestors_with_macros","trait_","trait_bounds","traits_in_scope","transitive_reverse_dependencies","transpose","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tuple_fields","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","type_arguments","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_of_expr","type_of_pat","type_of_self","type_params","type_ref","value","value","variants","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","walk","walk","with_value","key","value","AdtVarianceQuery","AssociatedTyDataQuery","AssociatedTyValueQuery","AstDatabase","AstDatabaseStorage","AstIdMapQuery","AttrsQuery","BlockDefMapQuery","BodyQuery","BodyWithSourceMapQuery","CallableItemSignatureQuery","ConstDataQuery","ConstParamTyQuery","CrateDefMapQueryQuery","CrateLangItemsQuery","DefDatabase","DefDatabaseGroupStorage__","DefDatabaseStorage","EnableProcAttrMacrosQuery","EnumDataQuery","ExprScopesQuery","FieldTypesQuery","FieldVisibilitiesQuery","FieldsAttrsQuery","FieldsAttrsSourceMapQuery","FileItemTreeQuery","FnDefDatumQuery","FnDefVarianceQuery","FunctionDataQuery","FunctionVisibilityQuery","GenericDefaultsQuery","GenericParamsQuery","GenericPredicatesForParamQuery","GenericPredicatesQuery","HirDatabase","HirDatabaseGroupStorage__","HirDatabaseStorage","HygieneFrameQuery","ImplDataQuery","ImplDatumQuery","ImplSelfTyQuery","ImplTraitQuery","ImportMapQuery","InferQueryQuery","InherentImplsInCrateQuery","InternBlockLookupQuery","InternBlockQuery","InternCallableDefLookupQuery","InternCallableDefQuery","InternClosureLookupQuery","InternClosureQuery","InternConstLookupQuery","InternConstParamIdLookupQuery","InternConstParamIdQuery","InternConstQuery","InternDatabase","InternDatabaseGroupStorage__","InternDatabaseStorage","InternEnumLookupQuery","InternEnumQuery","InternFunctionLookupQuery","InternFunctionQuery","InternImplLookupQuery","InternImplQuery","InternImplTraitIdLookupQuery","InternImplTraitIdQuery","InternLifetimeParamIdLookupQuery","InternLifetimeParamIdQuery","InternMacroQuery","InternStaticLookupQuery","InternStaticQuery","InternStructLookupQuery","InternStructQuery","InternTraitLookupQuery","InternTraitQuery","InternTypeAliasLookupQuery","InternTypeAliasQuery","InternTypeParamIdLookupQuery","InternTypeParamIdQuery","InternUnionLookupQuery","InternUnionQuery","InternedCallableDefId","InternedClosureId","InternedConstParamId","InternedLifetimeParamId","InternedOpaqueTyId","InternedTypeParamId","LangItemQuery","MacroArgTextQuery","MacroDefQuery","MacroExpandQuery","ParseMacroExpansionQuery","ProgramClausesForChalkEnvQuery","ReturnTypeImplTraitsQuery","StaticDataQuery","StructDataQuery","StructDatumQuery","TraitDataQuery","TraitDatumQuery","TraitEnvironmentQuery","TraitImplsInBlockQuery","TraitImplsInCrateQuery","TraitImplsInDepsQuery","TraitSolveQueryQuery","TyQuery","TypeAliasDataQuery","UnionDataQuery","ValueTyQuery","VariantsAttrsQuery","VariantsAttrsSourceMapQuery","adt_variance","adt_variance","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","associated_ty_data","associated_ty_data","associated_ty_value","associated_ty_value","ast_id_map","attrs","attrs","block_def_map","block_def_map","body","body","body_with_source_map","body_with_source_map","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callable_item_signature","callable_item_signature","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","const_data","const_data","const_param_ty","const_param_ty","crate_def_map","crate_def_map_query","crate_def_map_query","crate_lang_items","crate_lang_items","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","enable_proc_attr_macros","enable_proc_attr_macros","enum_data","enum_data","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expand_proc_macro","expr_scopes","expr_scopes","field_types","field_types","field_visibilities","field_visibilities","fields_attrs","fields_attrs","fields_attrs_source_map","fields_attrs_source_map","file_item_tree","file_item_tree","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_index","fmt_index","fmt_index","fn_def_datum","fn_def_datum","fn_def_variance","fn_def_variance","for_each_query","for_each_query","for_each_query","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","function_data","function_data","function_visibility","function_visibility","generic_defaults","generic_defaults","generic_params","generic_params","generic_predicates","generic_predicates","generic_predicates_for_param","generic_predicates_for_param","hash","hash","hash","hash","hash","hash","hygiene_frame","impl_data","impl_data","impl_datum","impl_datum","impl_self_ty","impl_self_ty","impl_trait","impl_trait","import_map","import_map","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","infer","infer_query","infer_query","inherent_impls_in_crate","inherent_impls_in_crate","intern_block","intern_block","intern_callable_def","intern_callable_def","intern_closure","intern_closure","intern_const","intern_const","intern_const_param_id","intern_const_param_id","intern_enum","intern_enum","intern_function","intern_function","intern_impl","intern_impl","intern_impl_trait_id","intern_impl_trait_id","intern_lifetime_param_id","intern_lifetime_param_id","intern_macro","intern_static","intern_static","intern_struct","intern_struct","intern_trait","intern_trait","intern_type_alias","intern_type_alias","intern_type_param_id","intern_type_param_id","intern_union","intern_union","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","lang_item","lang_item","lookup_intern_block","lookup_intern_block","lookup_intern_callable_def","lookup_intern_callable_def","lookup_intern_closure","lookup_intern_closure","lookup_intern_const","lookup_intern_const","lookup_intern_const_param_id","lookup_intern_const_param_id","lookup_intern_enum","lookup_intern_enum","lookup_intern_function","lookup_intern_function","lookup_intern_impl","lookup_intern_impl","lookup_intern_impl_trait_id","lookup_intern_impl_trait_id","lookup_intern_lifetime_param_id","lookup_intern_lifetime_param_id","lookup_intern_macro","lookup_intern_static","lookup_intern_static","lookup_intern_struct","lookup_intern_struct","lookup_intern_trait","lookup_intern_trait","lookup_intern_type_alias","lookup_intern_type_alias","lookup_intern_type_param_id","lookup_intern_type_param_id","lookup_intern_union","lookup_intern_union","macro_arg","macro_arg_text","macro_def","macro_expand","macro_expand_error","maybe_changed_since","maybe_changed_since","maybe_changed_since","ne","ne","ne","ne","ne","ne","new","new","new","parse_macro_expansion","parse_or_expand","partial_cmp","program_clauses_for_chalk_env","program_clauses_for_chalk_env","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","return_type_impl_traits","return_type_impl_traits","set_enable_proc_attr_macros","set_enable_proc_attr_macros_with_durability","static_data","static_data","struct_data","struct_data","struct_datum","struct_datum","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trait_data","trait_data","trait_datum","trait_datum","trait_environment","trait_environment","trait_impls_in_block","trait_impls_in_block","trait_impls_in_crate","trait_impls_in_crate","trait_impls_in_deps","trait_impls_in_deps","trait_solve","trait_solve_query","trait_solve_query","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","ty","type_alias_data","type_alias_data","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union_data","union_data","value_ty","value_ty","variants_attrs","variants_attrs","variants_attrs_source_map","variants_attrs_source_map","AnyDiagnostic","BreakOutsideOfLoop","BreakOutsideOfLoop","InactiveCode","InactiveCode","IncorrectCase","IncorrectCase","MacroError","MacroError","MismatchedArgCount","MismatchedArgCount","MissingFields","MissingFields","MissingMatchArms","MissingMatchArms","MissingOkOrSomeInTailExpr","MissingOkOrSomeInTailExpr","MissingUnsafe","MissingUnsafe","NoSuchField","NoSuchField","RemoveThisSemicolon","RemoveThisSemicolon","ReplaceFilterMapNextWithFindMap","ReplaceFilterMapNextWithFindMap","UnimplementedBuiltinMacro","UnimplementedBuiltinMacro","UnresolvedExternCrate","UnresolvedExternCrate","UnresolvedImport","UnresolvedImport","UnresolvedMacroCall","UnresolvedMacroCall","UnresolvedModule","UnresolvedModule","UnresolvedProcMacro","UnresolvedProcMacro","arms","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_expr","candidate","cfg","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","decl","decl","decl","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","expected","expected","expected_case","expr","expr","expr","expr","field","field_list_parent","field_list_parent_path","file","file","file","file","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","found","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","ident","ident_text","ident_type","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","macro_call","macro_name","match_expr","message","missed_fields","ne","ne","ne","ne","next_expr","node","node","node","node","opts","path","precise_location","required","suggested_text","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Adt","AssociatedItem","BuiltinType","Const","Contains","EnumVariant","Equals","Function","Fuzzy","ImportInfo","ImportKind","ImportMap","ImportPath","Module","Query","SearchMode","Static","Trait","TypeAlias","assoc_items_only","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","case_sensitive","clone","clone","clone_into","clone_into","container","default","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","exclude_import_kind","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","import_info_for","import_map_query","into","into","into","into","into","into","is_trait_assoc_item","limit","name_only","ne","ne","new","path","path_of","search_dependencies","search_mode","segments","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Box","Clone","Copy","Debug","Default","Eq","Future","Hash","Index","IntoIterator","Item","Iterator","Neg","Not","Ok","Option","Ord","Output","PartialEq","PartialOrd","Range","RangeFrom","RangeFull","RangeInclusive","RangeTo","RangeToInclusive","Result","SELF_PARAM","SELF_TYPE","STATIC_LIFETIME","Target","Try","abort","add_with_overflow","alloc","asm","assert","bench","bitreverse","bool","boxed","bswap","caller_location","cfg","cfg_accessible","cfg_attr","cfg_eval","char","column","compile_error","concat","concat_idents","core","core_panic","ctlz","ctpop","cttz","derive","discriminant_value","doc","env","f32","f64","file","filter_map","forget","format_args","format_args_nl","future","global_allocator","global_asm","i128","i16","i32","i64","i8","include","include_bytes","include_str","is_empty","isize","iter","iter_mut","len","likely","line","llvm_asm","macro_rules","maxnumf32","maxnumf64","min_align_of","min_align_of_val","minnumf32","minnumf64","module_path","mul_with_overflow","needs_drop","next","ops","option","option_env","prelude","ptr_guaranteed_eq","ptr_guaranteed_ne","register_attr","register_tool","result","rotate_left","rotate_right","rust_2015","rust_2018","rust_2021","rustc_peek","saturating_add","saturating_sub","size_of","size_of_val","std","std_panic","str","stringify","sub_with_overflow","test","test_case","type_id","type_name","u128","u16","u32","u64","u8","unlikely","usize","v1","variant_count","wrapping_add","wrapping_mul","wrapping_sub"],"q":["hirhir::CfgAtom","","hir::dbhir::diagnosticshir::import_map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir::known","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Absolute path (::foo)","","A Data Type","","","","","","","","Invariant: <code>inner.as_assoc_item(db).is_some()</code> We do not …","","","","","","A procedural attribute macro.","","","","A built-in function-like macro.","","","Causes paths to start with <code>crate</code> where applicable, …","Causes paths to always start with either <code>self</code>, <code>super</code>, …","","","","A simple configuration value passed in from the outside.","","Configuration options used for conditional compilation on …","","","","","","","","A const parameter","","hir::Crate describes a single crate. It’s the main …","","","<code>macro_rules!</code> or Macros 2.0 macro.","An item","","The defs which have a body.","A built-in or custom derive.","Holds documentation","<code>$crate</code> from macro expansion","","","","","","","","","","eg. <code>#[cfg(test)]</code>","A fn pointer. Last element of the vector is the return …","","","","","","","","","","","Trait for obtaining the defining crate of an item.","","","","Input to the analyzer is a set of files, where each file …","","","","","","<code>InFile<T></code> stores a value of <code>T</code> inside a particular …","","","","eg. <code>#[cfg(target_os = \\\"linux\\\")]</code>","","","","","","A local binding (only value namespace)","","","","","","","","","","","","","","Visibility is restricted to a certain module.","The defs which can be visible in the module.","","","","","<code>Name</code> is a wrapper around string, which is used in hir for …","","","","","","","","","","","","","Causes paths to ignore imports in the local module.","","","A function-like procedural macro.","Visibility is unrestricted.","","","","For IDE only","","","Primary API to get semantic information, like types, from …","<code>SemanticScope</code> encapsulates the notion of a scope (the set …","","","","","","","","","","","","<code>self::</code> is <code>Super(0)</code>","","","","","","","","","","","","","","","","A type parameter","","Compare ty::Ty","","","","","","","","","","","","","","","Visibility of an item, with the path resolved.","","The adjusted type, or the original in case no adjustments …","The adjusted type, if an adjustment happened.","","","","","","","","","","If a type can be represented as <code>dyn Trait</code>, returns all …","","","","","","","","","","","","","If this path is a single identifier, like <code>foo</code>, return its …","","","","","","","","","","","","Returns an iterator over associated types that may be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If this is a macro call, returns the syntax node of the …","","","","","","Iterates over all child modules.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Topmost parent of this module. Every module has a …","Re-exports various subcrates databases so that the …","","","A textual representation of the HIR of this function for …","Returns a node which declares this module, either a …","","","","","Returns a node which defines this module. That is, a file …","","","","","","","Re-export diagnostics such that clients of <code>hir</code> don’t …","","","","","","Returns a <code>Display</code>able type that is human-readable. Use …","","Returns a String representation of <code>self</code> that can be …","Returns a String representation of <code>self</code> for test purposes","Returns a <code>Display</code>able type that is human-readable and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If <code>item</code> has an attribute macro attached to it, expands it.","Return expansion information if it is a macro-expansion …","","","","","","","","","","","Find a AstNode by offset inside SyntaxNode, if it is …","Find a AstNode by offset inside SyntaxNode, if it is …","Finds a path that can be used to refer to the given item …","Finds a path that can be used to refer to the given item …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fold the cfg by querying all basic <code>Atom</code> and <code>KeyValue</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts an <code>ast::TypeRef</code> to a <code>hir::TypeRef</code>.","Creates a <code>ModPath</code> from a <code>PathKind</code>, with no extra path …","","","","","","Try to get the root URL of the documentation of a crate.","","Whether this function declaration has a definition.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks that particular type <code>ty</code> implements <code>std::ops::FnOnce</code>…","Checks that particular type <code>ty</code> implements …","","A map of all publicly exported items in a crate.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a <code>Display</code>able type that is human-readable.","","","","","","Indicate it is macro file generated for builtin derive","","","","","","Return whether this file is an include macro","","","","","","","","","","","","","","","Returns <code>true</code> when the atom comes from the target …","","","","","","","","","","","","","","","","","","","","","","","","Returns the crate this module is part of.","","","Returns the crate defining this item (or <code>None</code> if <code>self</code> is …","","","","Returns the number of segments in the path (counting …","","","","A fake name for things missing in the source code.","","","","","","","","","","","","","","","FIXME: right now, this just returns the root module of …","","","","","","","","","","Name of this module.","","","","","","","","","","","","","","","","XXX: this parses the file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The original type of the expression or pattern.","For macro-expansion files, returns the file original …","","","","","Finds a parent module.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get this function’s return type","","","","","","Returns a <code>ModuleScope</code>: a set of items, visible in this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Resolve a path as-if it was written at the given scope. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Note: <code>FxHashSet<TraitId></code> should be treated as an opaque …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type as in the signature of the struct (i.e., …","","","","Turns this ADT into a type. Any type parameters of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Representative struct for the query group.","","","","","","","","","","","","","Representative struct for the query group.","","","","","","","","","","","","","","","","","","","Representative struct for the query group.","","","","","","","","","","","","","","","","","","","","","Representative struct for the query group.","","","","","","","","","","","","","","","","","","","","","","","","This exists just for Chalk, because Chalk just has a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the block-level <code>DefMap</code>, returning <code>None</code> when <code>block</code>…pecial case of the previous query for procedural macros. …et access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","","","","","","","","","","","","","","","","","","","","","","","","","","Macro ids. That’s probably the tricksiest bit in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lowers syntactic macro call to a token tree …","Extracts syntax node, corresponding to a macro call. That…","Gets the expander for this macro. This compiles …","Expand macro call to a token tree. This query is LRUed …","Firewall query that returns the error from the …","","","","","","","","","","","","","Implementation for the macro case.","Main public API – parses a hir file, not caring whether …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the value of the <code>enable_proc_attr_macros</code> input.","Set the value of the <code>enable_proc_attr_macros</code> input and …his expression is the whole method chain up to and …","","","","","","","If the diagnostic can be pinpointed more accurately than …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Import map entry should contain the query string.","","Import map entry should strictly match the query string.","","Import map entry should contain all letters from the …","Item import details stored in the <code>ImportMap</code>.","","A map from publicly exported items to the path needed to …","","","","A way to match import map contents against the search …","","","","Matches only the entries that are associated items, …","","","","","","","","","","","","","Respect casing of the query string when matching.","","","","","The module containing this item.","","","","","","","","","","Do not include imports of the specified kind in the …","","","","","","","","","","","","","","","","","","","","","","","Whether the import is a trait associated item or not.","Limits the returned number of items to <code>limit</code>.","Matches entries’ names only, ignoring the rest of the …","","","","A path that can be used to import the item, relative to …","Returns the <code>ModPath</code> needed to import/mention <code>item</code>, …","Searches dependencies of <code>krate</code> for an importable path …","Specifies the way to search for the entries using the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,0,2,3,4,5,5,6,0,0,7,0,8,5,0,9,0,0,10,9,0,2,11,11,12,0,0,0,0,0,13,0,2,14,15,3,0,7,16,0,1,0,9,7,12,0,9,0,1,6,17,0,18,6,19,0,0,0,20,6,0,13,2,14,15,3,0,0,4,0,0,0,0,0,0,0,21,3,4,6,0,0,5,0,20,0,4,0,16,0,7,4,7,6,0,4,0,0,22,23,0,0,2,10,24,0,4,0,25,0,0,26,0,6,5,0,19,0,6,0,0,6,1,11,26,0,9,24,6,27,6,0,0,7,0,0,19,25,6,10,0,2,14,0,18,28,0,1,0,2,21,3,6,27,13,13,0,0,2,15,3,0,0,7,16,0,22,23,0,18,28,27,4,22,23,0,2,28,3,0,0,29,30,30,31,32,32,32,4,33,33,34,34,35,36,35,37,2,38,39,40,35,35,34,35,35,41,35,25,25,42,23,34,43,44,45,33,38,7,46,47,2,48,49,50,51,52,18,38,39,53,54,40,55,23,15,16,56,57,58,32,4,35,33,19,13,7,30,59,22,31,60,47,2,48,26,49,50,51,52,18,28,14,38,42,29,39,53,54,40,61,9,55,23,15,21,3,43,62,16,56,57,58,32,35,63,4,20,5,36,44,17,64,65,41,1,25,6,27,10,24,11,45,66,67,34,12,68,69,33,19,13,7,30,59,22,31,60,47,2,48,26,49,50,51,52,18,28,14,38,42,29,39,53,54,40,61,9,55,23,15,21,3,43,62,16,56,57,58,32,35,63,4,20,5,36,44,17,64,65,41,1,25,6,27,10,24,11,45,66,67,34,12,68,69,17,66,2,2,31,17,36,47,7,22,31,47,2,48,49,50,51,52,18,28,14,38,42,29,39,53,54,40,61,9,55,23,15,3,43,62,16,56,57,58,32,35,20,5,36,44,17,64,65,41,1,25,6,27,10,24,11,45,66,67,34,68,7,22,31,47,2,48,49,50,51,52,18,28,14,38,42,29,39,53,54,40,61,9,55,23,15,3,43,62,16,56,57,58,32,35,20,5,36,44,17,64,65,41,1,25,6,27,10,24,11,45,66,67,34,68,34,20,41,1,45,15,15,15,15,35,35,47,0,33,59,38,47,47,56,36,17,47,31,17,64,33,33,34,0,47,2,38,33,29,70,31,70,70,70,46,47,48,49,50,51,52,18,38,39,53,54,40,55,15,16,56,57,58,32,17,64,31,7,22,31,47,2,48,26,49,50,51,52,18,28,14,38,29,39,53,54,40,61,9,55,23,15,3,43,62,16,56,57,58,32,35,4,20,5,36,44,17,64,65,41,1,25,6,27,10,24,11,45,66,67,34,12,68,7,22,31,47,2,48,26,49,50,51,52,18,28,14,38,29,39,53,54,40,61,9,55,23,15,3,43,62,16,56,57,58,32,35,4,20,5,36,44,17,64,65,41,1,25,6,27,10,24,11,45,66,67,34,12,68,68,33,33,66,66,69,49,50,52,28,35,69,34,34,33,33,47,47,33,7,30,59,22,31,60,47,2,48,26,49,50,51,52,18,28,14,38,42,29,39,53,54,40,61,9,55,23,15,21,3,43,62,16,56,57,58,32,35,63,4,20,20,5,36,44,17,64,65,41,41,1,25,6,27,10,24,11,45,45,66,67,34,12,68,69,5,33,19,19,13,7,30,59,22,31,31,60,47,47,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,48,48,26,49,49,50,50,51,51,52,52,18,18,18,18,18,28,28,28,28,28,14,14,14,14,14,38,38,42,29,39,39,53,53,54,54,40,40,61,61,9,55,55,23,23,23,23,15,15,21,3,3,3,3,3,3,3,3,3,3,3,3,43,43,62,62,16,16,16,16,16,56,56,57,57,58,58,32,32,35,63,4,4,20,5,5,36,44,17,64,65,41,41,1,25,6,27,10,24,11,45,66,66,66,67,34,12,68,68,69,6,41,25,41,41,36,36,31,30,38,17,18,40,22,31,47,2,48,49,50,51,52,18,28,14,38,29,39,53,54,40,61,9,55,23,15,3,43,62,16,56,57,58,32,4,20,5,44,41,1,25,6,24,45,66,67,34,70,47,48,49,50,51,52,18,38,39,53,54,40,16,56,57,58,35,6,69,69,69,47,35,35,35,0,36,36,33,19,13,7,30,59,22,31,60,47,2,48,26,49,50,51,52,18,28,14,38,42,29,39,53,54,40,61,9,55,23,15,21,3,43,62,16,56,57,58,32,35,63,4,20,5,36,44,17,64,65,41,1,25,6,27,10,24,11,45,66,67,34,12,68,69,70,38,33,54,35,32,66,35,35,35,55,41,66,66,47,53,43,35,32,35,35,43,35,43,35,43,41,20,35,35,38,54,33,33,33,35,71,24,54,32,35,35,35,49,52,55,63,41,0,72,59,47,48,38,23,15,4,60,41,34,68,38,45,59,2,49,50,51,52,18,28,14,38,39,53,54,40,55,15,43,62,16,56,57,58,32,63,47,2,48,49,50,51,52,18,28,14,38,39,53,54,40,61,55,15,43,62,16,56,57,58,60,7,31,47,2,48,26,49,50,51,52,18,28,14,38,29,39,53,54,40,61,55,23,15,3,43,62,16,56,57,58,32,35,4,20,5,36,44,17,64,65,41,1,6,10,24,45,66,67,34,68,33,44,34,45,45,35,68,68,30,30,66,34,33,3,63,47,43,62,57,58,48,52,33,5,20,41,1,45,47,42,41,31,59,41,31,63,33,33,35,49,33,46,47,48,49,50,51,52,18,38,39,53,54,40,55,15,16,56,57,58,32,33,33,33,33,33,33,33,33,33,33,33,33,18,68,38,63,31,31,31,33,47,33,33,41,38,32,8,48,49,50,51,52,38,42,29,39,53,54,40,55,43,62,56,57,58,32,64,33,59,41,6,68,65,35,69,34,33,33,33,34,7,22,31,47,2,48,49,50,51,52,18,28,14,38,42,29,39,53,54,40,61,9,55,23,15,3,43,62,16,56,57,58,32,35,20,5,36,44,17,64,65,41,1,25,6,27,10,24,11,45,66,67,34,68,20,41,45,33,32,56,59,31,34,33,19,13,7,30,59,22,31,60,47,2,48,26,49,50,51,52,18,28,14,38,42,29,39,53,54,40,61,9,55,23,15,21,3,43,62,16,56,57,58,32,35,63,4,20,5,36,44,17,64,65,41,1,25,6,27,10,24,11,45,66,67,34,12,68,69,33,19,13,7,30,59,22,31,60,47,2,48,26,49,50,51,52,18,28,14,38,42,29,39,53,54,40,61,9,55,23,15,21,3,43,62,16,56,57,58,32,35,63,4,20,5,36,44,17,64,65,41,1,25,6,27,10,24,11,45,66,67,34,12,68,69,35,48,49,50,51,18,42,39,53,40,61,43,56,58,35,33,19,13,7,30,59,22,31,60,47,2,48,26,49,50,51,52,18,28,14,38,42,29,39,53,54,40,61,9,55,23,15,21,3,43,62,16,56,57,58,32,35,63,4,20,5,36,44,17,64,65,41,1,25,6,27,10,24,11,45,66,67,34,12,68,69,33,33,33,3,40,34,68,51,71,47,2,48,49,50,51,52,18,38,39,53,54,40,15,35,6,34,73,73,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,75,76,77,78,79,80,81,74,75,74,75,82,83,84,83,84,83,84,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,84,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,75,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,76,77,78,79,80,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,84,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,75,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,76,77,78,79,80,81,74,75,76,77,78,79,80,81,76,77,78,79,80,81,81,83,84,74,75,83,83,84,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,83,84,83,84,76,77,78,79,80,81,76,77,78,79,80,81,82,83,84,74,75,83,84,83,84,83,84,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,76,77,78,79,80,81,86,84,75,74,75,74,75,86,84,75,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,84,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,75,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,76,77,78,79,79,80,80,81,81,76,77,78,79,80,81,83,84,83,84,74,75,83,84,74,75,74,75,76,77,78,79,80,81,82,83,84,74,75,74,75,74,75,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,74,74,75,74,75,183,86,74,75,74,75,183,86,74,75,183,86,183,86,183,86,74,75,74,75,82,183,86,183,86,183,86,183,86,74,75,183,86,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,84,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,75,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,76,77,78,79,80,81,83,84,183,86,74,75,74,75,183,86,74,75,183,86,183,86,183,86,74,75,74,75,82,183,86,183,86,183,86,183,86,74,75,183,86,82,82,82,82,82,86,84,75,76,77,78,79,80,81,86,84,75,82,82,81,74,75,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,74,75,83,83,83,84,83,84,74,75,76,77,78,79,80,81,83,84,74,75,74,75,74,75,74,75,74,75,74,74,75,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,84,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,75,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,76,77,78,79,80,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,84,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,75,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,76,77,78,79,80,81,74,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,84,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,75,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,76,77,78,79,80,81,83,84,74,75,83,84,83,84,0,0,184,0,184,0,184,0,184,0,184,0,184,0,184,0,184,0,184,0,184,0,184,0,184,0,184,0,184,0,184,0,184,0,184,0,184,185,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,185,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,185,199,186,190,189,190,191,192,189,190,191,192,186,187,188,189,190,191,192,189,190,191,192,199,201,69,195,196,200,201,194,197,197,197,198,185,69,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,185,199,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,185,69,69,69,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,185,189,191,185,192,197,189,190,191,192,198,190,191,192,193,190,189,191,201,69,189,190,191,192,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,185,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,185,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,185,202,202,202,202,203,202,203,202,203,0,0,0,0,202,0,0,202,202,202,204,205,206,207,202,203,204,205,206,207,202,203,204,204,205,206,205,206,205,207,205,206,207,202,205,206,207,202,204,205,206,206,207,202,203,204,205,206,207,202,203,204,202,207,207,205,206,207,202,203,204,205,204,204,205,206,204,205,207,0,204,206,205,206,206,205,206,207,202,203,204,205,206,207,202,203,204,205,206,207,202,203,204,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["hirdatabase",8]],["access",4]],[[],["type",3]],null,[[["hirdatabase",8]],[["vec",3],["crate",3]]],[[["trait",3],["hirdatabase",8]],[["vec",3],["impl",3]]],[[["hirdatabase",8],["type",3]],[["vec",3],["impl",3]]],[[["crate",3],["hirdatabase",8]],[["vec",3],["impl",3]]],[[["perns",3]],["arrayvec",3]],[[["textsize",3],["syntaxnode",6]]],[[["syntaxnode",6]]],[[["astdatabase",8]]],[[["astdatabase",8]]],[[["hirdatabase",8]]],[[["cfgdiff",3]]],[[],[["option",4],["adt",4]]],[[["hirdatabase",8]],[["associtem",4],["option",4]]],[[["hirdatabase",8]],[["associtem",4],["option",4]]],[[["hirdatabase",8]],[["associtem",4],["option",4]]],[[["hirdatabase",8]],[["associtem",4],["option",4]]],[[["hirdatabase",8]],[["associtem",4],["option",4]]],[[["hirdatabase",8]],[["trait",3],["option",4]]],[[],[["builtintype",3],["option",4]]],[[["defdatabase",8],["fnmut",8],["crateid",3]],[["result",4],["unresolvedmacro",3],["result",4]]],[[["hirdatabase",8]],[["option",4],["callable",3]]],[[],[["trait",3],["option",4]]],[[],[["option",4],["name",3]]],[[["hirdatabase",8]],[["vec",3],["option",4]]],[[],["str",15]],[[],["str",15]],[[["hirdatabase",8]],["local",3]],[[],[["moduledef",4],["option",4]]],[[],["infile",3]],[[["hirdatabase",8]],[["option",4],["selfparam",3]]],[[],["str",15]],[[],[["usize",15],["option",4]]],[[["syntaxnode",6]]],[[["hirdatabase",8]],[["vec",3],["param",3]]],[[["hirdatabase",8]],["option",4]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],[["attrswithowner",3],["option",4]]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],[["attrswithowner",3],["option",4]]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],[["attrswithowner",3],["option",4]]],[[["hirdatabasestr",15]],["attrquery",3]],[[["astdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],["option",4]],[[["hirdatabase",8]],[["option",4],["string",3]]],[[["hirdatabase",8]],["cfgoptions",3]],[[],[["option",4],["cfgexpr",4]]],[[["cfgexpr",4]],[["option",4],["bool",15]]],[[["hirdatabase",8]]],[[],["pathresolution",4]],[[],["namespace",4]],[[],["crate",3]],[[],["module",3]],[[],["moduledef",4]],[[],["field",3]],[[],["struct",3]],[[],["union",3]],[[],["enum",3]],[[],["variant",3]],[[],["adt",4]],[[],["variantdef",4]],[[],["defwithbody",4]],[[],["function",3]],[[],["param",3]],[[],["selfparam",3]],[[],["const",3]],[[],["static",3]],[[],["trait",3]],[[],["typealias",3]],[[],["builtintype",3]],[[],["macrokind",4]],[[],["macrodef",3]],[[],["iteminns",4]],[[],["associtem",4]],[[],["genericdef",4]],[[],["local",3]],[[],["label",3]],[[],["genericparam",4]],[[],["typeparam",3]],[[],["lifetimeparam",3]],[[],["constparam",3]],[[],["impl",3]],[[],["type",3]],[[],["cfgatom",4]],[[],["cfgexpr",4]],[[],["cfgoptions",3]],[[],["documentation",3]],[[],["attrs",3]],[[],["attrswithowner",3]],[[],["attr",3]],[[],["modpath",3]],[[],["pathkind",4]],[[],["mutability",4]],[[],["typeref",4]],[[],["structkind",4]],[[],["modulesource",4]],[[],["visibility",4]],[[],["prefixkind",4]],[[],["name",3]],[[],["hirfileid",3]],[[],["macrofile",3]],[[],["infile",3]],[[],["expandresult",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["infile",3]],[[["cfgatom",4]],["ordering",4]],[[["modpath",3]],["ordering",4]],[[["pathkind",4]],["ordering",4]],[[["name",3]],["ordering",4]],[[["hirdatabase",8]],["associtemcontainer",4]],[[["hirdatabase",8]],[["trait",3],["option",4]]],[[["hirdatabase",8]],[["trait",3],["option",4]]],[[["hirdatabase",8]],[["trait",3],["option",4]]],[[],["bool",15]],[[["type",3],["hirdatabase",8]],["bool",15]],[[["hirdatabase",8]],["module",3]],null,null,null,[[["hirdatabase",8]],["string",3]],[[["hirdatabase",8]],[["option",4],["infile",3]]],[[["hirdatabase",8]],[["moduledef",4],["vec",3]]],[[["hirdatabase",8]],[["option",4],["type",3]]],[[],["cfgoptions",3]],[[],["attrs",3]],[[["hirdatabase",8]],[["infile",3],["modulesource",4]]],[[["hirdatabase",8]],[["vec",3],["cratedependency",3]]],[[]],[[],["attrs",3]],[[["syntaxtoken",6]],["syntaxtoken",6]],[[["textsize",3],["syntaxnode",6]],[["option",4],["astnode",8]]],[[]],null,[[["hirdatabase",8],["vec",3]]],[[["hirdatabase",8]],[["anydiagnostic",4],["vec",3]]],[[["hirdatabase",8],["vec",3]]],[[["syntaxnodeptr",3],["infile",3]],["filerange",3]],[[["hirdatabase",8]],["str",15]],[[["hirdatabase",8]],["hirdisplaywrapper",3]],[[["hirdatabase",8]],[["option",4],["cratedisplayname",3]]],[[["hirdatabase",8],["moduleid",3]],[["string",3],["result",4],["displaysourcecodeerror",4]]],[[["hirdatabase",8]],["hirdisplaywrapper",3]],[[["hirdatabase",8],["usize",15],["option",4]],["hirdisplaywrapper",3]],[[["hirdatabase",8]],[["option",4],["documentation",3]]],[[["hirdatabase",8]],[["option",4],["documentation",3]]],[[["hirdatabase",8]],[["option",4],["documentation",3]]],[[["hirdatabase",8]],[["option",4],["documentation",3]]],[[["hirdatabase",8]],[["option",4],["documentation",3]]],[[["hirdatabase",8]],[["option",4],["documentation",3]]],[[["hirdatabase",8]],[["option",4],["documentation",3]]],[[["hirdatabase",8]],[["option",4],["documentation",3]]],[[["hirdatabase",8]],[["option",4],["documentation",3]]],[[["hirdatabase",8]],[["option",4],["documentation",3]]],[[["hirdatabase",8]],[["option",4],["documentation",3]]],[[["hirdatabase",8]],[["option",4],["documentation",3]]],[[["hirdatabase",8]],[["option",4],["documentation",3]]],[[["hirdatabase",8]],[["option",4],["documentation",3]]],[[["hirdatabase",8]],[["option",4],["documentation",3]]],[[["hirdatabase",8]],[["option",4],["documentation",3]]],[[["hirdatabase",8]],[["option",4],["documentation",3]]],[[["hirdatabase",8]],[["option",4],["documentation",3]]],[[["hirdatabase",8]],[["option",4],["documentation",3]]],[[["hirdatabase",8]],[["option",4],["documentation",3]]],[[],[["documentation",3],["option",4]]],[[["defdatabase",8]],["option",4]],[[["hirdatabase",8]],["edition",4]],[[["pathresolution",4]],["bool",15]],[[["namespace",4]],["bool",15]],[[["crate",3]],["bool",15]],[[["module",3]],["bool",15]],[[["moduledef",4]],["bool",15]],[[["field",3]],["bool",15]],[[["fieldsource",4]],["bool",15]],[[["struct",3]],["bool",15]],[[["union",3]],["bool",15]],[[["enum",3]],["bool",15]],[[["variant",3]],["bool",15]],[[["adt",4]],["bool",15]],[[["variantdef",4]],["bool",15]],[[["defwithbody",4]],["bool",15]],[[["function",3]],["bool",15]],[[["selfparam",3]],["bool",15]],[[["const",3]],["bool",15]],[[["static",3]],["bool",15]],[[["trait",3]],["bool",15]],[[["typealias",3]],["bool",15]],[[["builtintype",3]],["bool",15]],[[["macrokind",4]],["bool",15]],[[["macrodef",3]],["bool",15]],[[["iteminns",4]],["bool",15]],[[["associtem",4]],["bool",15]],[[["genericdef",4]],["bool",15]],[[["local",3]],["bool",15]],[[["label",3]],["bool",15]],[[["genericparam",4]],["bool",15]],[[["typeparam",3]],["bool",15]],[[["lifetimeparam",3]],["bool",15]],[[["constparam",3]],["bool",15]],[[["impl",3]],["bool",15]],[[["type",3]],["bool",15]],[[["scopedef",4]],["bool",15]],[[["cfgatom",4]],["bool",15]],[[["cfgexpr",4]],["bool",15]],[[["cfgoptions",3]],["bool",15]],[[["documentation",3]],["bool",15]],[[["attrs",3]],["bool",15]],[[["attrswithowner",3]],["bool",15]],[[["attr",3]],["bool",15]],[[["modpath",3]],["bool",15]],[[["pathkind",4]],["bool",15]],[[["mutability",4]],["bool",15]],[[["typeref",4]],["bool",15]],[[["structkind",4]],["bool",15]],[[["modulesource",4]],["bool",15]],[[["visibility",4]],["bool",15]],[[["prefixkind",4]],["bool",15]],[[["name",3]],["bool",15]],[[["hirfileid",3]],["bool",15]],[[["macrofile",3]],["bool",15]],[[["infile",3]],["bool",15]],[[["origin",4]],["bool",15]],[[["expandresult",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[["macrocall",3]],[["option",4],["syntaxnode",6]]],[[["item",4]],[["option",4],["syntaxnode",6]]],[[["astdatabase",8]],[["option",4],["expansioninfo",3]]],[[["astdatabase",8]],["u32",15]],null,[[["hirdatabase",8]],[["vec",3],["field",3]]],[[["hirdatabase",8]],[["vec",3],["field",3]]],[[["hirdatabase",8]],[["vec",3],["field",3]]],[[["hirdatabase",8]],[["vec",3],["field",3]]],[[["hirdatabase",8]],["vec",3]],null,null,[[["astdatabase",8]],[["syntaxnode",3],["rustlanguage",4]]],[[["textsize",3],["syntaxnode",6]],[["option",4],["astnode",8]]],[[["textsize",3],["syntaxnode",6]],[["option",4],["astnode",8]]],[[["defdatabase",8]],[["option",4],["modpath",3]]],[[["defdatabase",8],["prefixkind",4]],[["option",4],["modpath",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["fn",8]],[["option",4],["bool",15]]],[[]],[[["mutability",4]],["access",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["crateid",3]],["crate",3]],[[]],[[]],[[]],[[["moduleid",3]],["module",3]],[[["associtem",4]]],[[["union",3]],["moduledef",4]],[[]],[[["moduledefid",4]]],[[["variantdef",4]]],[[["builtintype",3]],["moduledef",4]],[[["typealias",3]],["moduledef",4]],[[["module",3]],["moduledef",4]],[[["function",3]],["moduledef",4]],[[["trait",3]],["moduledef",4]],[[["adt",4]],["moduledef",4]],[[["struct",3]],["moduledef",4]],[[["enum",3]],["moduledef",4]],[[["static",3]],["moduledef",4]],[[["variant",3]],["moduledef",4]],[[["const",3]],["moduledef",4]],[[]],[[["fieldid",3]]],[[]],[[["structid",3]],["struct",3]],[[]],[[["unionid",3]],["union",3]],[[]],[[["enumid",3]],["enum",3]],[[]],[[]],[[["enumvariantid",3]]],[[["struct",3]],["adt",4]],[[]],[[["adtid",4]]],[[["union",3]],["adt",4]],[[["enum",3]],["adt",4]],[[["variant",3]],["variantdef",4]],[[["struct",3]],["variantdef",4]],[[["union",3]],["variantdef",4]],[[]],[[["variantid",4]]],[[["function",3]],["defwithbody",4]],[[["const",3]],["defwithbody",4]],[[]],[[["static",3]],["defwithbody",4]],[[["defwithbodyid",4]]],[[["functionid",3]],["function",3]],[[]],[[]],[[]],[[]],[[["constid",3]],["const",3]],[[]],[[["staticid",3]],["static",3]],[[]],[[["traitid",3]],["trait",3]],[[["typealiasid",3]],["typealias",3]],[[]],[[]],[[["builtintype",4]]],[[]],[[]],[[["macrodefid",3]],["macrodef",3]],[[["iteminns",4]]],[[["moduledef",4]]],[[["macrodef",3]]],[[]],[[["associtemid",4]]],[[]],[[]],[[["typealias",3]],["genericdef",4]],[[]],[[["const",3]],["genericdef",4]],[[["adt",4]],["genericdef",4]],[[["struct",3]],["genericdef",4]],[[["enum",3]],["genericdef",4]],[[["union",3]],["genericdef",4]],[[["impl",3]],["genericdef",4]],[[["genericdefid",4]]],[[["variant",3]],["genericdef",4]],[[["trait",3]],["genericdef",4]],[[["function",3]],["genericdef",4]],[[]],[[]],[[]],[[]],[[["lifetimeparam",3]],["genericparam",4]],[[["constparam",3]],["genericparam",4]],[[["typeparam",3]],["genericparam",4]],[[["genericparamid",4]]],[[]],[[["typeparamid",3]],["typeparam",3]],[[]],[[]],[[["lifetimeparamid",3]],["lifetimeparam",3]],[[]],[[["constparamid",3]],["constparam",3]],[[]],[[["implid",3]],["impl",3]],[[]],[[]],[[["iteminns",4]]],[[]],[[]],[[]],[[["cfgatom",4]],["cfgexpr",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["name",3]],["modpath",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["macrofile",3]],["hirfileid",3]],[[["fileid",3]],["hirfileid",3]],[[]],[[]],[[]],[[["result",4],["expanderror",4]],["expandresult",3]],[[]],[[]],[[["lowerctx",3],["type",4]],["typeref",4]],[[["pathkind",4]],["modpath",3]],[[["bool",15]],["mutability",4]],[[["pathkind",4]],["modpath",3]],[[["defdatabase",8],["path",3],["hygiene",3]],[["modpath",3],["option",4]]],[[],[["vec",3],["smolstr",3],["global",3]]],[[["str",15]],[["vec",3],["smolstr",3],["global",3]]],[[["crate",3],["hirdatabase",8]],[["option",4],["string",3]]],[[],["bool",15]],[[["hirdatabase",8]],["bool",15]],[[],["bool",15]],[[["hirdatabase",8]],["bool",15]],[[["hirdatabase",8]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["hirformatter",3]],[["hirdisplayerror",4],["result",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["hirdisplayerror",4],["result",4]]],null,null,null,[[["hirdatabase",8]],[["vec",3],["impl",3]]],[[["hirdatabase",8]],["bool",15]],[[["hirdatabase",8]],["bool",15]],[[["trait",3],["hirdatabase",8]],["bool",15]],null,[[["smolstr",3]]],[[["smolstr",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bool",15],["displaytarget",4],["hirdatabase",8],["usize",15],["option",4]],["hirdisplaywrapper",3]],[[["hirdatabase",8]],["bool",15]],[[["item",4]],["bool",15]],[[["hirdatabase",8]],["bool",15]],[[],["bool",15]],[[["hirdatabase",8]],[["option",4],["infile",3]]],[[["astdatabase",8]],[["option",4],["infile",3]]],[[],["bool",15]],[[["hirdatabase",8]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["astdatabase",8]],["bool",15]],[[],["bool",15]],[[["hirdatabase",8]],["bool",15]],[[["hirdatabase",8]],["bool",15]],[[["hirdatabase",8]],["bool",15]],[[],["bool",15]],[[["hirdatabase",8]],["bool",15]],[[],["bool",15]],[[["hirdatabase",8]],["bool",15]],[[["hirdatabase",8]],["bool",15]],[[],["bool",15]],[[["hirdatabase",8]],["bool",15]],[[],["bool",15]],[[["hirdatabase",8]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["hirdatabase",8]],["bool",15]],[[["hirdatabase",8]],["bool",15]],[[["identpat",3]],["bool",15]],[[["methodcallexpr",3]],["bool",15]],[[["refexpr",3]],["bool",15]],[[],["bool",15]],[[["hirdatabase",8],["module",3]],["bool",15]],[[["defdatabase",8],["moduleid",3]],["bool",15]],[[["hirdatabase",8]],[["associtem",4],["vec",3]]],[[["hirdatabase",8]],[["associtem",4],["vec",3]]],[[["crate",3],["hirdatabase",8]],["option",4]],[[["crate",3],["fxhashset",6],["name",3],["hirdatabase",8],["option",4]],["option",4]],[[["crate",3],["fxhashset",6],["name",3],["hirdatabase",8],["option",4]],["option",4]],[[["hirdatabase",8]],["structkind",4]],[[["hirdatabase",8]],["structkind",4]],[[],["macrokind",4]],[[],["callablekind",4]],null,null,[[["hirdatabase",8]],["crate",3]],[[],[["option",4],["crate",3]]],[[],["crate",3]],[[["hirdatabase",8]],["crate",3]],[[["hirdatabase",8]],["crate",3]],[[["hirdatabase",8]],[["option",4],["crate",3]]],[[["hirdatabase",8]],["crate",3]],[[["hirdatabase",8]],[["option",4],["crate",3]]],null,[[],["usize",15]],[[],["infile",3]],[[],["expandresult",3]],[[["hirdatabase",8]],[["vec",3],["option",4]]],[[],["name",3]],[[],[["option",4],["module",3]]],[[["hirdatabase",8]],[["option",4],["module",3]]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],[["option",4],["module",3]]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[],["usize",15]],[[["hirdatabase",8]],[["name",3],["option",4]]],[[["hirdatabase",8]],[["name",3],["option",4]]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],[["name",3],["option",4]]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],[["name",3],["option",4]]],[[["hirdatabase",8]],[["name",3],["option",4]]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["name",3]],[[],["name",3]],[[["hirdatabase",8]],[["name",3],["option",4]]],[[["hirdatabase",8]],[["name",3],["option",4]]],[[["hirdatabase",8]],[["name",3],["option",4]]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["name",3]],null,[[["pathresolution",4]],["bool",15]],[[["crate",3]],["bool",15]],[[["module",3]],["bool",15]],[[["moduledef",4]],["bool",15]],[[["field",3]],["bool",15]],[[["fieldsource",4]],["bool",15]],[[["struct",3]],["bool",15]],[[["union",3]],["bool",15]],[[["enum",3]],["bool",15]],[[["variant",3]],["bool",15]],[[["adt",4]],["bool",15]],[[["variantdef",4]],["bool",15]],[[["defwithbody",4]],["bool",15]],[[["function",3]],["bool",15]],[[["selfparam",3]],["bool",15]],[[["const",3]],["bool",15]],[[["static",3]],["bool",15]],[[["trait",3]],["bool",15]],[[["typealias",3]],["bool",15]],[[["builtintype",3]],["bool",15]],[[["macrodef",3]],["bool",15]],[[["iteminns",4]],["bool",15]],[[["associtem",4]],["bool",15]],[[["genericdef",4]],["bool",15]],[[["local",3]],["bool",15]],[[["label",3]],["bool",15]],[[["genericparam",4]],["bool",15]],[[["typeparam",3]],["bool",15]],[[["lifetimeparam",3]],["bool",15]],[[["constparam",3]],["bool",15]],[[["impl",3]],["bool",15]],[[["type",3]],["bool",15]],[[["scopedef",4]],["bool",15]],[[["cfgatom",4]],["bool",15]],[[["cfgexpr",4]],["bool",15]],[[["cfgoptions",3]],["bool",15]],[[["documentation",3]],["bool",15]],[[["attrs",3]],["bool",15]],[[["attrswithowner",3]],["bool",15]],[[["attr",3]],["bool",15]],[[["modpath",3]],["bool",15]],[[["pathkind",4]],["bool",15]],[[["typeref",4]],["bool",15]],[[["modulesource",4]],["bool",15]],[[["visibility",4]],["bool",15]],[[["name",3]],["bool",15]],[[["hirfileid",3]],["bool",15]],[[["macrofile",3]],["bool",15]],[[["infile",3]],["bool",15]],[[["expandresult",3]],["bool",15]],[[],["semantics",3]],[[["string",3]],["documentation",3]],[[["hirfileid",3]],["infile",3]],[[["lifetime",3]],["name",3]],[[["usize",15]],["name",3]],[[["typealias",3],["hirdatabase",8]],[["option",4],["type",3]]],[[],["expandresult",3]],[[["expanderror",4]],["expandresult",3]],[[],["type",3]],null,[[["astdatabase",8]],["fileid",3]],[[["astdatabase",8]],["filerange",3]],[[["syntaxnode",6]],["filerange",3]],[[["hirdatabase",8]],[["vec",3],["genericparam",4]]],[[["hirdatabase",8]],["vec",3]],[[["hirdatabase",8]],[["option",4],["module",3]]],[[["hirdatabase",8]],["defwithbody",4]],[[["hirdatabase",8]],["defwithbody",4]],[[["hirdatabase",8]],["genericdef",4]],[[["hirdatabase",8]],["genericdef",4]],[[["hirdatabase",8]],["variantdef",4]],[[["hirdatabase",8]],["enum",3]],[[["fileid",3]],["sourcefile",3]],[[["subtree",3]],["cfgexpr",4]],[[["cfgatom",4]],[["option",4],["ordering",4]]],[[["modpath",3]],[["option",4],["ordering",4]]],[[["pathkind",4]],[["option",4],["ordering",4]]],[[["name",3]],[["option",4],["ordering",4]]],[[["hirdatabase",8]],[["vec",3],["module",3]]],[[["hirdatabase",8]],[["option",4],["pat",4]]],[[],[["option",4],["name",3]]],[[["hirdatabase",8]],["cfgoptions",3]],[[["fnmut",8]]],[[["name",3]]],[[["query",3],["defdatabase",8]]],[[["hirdatabase",8]],[["selfparam",3],["option",4]]],[[["recordexpr",3]],["vec",3]],[[["recordpat",3]],["vec",3]],[[],[["option",4],["type",3]]],[[["hirdatabase",8]],[["option",4],["reprkind",4]]],[[["identpat",3]],[["moduledef",4],["option",4]]],[[["option",4],["str",15],["namespace",4],["hirdatabase",8]],[["option",4],["either",4]]],[[["option",4],["str",15],["namespace",4],["hirdatabase",8]],[["option",4],["either",4]]],[[["option",4],["str",15],["namespace",4],["hirdatabase",8]],[["option",4],["either",4]]],[[["option",4],["str",15],["namespace",4],["hirdatabase",8]],[["option",4],["either",4]]],[[["option",4],["str",15],["namespace",4],["hirdatabase",8]],[["option",4],["either",4]]],[[["option",4],["str",15],["namespace",4],["hirdatabase",8]],[["option",4],["either",4]]],[[["option",4],["str",15],["namespace",4],["hirdatabase",8]],[["option",4],["either",4]]],[[["option",4],["str",15],["namespace",4],["hirdatabase",8]],[["option",4],["either",4]]],[[["option",4],["str",15],["namespace",4],["hirdatabase",8]],[["option",4],["either",4]]],[[["option",4],["str",15],["namespace",4],["hirdatabase",8]],[["option",4],["either",4]]],[[["option",4],["str",15],["namespace",4],["hirdatabase",8]],[["option",4],["either",4]]],[[["option",4],["str",15],["namespace",4],["hirdatabase",8]],[["option",4],["either",4]]],[[["option",4],["str",15],["namespace",4],["hirdatabase",8]],[["option",4],["either",4]]],[[["option",4],["str",15],["namespace",4],["hirdatabase",8]],[["option",4],["either",4]]],[[["option",4],["str",15],["namespace",4],["hirdatabase",8]],[["option",4],["either",4]]],[[["option",4],["str",15],["namespace",4],["hirdatabase",8]],[["option",4],["either",4]]],[[["option",4],["str",15],["namespace",4],["hirdatabase",8]],[["option",4],["either",4]]],[[["option",4],["str",15],["namespace",4],["hirdatabase",8]],[["option",4],["either",4]]],[[["option",4],["str",15],["namespace",4],["hirdatabase",8]],[["option",4],["either",4]]],[[["option",4],["str",15],["namespace",4],["hirdatabase",8]],[["option",4],["either",4]]],[[["externcrate",3]],[["option",4],["crate",3]]],[[["fieldexpr",3]],[["option",4],["field",3]]],[[["lifetime",3]],[["label",3],["option",4]]],[[["lifetime",3]],[["option",4],["lifetimeparam",3]]],[[["macrocall",3]],[["macrodef",3],["option",4]]],[[["methodcallexpr",3]],[["option",4],["function",3]]],[[["methodcallexpr",3]],[["option",4],["callable",3]]],[[["path",3]],[["pathresolution",4],["option",4]]],[[["recordexprfield",3]],["option",4]],[[["recordpatfield",3]],[["option",4],["field",3]]],[[["type",4]],[["option",4],["type",3]]],[[["recordexpr",3]],[["option",4],["variantdef",4]]],[[["defdatabase",8]],["resolver",3]],[[],[["result",4],["expanderror",4]]],[[["hirdatabase",8]],["type",3]],[[],["type",3]],[[["hirdatabase",8]],[["vec",3],["crate",3]]],[[["hirdatabase",8]],["fileid",3]],[[["hirdatabase",8]],["module",3]],[[["syntaxnode",6]],["semanticsscope",3]],[[["option",4],["hirdatabase",8],["module",3]],["vec",3]],[[["textsize",3],["syntaxtoken",6]],["semanticsscope",3]],[[["trait",3]],["semanticsscope",3]],[[]],[[["hirdatabase",8]],[["option",4],["selfparam",3]]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],[["option",4],["infile",3]]],[[["hirdatabase",8]],[["option",4],["infile",3]]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],[["infile",3],["either",4]]],[[["hirdatabase",8]],[["label",3],["infile",3]]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["hirdatabase",8]],[["infile",3],["option",4]]],[[["defdatabase",8]],["attrsourcemap",3]],[[["macrocall",3],["syntaxtoken",6],["tokentree",3]],["option",4]],[[["path",3]],[["pathresolution",4],["option",4]]],[[],["internstorage",3]],[[],["internstorage",3]],[[["string",3]],["expandresult",3]],[[],[["smolstr",3],["option",4]]],[[],["type",3]],null,[[],[["infile",3],["syntaxnode",3]]],[[],["option",4]],[[["fileid",3]],[["option",4],["module",3]]],[[["fileid",3]]],[[["astdatabase",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[["syntaxtoken",6]]],[[["hirdatabase",8]],[["trait",3],["option",4]]],[[["hirdatabase",8]],[["vec",3],["trait",3]]],[[],[["fxhashset",6],["traitid",3]]],[[["hirdatabase",8]],[["vec",3],["crate",3]]],[[],[["option",4],["infile",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["hirdatabase",8]],[["vec",3],["type",3]]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],["type",3]],[[],["type",3]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8],["module",3]],["type",3]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],["type",3]],[[]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["expr",4]],[["option",4],["typeinfo",3]]],[[["pat",4]],[["option",4],["typeinfo",3]]],[[["selfparam",3]],[["option",4],["type",3]]],[[["hirdatabase",8]],[["typeparam",3],["vec",3]]],[[["hirdatabase",8]],[["option",4],["typeref",4]]],null,null,[[["hirdatabase",8]],[["variant",3],["vec",3]]],[[["hirdatabase",8]],["visibility",4]],[[["hirdatabase",8]],["visibility",4]],[[["hirdatabase",8]],["visibility",4]],[[["hirdatabase",8]],["visibility",4]],[[["hirdatabase",8]],["visibility",4]],[[["hirdatabase",8]],["visibility",4]],[[["hirdatabase",8]],["visibility",4]],[[["hirdatabase",8]],["visibility",4]],[[["hirdatabase",8]],["visibility",4]],[[["hirdatabase",8]],["visibility",4]],[[["hirdatabase",8]],["visibility",4]],[[["hirdatabase",8]],["visibility",4]],[[["hirdatabase",8]],["visibility",4]],[[["hirdatabase",8]],["visibility",4]],[[["hirdatabase",8]],["visibility",4]],[[["hirdatabase",8]]],[[]],[[],["infile",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["interner",3],["adtid",3]],[["interner",3],["variances",3]]],null,[[],["internid",3]],[[],["internid",3]],[[],["internid",3]],[[],["internid",3]],[[],["internid",3]],[[],["internid",3]],[[["interner",3],["assoctypeid",3]],[["arc",3],["associatedtydatum",3]]],null,[[["interner",3],["associatedtyvalueid",3],["crateid",3]],[["associatedtyvalue",3],["arc",3]]],null,[[["hirfileid",3]],[["astidmap",3],["arc",3]]],[[["attrdefid",4]],["attrswithowner",3]],null,[[["blockid",3]],[["option",4],["arc",3]]],null,[[["defwithbodyid",4]],[["arc",3],["body",3]]],null,[[["defwithbodyid",4]]],nullcallabledefid",4]],[["binders",3],["callablesig",3]]],null,[[],["internedtypeparamid",3]],[[],["internedlifetimeparamid",3]],[[],["internedconstparamid",3]],[[],["internedopaquetyid",3]],[[],["internedclosureid",3]],[[],["internedcallabledefid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["internedcallabledefid",3]],["ordering",4]],[[["constid",3]],[["constdata",3],["arc",3]]],null,[[["constparamid",3]],[["ty",3],["interner",3]]],null,[[["crateid",3]],[["defmap",3],["arc",3]]],[[["crateid",3]],[["defmap",3],["arc",3]]],null,[[["crateid",3]],[["langitems",3],["arc",3]]],null,[[],["internfunctionquery",3]],[[],["internfunctionlookupquery",3]],[[],["internstructquery",3]],[[],["internstructlookupquery",3]],[[],["internunionquery",3]],[[],["internunionlookupquery",3]],[[],["internenumquery",3]],[[],["internenumlookupquery",3]],[[],["internconstquery",3]],[[],["internconstlookupquery",3]],[[],["internstaticquery",3]],[[],["internstaticlookupquery",3]],[[],["interntraitquery",3]],[[],["interntraitlookupquery",3]],[[],["interntypealiasquery",3]],[[],["interntypealiaslookupquery",3]],[[],["internimplquery",3]],[[],["internimpllookupquery",3]],[[],["internblockquery",3]],[[],["internblocklookupquery",3]],[[],["enableprocattrmacrosquery",3]],[[],["fileitemtreequery",3]],[[],["cratedefmapqueryquery",3]],[[],["blockdefmapquery",3]],[[],["structdataquery",3]],[[],["uniondataquery",3]],[[],["enumdataquery",3]],[[],["impldataquery",3]],[[],["traitdataquery",3]],[[],["typealiasdataquery",3]],[[],["functiondataquery",3]],[[],["constdataquery",3]],[[],["staticdataquery",3]],[[],["bodywithsourcemapquery",3]],[[],["bodyquery",3]],[[],["exprscopesquery",3]],[[],["genericparamsquery",3]],[[],["variantsattrsquery",3]],[[],["fieldsattrsquery",3]],[[],["variantsattrssourcemapquery",3]],[[],["fieldsattrssourcemapquery",3]],[[],["attrsquery",3]],[[],["cratelangitemsquery",3]],[[],["langitemquery",3]],[[],["importmapquery",3]],[[],["fieldvisibilitiesquery",3]],[[],["functionvisibilityquery",3]],[[],["astidmapquery",3]],[[],["parsemacroexpansionquery",3]],[[],["internmacroquery",3]],[[],["macroargtextquery",3]],[[],["macrodefquery",3]],[[],["macroexpandquery",3]],[[],["hygieneframequery",3]],[[],["inferqueryquery",3]],[[],["tyquery",3]],[[],["valuetyquery",3]],[[],["implselftyquery",3]],[[],["constparamtyquery",3]],[[],["impltraitquery",3]],[[],["fieldtypesquery",3]],[[],["callableitemsignaturequery",3]],[[],["returntypeimpltraitsquery",3]],[[],["genericpredicatesforparamquery",3]],[[],["genericpredicatesquery",3]],[[],["traitenvironmentquery",3]],[[],["genericdefaultsquery",3]],[[],["inherentimplsincratequery",3]],[[],["traitimplsincratequery",3]],[[],["traitimplsinblockquery",3]],[[],["traitimplsindepsquery",3]],[[],["interncallabledefquery",3]],[[],["interncallabledeflookupquery",3]],[[],["interntypeparamidquery",3]],[[],["interntypeparamidlookupquery",3]],[[],["internlifetimeparamidquery",3]],[[],["internlifetimeparamidlookupquery",3]],[[],["internconstparamidquery",3]],[[],["internconstparamidlookupquery",3]],[[],["internimpltraitidquery",3]],[[],["internimpltraitidlookupquery",3]],[[],["internclosurequery",3]],[[],["internclosurelookupquery",3]],[[],["associatedtydataquery",3]],[[],["traitdatumquery",3]],[[],["structdatumquery",3]],[[],["impldatumquery",3]],[[],["fndefdatumquery",3]],[[],["fndefvariancequery",3]],[[],["adtvariancequery",3]],[[],["associatedtyvaluequery",3]],[[],["traitsolvequeryquery",3]],[[],["programclausesforchalkenvquery",3]],[[],["bool",15]],null,[[["enumid",3]],[["enumdata",3],["arc",3]]],null,[[["internedtypeparamid",3]],["bool",15]],[[["internedlifetimeparamid",3]],["bool",15]],[[["internedconstparamid",3]],["bool",15]],[[["internedopaquetyid",3]],["bool",15]],[[["internedclosureid",3]],["bool",15]],[[["internedcallabledefid",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["macrocallid",3]],[["expanderror",4],["subtree",3],["result",4]]],[[["defwithbodyid",4]],[["arc",3],["exprscopes",3]]],null,[[["variantid",4]],[["arc",3],["arenamap",3]]],null,[[["variantid",4]],[["arc",3],["arenamap",3]]],null,[[["variantid",4]],[["arenamap",3],["arc",3]]],null,[[["variantid",4]],[["arc",3],["arenamap",3]]],null,[[["hirfileid",3]],[["itemtree",3],["arc",3]]],null,[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["interndatabase",8],["databasekeyindex",3],["formatter",3]],[["error",3],["result",4]]],[[["defdatabase",8],["databasekeyindex",3],["formatter",3]],[["error",3],["result",4]]],[[["databasekeyindex",3],["formatter",3],["hirdatabase",8]],[["error",3],["result",4]]],[[["fndefid",3],["interner",3],["crateid",3]],[["arc",3],["fndefdatum",3]]],null,[[["fndefid",3],["interner",3]],[["interner",3],["variances",3]]],null,[[["runtime",3],["fnmut",8]]],[[["runtime",3],["fnmut",8]]],[[["runtime",3],["fnmutinterner",3],["opaquetyid",3]],["internedopaquetyid",3]],[[]],[[["interner",3],["closureid",3]],["internedclosureid",3]],[[]],[[["fndefid",3],["interner",3]],["internedcallabledefid",3]],[[["internid",3]],["internedtypeparamid",3]],[[["internid",3]],["internedlifetimeparamid",3]],[[["internid",3]],["internedconstparamid",3]],[[["internid",3]],["internedopaquetyid",3]],[[["internid",3]],["internedclosureid",3]],[[["internid",3]],["internedcallabledefid",3]],[[["functionid",3]],[["functiondata",3],["arc",3]]],null,[[["functionid",3]],["visibility",4]],null,[[["genericdefid",4]],["arc",3]],null,[[["genericdefid",4]],[["interned",3],["genericparams",3]]],null,[[["genericdefid",4]],["arc",3]],null,[[["typeparamid",3]],["arc",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[["hirfileid",3]],[["arc",3],["hygieneframe",3]]],[[["implid",3]],[["impldata",3],["arc",3]]],null,[[["interner",3],["implid",3],["crateid",3]],[["impldatum",3],["arc",3]]],null,[[["implid",3]],[["ty",3],["binders",3]]],null,[[["implid",3]],[["option",4],["binders",3]]],null,[[["crateid",3]],[["importmap",3],["arc",3]]],null,[[["interndatabase",8]],[["querytable",3],["internfunctionquery",3]]],[[["interndatabase",8]],[["internfunctionlookupquery",3],["querytable",3]]],[[["interndatabase",8]],[["internstructquery",3],["querytable",3]]],[[["interndatabase",8]],[["querytable",3],["internstructlookupquery",3]]],[[["interndatabase",8]],[["querytable",3],["internunionquery",3]]],[[["interndatabase",8]],[["querytable",3],["internunionlookupquery",3]]],[[["interndatabase",8]],[["internenumquery",3],["querytable",3]]],[[["interndatabase",8]],[["querytable",3],["internenumlookupquery",3]]],[[["interndatabase",8]],[["internconstquery",3],["querytable",3]]],[[["interndatabase",8]],[["internconstlookupquery",3],["querytable",3]]],[[["interndatabase",8]],[["internstaticquery",3],["querytable",3]]],[[["interndatabase",8]],[["querytable",3],["internstaticlookupquery",3]]],[[["interndatabase",8]],[["querytable",3],["interntraitquery",3]]],[[["interndatabase",8]],[["interntraitlookupquery",3],["querytable",3]]],[[["interndatabase",8]],[["interntypealiasquery",3],["querytable",3]]],[[["interndatabase",8]],[["querytable",3],["interntypealiaslookupquery",3]]],[[["interndatabase",8]],[["querytable",3],["internimplquery",3]]],[[["interndatabase",8]],[["querytable",3],["internimpllookupquery",3]]],[[["interndatabase",8]],[["querytable",3],["internblockquery",3]]],[[["interndatabase",8]],[["querytable",3],["internblocklookupquery",3]]],[[["defdatabase",8]],[["querytable",3],["enableprocattrmacrosquery",3]]],[[["defdatabase",8]],[["querytable",3],["fileitemtreequery",3]]],[[["defdatabase",8]],[["querytable",3],["cratedefmapqueryquery",3]]],[[["defdatabase",8]],[["blockdefmapquery",3],["querytable",3]]],[[["defdatabase",8]],[["structdataquery",3],["querytable",3]]],[[["defdatabase",8]],[["uniondataquery",3],["querytable",3]]],[[["defdatabase",8]],[["enumdataquery",3],["querytable",3]]],[[["defdatabase",8]],[["querytable",3],["impldataquery",3]]],[[["defdatabase",8]],[["querytable",3],["traitdataquery",3]]],[[["defdatabase",8]],[["querytable",3],["typealiasdataquery",3]]],[[["defdatabase",8]],[["functiondataquery",3],["querytable",3]]],[[["defdatabase",8]],[["constdataquery",3],["querytable",3]]],[[["defdatabase",8]],[["querytable",3],["staticdataquery",3]]],[[["defdatabase",8]],[["bodywithsourcemapquery",3],["querytable",3]]],[[["defdatabase",8]],[["bodyquery",3],["querytable",3]]],[[["defdatabase",8]],[["querytable",3],["exprscopesquery",3]]],[[["defdatabase",8]],[["querytable",3],["genericparamsquery",3]]],[[["defdatabase",8]],[["querytable",3],["variantsattrsquery",3]]],[[["defdatabase",8]],[["querytable",3],["fieldsattrsquery",3]]],[[["defdatabase",8]],[["variantsattrssourcemapquery",3],["querytable",3]]],[[["defdatabase",8]],[["querytable",3],["fieldsattrssourcemapquery",3]]],[[["defdatabase",8]],[["attrsquery",3],["querytable",3]]],[[["defdatabase",8]],[["cratelangitemsquery",3],["querytable",3]]],[[["defdatabase",8]],[["querytable",3],["langitemquery",3]]],[[["defdatabase",8]],[["querytable",3],["importmapquery",3]]],[[["defdatabase",8]],[["querytable",3],["fieldvisibilitiesquery",3]]],[[["defdatabase",8]],[["functionvisibilityquery",3],["querytable",3]]],[[["astdatabase",8]],[["querytable",3],["astidmapquery",3]]],[[["astdatabase",8]],[["querytable",3],["parsemacroexpansionquery",3]]],[[["astdatabase",8]],[["internmacroquery",3],["querytable",3]]],[[["astdatabase",8]],[["querytable",3],["macroargtextquery",3]]],[[["astdatabase",8]],[["querytable",3],["macrodefquery",3]]],[[["astdatabase",8]],[["querytable",3],["macroexpandquery",3]]],[[["astdatabase",8]],[["hygieneframequery",3],["querytable",3]]],[[["hirdatabase",8]],[["querytable",3],["inferqueryquery",3]]],[[["hirdatabase",8]],[["tyquery",3],["querytable",3]]],[[["hirdatabase",8]],[["querytable",3],["valuetyquery",3]]],[[["hirdatabase",8]],[["implselftyquery",3],["querytable",3]]],[[["hirdatabase",8]],[["constparamtyquery",3],["querytable",3]]],[[["hirdatabase",8]],[["querytable",3],["impltraitquery",3]]],[[["hirdatabase",8]],[["fieldtypesquery",3],["querytable",3]]],[[["hirdatabase",8]],[["querytable",3],["callableitemsignaturequery",3]]],[[["hirdatabase",8]],[["querytable",3],["returntypeimpltraitsquery",3]]],[[["hirdatabase",8]],[["querytable",3],["genericpredicatesforparamquery",3]]],[[["hirdatabase",8]],[["genericpredicatesquery",3],["querytable",3]]],[[["hirdatabase",8]],[["querytable",3],["traitenvironmentquery",3]]],[[["hirdatabase",8]],[["querytable",3],["genericdefaultsquery",3]]],[[["hirdatabase",8]],[["inherentimplsincratequery",3],["querytable",3]]],[[["hirdatabase",8]],[["querytable",3],["traitimplsincratequery",3]]],[[["hirdatabase",8]],[["querytable",3],["traitimplsinblockquery",3]]],[[["hirdatabase",8]],[["querytable",3],["traitimplsindepsquery",3]]],[[["hirdatabase",8]],[["querytable",3],["interncallabledefquery",3]]],[[["hirdatabase",8]],[["interncallabledeflookupquery",3],["querytable",3]]],[[["hirdatabase",8]],[["querytable",3],["interntypeparamidquery",3]]],[[["hirdatabase",8]],[["interntypeparamidlookupquery",3],["querytable",3]]],[[["hirdatabase",8]],[["querytable",3],["internlifetimeparamidquery",3]]],[[["hirdatabase",8]],[["internlifetimeparamidlookupquery",3],["querytable",3]]],[[["hirdatabase",8]],[["internconstparamidquery",3],["querytable",3]]],[[["hirdatabase",8]],[["querytable",3],["internconstparamidlookupquery",3]]],[[["hirdatabase",8]],[["internimpltraitidquery",3],["querytable",3]]],[[["hirdatabase",8]],[["querytable",3],["internimpltraitidlookupquery",3]]],[[["hirdatabase",8]],[["internclosurequery",3],["querytable",3]]],[[["hirdatabase",8]],[["internclosurelookupquery",3],["querytable",3]]],[[["hirdatabase",8]],[["querytable",3],["associatedtydataquery",3]]],[[["hirdatabase",8]],[["querytable",3],["traitdatumquery",3]]],[[["hirdatabase",8]],[["structdatumquery",3],["querytable",3]]],[[["hirdatabase",8]],[["impldatumquery",3],["querytable",3]]],[[["hirdatabase",8]],[["querytable",3],["fndefdatumquery",3]]],[[["hirdatabase",8]],[["fndefvariancequery",3],["querytable",3]]],[[["hirdatabase",8]],[["querytable",3],["adtvariancequery",3]]],[[["hirdatabase",8]],[["associatedtyvaluequery",3],["querytable",3]]],[[["hirdatabase",8]],[["querytable",3],["traitsolvequeryquery",3]]],[[["hirdatabase",8]],[["querytable",3],["programclausesforchalkenvquery",3]]],[[["interndatabase",8]],[["querytablemut",3],["internfunctionquery",3]]],[[["interndatabase",8]],[["internfunctionlookupquery",3],["querytablemut",3]]],[[["interndatabase",8]],[["internstructquery",3],["querytablemut",3]]],[[["interndatabase",8]],[["querytablemut",3],["internstructlookupquery",3]]],[[["interndatabase",8]],[["querytablemut",3],["internunionquery",3]]],[[["interndatabase",8]],[["querytablemut",3],["internunionlookupquery",3]]],[[["interndatabase",8]],[["internenumquery",3],["querytablemut",3]]],[[["interndatabase",8]],[["internenumlookupquery",3],["querytablemut",3]]],[[["interndatabase",8]],[["querytablemut",3],["internconstquery",3]]],[[["interndatabase",8]],[["querytablemut",3],["internconstlookupquery",3]]],[[["interndatabase",8]],[["internstaticquery",3],["querytablemut",3]]],[[["interndatabase",8]],[["internstaticlookupquery",3],["querytablemut",3]]],[[["interndatabase",8]],[["interntraitquery",3],["querytablemut",3]]],[[["interndatabase",8]],[["interntraitlookupquery",3],["querytablemut",3]]],[[["interndatabase",8]],[["querytablemut",3],["interntypealiasquery",3]]],[[["interndatabase",8]],[["interntypealiaslookupquery",3],["querytablemut",3]]],[[["interndatabase",8]],[["querytablemut",3],["internimplquery",3]]],[[["interndatabase",8]],[["querytablemut",3],["internimpllookupquery",3]]],[[["interndatabase",8]],[["querytablemut",3],["internblockquery",3]]],[[["interndatabase",8]],[["querytablemut",3],["internblocklookupquery",3]]],[[["defdatabase",8]],[["querytablemut",3],["enableprocattrmacrosquery",3]]],[[["defdatabase",8]],[["fileitemtreequery",3],["querytablemut",3]]],[[["defdatabase",8]],[["querytablemut",3],["cratedefmapqueryquery",3]]],[[["defdatabase",8]],[["blockdefmapquery",3],["querytablemut",3]]],[[["defdatabase",8]],[["querytablemut",3],["structdataquery",3]]],[[["defdatabase",8]],[["querytablemut",3],["uniondataquery",3]]],[[["defdatabase",8]],[["enumdataquery",3],["querytablemut",3]]],[[["defdatabase",8]],[["querytablemut",3],["impldataquery",3]]],[[["defdatabase",8]],[["querytablemut",3],["traitdataquery",3]]],[[["defdatabase",8]],[["typealiasdataquery",3],["querytablemut",3]]],[[["defdatabase",8]],[["functiondataquery",3],["querytablemut",3]]],[[["defdatabase",8]],[["constdataquery",3],["querytablemut",3]]],[[["defdatabase",8]],[["querytablemut",3],["staticdataquery",3]]],[[["defdatabase",8]],[["querytablemut",3],["bodywithsourcemapquery",3]]],[[["defdatabase",8]],[["querytablemut",3],["bodyquery",3]]],[[["defdatabase",8]],[["querytablemut",3],["exprscopesquery",3]]],[[["defdatabase",8]],[["querytablemut",3],["genericparamsquery",3]]],[[["defdatabase",8]],[["variantsattrsquery",3],["querytablemut",3]]],[[["defdatabase",8]],[["fieldsattrsquery",3],["querytablemut",3]]],[[["defdatabase",8]],[["querytablemut",3],["variantsattrssourcemapquery",3]]],[[["defdatabase",8]],[["querytablemut",3],["fieldsattrssourcemapquery",3]]],[[["defdatabase",8]],[["attrsquery",3],["querytablemut",3]]],[[["defdatabase",8]],[["querytablemut",3],["cratelangitemsquery",3]]],[[["defdatabase",8]],[["querytablemut",3],["langitemquery",3]]],[[["defdatabase",8]],[["querytablemut",3],["importmapquery",3]]],[[["defdatabase",8]],[["querytablemut",3],["fieldvisibilitiesquery",3]]],[[["defdatabase",8]],[["functionvisibilityquery",3],["querytablemut",3]]],[[["astdatabase",8]],[["querytablemut",3],["astidmapquery",3]]],[[["astdatabase",8]],[["querytablemut",3],["parsemacroexpansionquery",3]]],[[["astdatabase",8]],[["querytablemut",3],["internmacroquery",3]]],[[["astdatabase",8]],[["querytablemut",3],["macroargtextquery",3]]],[[["astdatabase",8]],[["querytablemut",3],["macrodefquery",3]]],[[["astdatabase",8]],[["macroexpandquery",3],["querytablemut",3]]],[[["astdatabase",8]],[["hygieneframequery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["querytablemut",3],["inferqueryquery",3]]],[[["hirdatabase",8]],[["querytablemut",3],["tyquery",3]]],[[["hirdatabase",8]],[["querytablemut",3],["valuetyquery",3]]],[[["hirdatabase",8]],[["implselftyquery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["querytablemut",3],["constparamtyquery",3]]],[[["hirdatabase",8]],[["querytablemut",3],["impltraitquery",3]]],[[["hirdatabase",8]],[["fieldtypesquery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["callableitemsignaturequery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["returntypeimpltraitsquery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["genericpredicatesforparamquery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["genericpredicatesquery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["traitenvironmentquery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["querytablemut",3],["genericdefaultsquery",3]]],[[["hirdatabase",8]],[["inherentimplsincratequery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["traitimplsincratequery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["traitimplsinblockquery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["traitimplsindepsquery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["querytablemut",3],["interncallabledefquery",3]]],[[["hirdatabase",8]],[["interncallabledeflookupquery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["querytablemut",3],["interntypeparamidquery",3]]],[[["hirdatabase",8]],[["querytablemut",3],["interntypeparamidlookupquery",3]]],[[["hirdatabase",8]],[["querytablemut",3],["internlifetimeparamidquery",3]]],[[["hirdatabase",8]],[["internlifetimeparamidlookupquery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["internconstparamidquery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["internconstparamidlookupquery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["querytablemut",3],["internimpltraitidquery",3]]],[[["hirdatabase",8]],[["querytablemut",3],["internimpltraitidlookupquery",3]]],[[["hirdatabase",8]],[["querytablemut",3],["internclosurequery",3]]],[[["hirdatabase",8]],[["internclosurelookupquery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["querytablemut",3],["associatedtydataquery",3]]],[[["hirdatabase",8]],[["traitdatumquery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["querytablemut",3],["structdatumquery",3]]],[[["hirdatabase",8]],[["querytablemut",3],["impldatumquery",3]]],[[["hirdatabase",8]],[["fndefdatumquery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["fndefvariancequery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["querytablemut",3],["adtvariancequery",3]]],[[["hirdatabase",8]],[["querytablemut",3],["associatedtyvaluequery",3]]],[[["hirdatabase",8]],[["traitsolvequeryquery",3],["querytablemut",3]]],[[["hirdatabase",8]],[["querytablemut",3],["programclausesforchalkenvquery",3]]],[[["defwithbodyid",4]],[["arc",3],["inferenceresult",3]]],[[["defwithbodyid",4]],[["arc",3],["inferenceresult",3]]],null,[[["crateid",3]],[["arc",3],["inherentimpls",3]]],null,[[["blockloc",3]],["blockid",3]],null,[[["callabledefid",4]],["internedcallabledefid",3]],null,[[],["internedclosureid",3]],null,[[["const",3],["associtemloc",3]],["constid",3]],null,[[["constparamid",3]],["internedconstparamid",3]],null,[[["itemloc",3],["enum",3]],["enumid",3]],null,[[["associtemloc",3],["function",3]],["functionid",3]],null,[[["itemloc",3],["impl",3]],["implid",3]],null,[[["impltraitid",4]],["internedopaquetyid",3]],null,[[["lifetimeparamid",3]],["internedlifetimeparamid",3]],null,[[["macrocallloc",3]],["macrocallid",3]],[[["itemloc",3],["static",3]],["staticid",3]],null,[[["struct",3],["itemloc",3]],["structid",3]],null,[[["trait",3],["itemloc",3]],["traitid",3]],null,[[["associtemloc",3],["typealias",3]],["typealiasid",3]],null,[[["typeparamid",3]],["internedtypeparamid",3]],null,[[["itemloc",3],["union",3]],["unionid",3]],nullsmolstr",3],["crateid",3]],[["langitemtarget",4],["option",4]]],null,[[["blockid",3]],["blockloc",3]],null,[[["internedcallabledefid",3]],["callabledefid",4]],null,[[["internedclosureid",3]]],null,[[["constid",3]],[["const",3],["associtemloc",3]]],null,[[["internedconstparamid",3]],["constparamid",3]],null,[[["enumid",3]],[["itemloc",3],["enum",3]]],null,[[["functionid",3]],[["associtemloc",3],["function",3]]],null,[[["implid",3]],[["itemloc",3],["impl",3]]],null,[[["internedopaquetyid",3]],["impltraitid",4]],null,[[["internedlifetimeparamid",3]],["lifetimeparamid",3]],null,[[["macrocallid",3]],["macrocallloc",3]],[[["staticid",3]],[["itemloc",3],["static",3]]],null,[[["structid",3]],[["struct",3],["itemloc",3]]],null,[[["traitid",3]],[["trait",3],["itemloc",3]]],null,[[["typealiasid",3]],[["associtemloc",3],["typealias",3]]],null,[[["internedtypeparamid",3]],["typeparamid",3]],null,[[["unionid",3]],[["itemloc",3],["union",3]]],null,[[["macrocallid",3]],[["arc",3],["option",4]]],[[["macrocallid",3]],[["option",4],["greennode",3]]],[[["macrodefid",3]],[["option",4],["arc",3]]],[[["macrocallid",3]],[["option",4],["expandresult",3]]],[[["macrocallid",3]],[["expanderror",4],["option",4]]],[[["revision",3],["interndatabase",8],["databasekeyindex",3]],["bool",15]],[[["defdatabase",8],["databasekeyindex",3],["revision",3]],["bool",15]],[[["revision",3],["databasekeyindex",3],["hirdatabase",8]],["bool",15]],[[["internedtypeparamid",3]],["bool",15]],[[["internedlifetimeparamid",3]],["bool",15]],[[["internedconstparamid",3]],["bool",15]],[[["internedopaquetyid",3]],["bool",15]],[[["internedclosureid",3]],["bool",15]],[[["internedcallabledefid",3]],["bool",15]],[[["u16",15]],["interndatabasegroupstorage__",3]],[[["u16",15]],["defdatabasegroupstorage__",3]],[[["u16",15]],["hirdatabasegroupstorage__",3]],[[["macrofile",3]],[["expandresult",3],["option",4]]],[[["hirfileid",3]],[["syntaxnode",3],["option",4]]],[[["internedcallabledefid",3]],[["option",4],["ordering",4]]],[[["environment",3],["interner",3],["crateid",3]],[["interner",3],["programclauses",3]]],null,[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[["functionid",3]],[["option",4],["arc",3]]],null,[[["bool",15]]],[[["bool",15],["durability",3]]],[[["staticid",3]],[["arc",3],["staticdata",3]]],null,[[["structid",3]],[["arc",3],["structdata",3]]],null,[[["interner",3],["adtid",3],["crateid",3]],[["arc",3],["adtdatum",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[["traitid",3]],[["arc",3],["traitdata",3]]],null,[[["interner",3],["traitid",3],["crateid",3]],[["traitdatum",3],["arc",3]]],null,[[["genericdefid",4]],[["arc",3],["traitenvironment",3]]],null,[[["blockid",3]],[["arc",3],["option",4]]],null,[[["crateid",3]],[["arc",3],["traitimpls",3]]],null,[[["crateid",3]],[["arc",3],["traitimpls",3]]],null,[[["inenvironment",3],["canonical",3],["crateid",3]],[["solution",4],["option",4]]],[[["inenvironment",3],["canonical",3],["crateid",3]],[["solution",4],["option",4]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["tydefid",4]],[["ty",3],["binders",3]]],null,[[["typealiasid",3]],[["arc",3],["typealiasdata",3]]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["unionid",3]],[["arc",3],["structdata",3]]],null,[[["valuetydefid",4]],[["ty",3],["binders",3]]],null,[[["enumid",3]],[["arc",3],["arenamap",3]]],null,[[["enumid",3]],[["arenamap",3],["arc",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[],["unresolvedmacrocall",3]],[[],["inactivecode",3]],[[],["unresolvedprocmacro",3]],[[],["macroerror",3]],[[]],[[]],[[]],[[]],null,null,null,[[["unresolvedmacrocall",3]],["bool",15]],[[["inactivecode",3]],["bool",15]],[[["unresolvedprocmacro",3]],["bool",15]],[[["macroerror",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[["mismatchedargcount",3]],["anydiagnostic",4]],[[["removethissemicolon",3]],["anydiagnostic",4]],[[["nosuchfield",3]],["anydiagnostic",4]],[[["missingunsafe",3]],["anydiagnostic",4]],[[["missingokorsomeintailexpr",3]],["anydiagnostic",4]],[[["missingmatcharms",3]],["anydiagnostic",4]],[[["missingfields",3]],["anydiagnostic",4]],[[["unresolvedimport",3]],["anydiagnostic",4]],[[["macroerror",3]],["anydiagnostic",4]],[[["incorrectcase",3]],["anydiagnostic",4]],[[["inactivecode",3]],["anydiagnostic",4]],[[["unresolvedexterncrate",3]],["anydiagnostic",4]],[[["unresolvedprocmacro",3]],["anydiagnostic",4]],[[["breakoutsideofloop",3]],["anydiagnostic",4]],[[["unresolvedmodule",3]],["anydiagnostic",4]],[[["unresolvedmacrocall",3]],["anydiagnostic",4]],[[]],[[["replacefiltermapnextwithfindmap",3]],["anydiagnostic",4]],[[["unimplementedbuiltinmacro",3]],["anydiagnostic",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[["unresolvedmacrocall",3]],["bool",15]],[[["inactivecode",3]],["bool",15]],[[["unresolvedprocmacro",3]],["bool",15]],[[["macroerror",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["query",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["query",3]],[[],["importinfo",3]],[[],["importpath",3]],[[]],[[]],null,[[],["importmap",3]],[[["importinfo",3]],["bool",15]],[[["importpath",3]],["bool",15]],[[["importmap",3]],["bool",15]],[[["importkind",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["importkind",4]],["query",3]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["iteminns",4]],[["option",4],["importinfo",3]]],[[["defdatabase",8],["crateid",3]],[["importmap",3],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["usize",15]],["query",3]],[[],["query",3]],[[["importinfo",3]],["bool",15]],[[["importpath",3]],["bool",15]],[[["string",3]],["query",3]],null,[[["iteminns",4]],[["option",4],["importpath",3]]],[[["crateid",3],["query",3],["defdatabase",8]],[["hashset",3],["iteminns",4],["buildhasherdefault",3]]],[[["searchmode",4]],["query",3]],null,[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"PathKind"],[4,"ModuleDef"],[4,"GenericDef"],[4,"ScopeDef"],[4,"CfgExpr"],[4,"TypeRef"],[4,"PathResolution"],[8,"HasSource"],[4,"MacroKind"],[4,"ModuleSource"],[4,"PrefixKind"],[4,"Origin"],[4,"CallableKind"],[4,"DefWithBody"],[4,"AssocItem"],[4,"GenericParam"],[3,"Attrs"],[4,"Adt"],[4,"Access"],[4,"CfgAtom"],[4,"AssocItemContainer"],[4,"Namespace"],[4,"ItemInNs"],[4,"Visibility"],[4,"Mutability"],[4,"FieldSource"],[4,"StructKind"],[4,"VariantDef"],[3,"SelfParam"],[3,"TypeInfo"],[3,"Crate"],[3,"Impl"],[3,"Semantics"],[3,"InFile"],[3,"Type"],[3,"CfgOptions"],[8,"AsAssocItem"],[3,"Function"],[3,"Const"],[3,"TypeAlias"],[3,"ModPath"],[3,"Param"],[3,"Local"],[3,"Documentation"],[3,"Name"],[8,"HasAttrs"],[3,"Module"],[3,"Field"],[3,"Struct"],[3,"Union"],[3,"Enum"],[3,"Variant"],[3,"Static"],[3,"Trait"],[3,"MacroDef"],[3,"TypeParam"],[3,"LifetimeParam"],[3,"ConstParam"],[3,"SemanticsScope"],[3,"CrateDependency"],[3,"BuiltinType"],[3,"Label"],[3,"Callable"],[3,"AttrsWithOwner"],[3,"Attr"],[3,"HirFileId"],[3,"MacroFile"],[3,"ExpandResult"],[3,"IncorrectCase"],[8,"HirDisplay"],[8,"HasVisibility"],[8,"HasCrate"],[13,"KeyValue"],[8,"HirDatabase"],[3,"HirDatabaseGroupStorage__"],[3,"InternedTypeParamId"],[3,"InternedLifetimeParamId"],[3,"InternedConstParamId"],[3,"InternedOpaqueTyId"],[3,"InternedClosureId"],[3,"InternedCallableDefId"],[8,"AstDatabase"],[8,"DefDatabase"],[3,"DefDatabaseGroupStorage__"],[3,"InternDatabaseStorage"],[3,"InternDatabaseGroupStorage__"],[3,"InternFunctionQuery"],[3,"InternFunctionLookupQuery"],[3,"InternStructQuery"],[3,"InternStructLookupQuery"],[3,"InternUnionQuery"],[3,"InternUnionLookupQuery"],[3,"InternEnumQuery"],[3,"InternEnumLookupQuery"],[3,"InternConstQuery"],[3,"InternConstLookupQuery"],[3,"InternStaticQuery"],[3,"InternStaticLookupQuery"],[3,"InternTraitQuery"],[3,"InternTraitLookupQuery"],[3,"InternTypeAliasQuery"],[3,"InternTypeAliasLookupQuery"],[3,"InternImplQuery"],[3,"InternImplLookupQuery"],[3,"InternBlockQuery"],[3,"InternBlockLookupQuery"],[3,"DefDatabaseStorage"],[3,"EnableProcAttrMacrosQuery"],[3,"FileItemTreeQuery"],[3,"CrateDefMapQueryQuery"],[3,"BlockDefMapQuery"],[3,"StructDataQuery"],[3,"UnionDataQuery"],[3,"EnumDataQuery"],[3,"ImplDataQuery"],[3,"TraitDataQuery"],[3,"TypeAliasDataQuery"],[3,"FunctionDataQuery"],[3,"ConstDataQuery"],[3,"StaticDataQuery"],[3,"BodyWithSourceMapQuery"],[3,"BodyQuery"],[3,"ExprScopesQuery"],[3,"GenericParamsQuery"],[3,"VariantsAttrsQuery"],[3,"FieldsAttrsQuery"],[3,"VariantsAttrsSourceMapQuery"],[3,"FieldsAttrsSourceMapQuery"],[3,"AttrsQuery"],[3,"CrateLangItemsQuery"],[3,"LangItemQuery"],[3,"ImportMapQuery"],[3,"FieldVisibilitiesQuery"],[3,"FunctionVisibilityQuery"],[3,"AstDatabaseStorage"],[3,"AstIdMapQuery"],[3,"ParseMacroExpansionQuery"],[3,"InternMacroQuery"],[3,"MacroArgTextQuery"],[3,"MacroDefQuery"],[3,"MacroExpandQuery"],[3,"HygieneFrameQuery"],[3,"HirDatabaseStorage"],[3,"InferQueryQuery"],[3,"TyQuery"],[3,"ValueTyQuery"],[3,"ImplSelfTyQuery"],[3,"ConstParamTyQuery"],[3,"ImplTraitQuery"],[3,"FieldTypesQuery"],[3,"CallableItemSignatureQuery"],[3,"ReturnTypeImplTraitsQuery"],[3,"GenericPredicatesForParamQuery"],[3,"GenericPredicatesQuery"],[3,"TraitEnvironmentQuery"],[3,"GenericDefaultsQuery"],[3,"InherentImplsInCrateQuery"],[3,"TraitImplsInCrateQuery"],[3,"TraitImplsInBlockQuery"],[3,"TraitImplsInDepsQuery"],[3,"InternCallableDefQuery"],[3,"InternCallableDefLookupQuery"],[3,"InternTypeParamIdQuery"],[3,"InternTypeParamIdLookupQuery"],[3,"InternLifetimeParamIdQuery"],[3,"InternLifetimeParamIdLookupQuery"],[3,"InternConstParamIdQuery"],[3,"InternConstParamIdLookupQuery"],[3,"InternImplTraitIdQuery"],[3,"InternImplTraitIdLookupQuery"],[3,"InternClosureQuery"],[3,"InternClosureLookupQuery"],[3,"AssociatedTyDataQuery"],[3,"TraitDatumQuery"],[3,"StructDatumQuery"],[3,"ImplDatumQuery"],[3,"FnDefDatumQuery"],[3,"FnDefVarianceQuery"],[3,"AdtVarianceQuery"],[3,"AssociatedTyValueQuery"],[3,"TraitSolveQueryQuery"],[3,"ProgramClausesForChalkEnvQuery"],[8,"InternDatabase"],[4,"AnyDiagnostic"],[3,"MissingMatchArms"],[3,"UnresolvedModule"],[3,"UnresolvedExternCrate"],[3,"UnresolvedImport"],[3,"UnresolvedMacroCall"],[3,"InactiveCode"],[3,"UnresolvedProcMacro"],[3,"MacroError"],[3,"UnimplementedBuiltinMacro"],[3,"NoSuchField"],[3,"BreakOutsideOfLoop"],[3,"MissingUnsafe"],[3,"MissingFields"],[3,"ReplaceFilterMapNextWithFindMap"],[3,"MismatchedArgCount"],[3,"RemoveThisSemicolon"],[3,"MissingOkOrSomeInTailExpr"],[4,"ImportKind"],[4,"SearchMode"],[3,"Query"],[3,"ImportInfo"],[3,"ImportPath"],[3,"ImportMap"]]},\
"hir_def":{"doc":"<code>hir_def</code> crate contains everything between macro expansion …","t":[4,13,13,13,8,4,4,3,4,3,3,13,3,13,13,13,13,13,3,13,16,4,3,13,6,3,13,13,13,13,3,13,3,13,13,13,13,13,4,4,13,8,3,13,13,13,3,3,13,6,6,6,6,6,6,8,13,4,3,13,13,13,3,13,13,13,6,3,13,13,3,13,13,13,13,6,3,13,13,13,13,3,13,3,13,13,6,3,4,14,14,0,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,0,0,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,11,11,0,12,12,12,12,12,12,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,0,12,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,0,3,3,3,13,13,13,13,4,3,4,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,12,3,4,3,3,3,3,3,3,18,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,4,3,3,6,6,13,6,6,3,13,3,6,6,3,13,13,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,3,3,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,18,13,4,4,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,11,10,3,3,3,3,3,3,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,12,11,12,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,3,3,3,3,3,3,3,8,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,8,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,10,12,10,12,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,10,12,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,10,12,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,12,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,10,12,3,16,3,3,8,16,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,4,13,4,13,13,13,13,4,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,4,13,6,13,13,13,13,13,13,13,3,6,13,13,13,13,4,13,4,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,4,4,6,13,13,13,13,13,3,13,3,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,4,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,13,3,13,3,13,3,13,13,13,3,13,4,13,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,3,4,3,3,13,3,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,5,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,4,3,13,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,4,3,13,13,3,13,3,13,3,13,3,13,4,3,3,13,13,13,13,3,3,13,3,13,4,13,3,3,8,3,13,13,3,13,3,13,3,13,4,13,4,13,13,18,18,18,4,13,13,13,3,13,13,16,3,13,3,13,13,3,13,3,13,3,13,13,13,3,13,13,3,4,13,3,13,12,12,12,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,12,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,17,3,17,17,17,17,17,6,17,17,17,17,17,17,17,17,17,17,17,11,11,11,11,11,11,11,11,11,13,13,13,4,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,13,13,13,3,13,13,13,3,4,4,13,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,12,3,4,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,3,13,13,18,4,3,4,13,3,3,4,3,3,13,13,13,13,0,14,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,8,3,10,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,14,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,13,13,13,13,13,13,13,13,13,13,13,8,13,13,13,13,13,13,13,13,4,3,4,13,13,13,13,13,4,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,8,16,16,10,10,13,4,13,13,13,13,13,13,13,3,13,13,4,13,13,13,13,13,13,4,13,13,13,13,3,13,4,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AdtId","AdtId","AdtId","AdtId","AsMacroCall","AssocContainerId","AssocItemId","AssocItemLoc","AttrDefId","BlockId","BlockLoc","BuiltinType","ConstId","ConstId","ConstId","ConstId","ConstId","ConstId","ConstParamId","ConstParamId","Data","DefWithBodyId","EnumId","EnumId","EnumLoc","EnumVariantId","EnumVariantId","EnumVariantId","EnumVariantId","EnumVariantId","FieldId","FieldId","FunctionId","FunctionId","FunctionId","FunctionId","FunctionId","FunctionId","GenericDefId","GenericParamId","GenericParamId","HasModule","ImplId","ImplId","ImplId","ImplId","ItemLoc","LifetimeParamId","LifetimeParamId","LocalConstParamId","LocalEnumVariantId","LocalFieldId","LocalLifetimeParamId","LocalModuleId","LocalTypeParamId","Lookup","MacroDefId","ModuleDefId","ModuleId","ModuleId","ModuleId","ModuleId","StaticId","StaticId","StaticId","StaticId","StaticLoc","StructId","StructId","StructId","TraitId","TraitId","TraitId","TraitId","TraitId","TraitLoc","TypeAliasId","TypeAliasId","TypeAliasId","TypeAliasId","TypeAliasId","TypeParamId","TypeParamId","UnionId","UnionId","UnionId","UnionLoc","UnresolvedMacro","VariantId","__known_path","__path","adt","adt_id","as_call_id","as_call_id_with_errors","as_generic_def_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_mod_item","attr","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builtin_attr","builtin_type","child_by_source","child_by_source_to","child_by_source_to","child_by_source_to","child_by_source_to","child_by_source_to","child_by_source_to","child_by_source_to","child_source","child_source","child_source","child_source","child_source","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","container","container","containing_block","containing_module","data","db","def_map","dyn_map","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","file_id","find_path","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","generics","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","id","id","import_map","intern","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","item_scope","item_tree","keys","krate","krate","lang_item","local_id","local_id","local_id","local_id","local_id","local_id","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","module","module","module","module","module","module","module","module","module","module","module","nameres","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","parent","parent","parent","parent","parent","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","path","per_ns","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","source","source","src","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ref","variant_data","visibility","EnumData","EnumVariantData","FieldData","Other","Packed","Record","Record","ReprKind","StructData","StructKind","Tuple","Tuple","Unit","Unit","VariantData","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","kind","name","name","name","name","ne","ne","ne","ne","ne","repr","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ref","variant","variant_data","variant_data","variants","visibility","visibility","visibility","Attr","AttrInput","AttrQuery","AttrSourceMap","Attrs","AttrsWithOwner","DocsRangeMap","Documentation","EMPTY","Literal","TokenTree","as_str","attrs","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","by_key","cfg","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","deref","deref","docs","docs_with_rangemap","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","exists","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","has_doc_hidden","hash","hash","into","into","into","into","into","into","into","into","map","ne","ne","ne","ne","ne","new","source_map","source_of","storage","string_value","string_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tt_values","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Body","BodyDiagnostic","BodySourceMap","Expander","ExprPtr","ExprSource","InactiveCode","LabelPtr","LabelSource","LowerCtx","MacroError","Mark","PatPtr","PatSource","SyntheticSyntax","UnresolvedMacroCall","UnresolvedProcMacro","blocks","body_expr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","current_file_id","db","default","default","diagnostics","enter_expand","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","exit","expr_syntax","exprs","field_syntax","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","index","index","index","into","into","into","into","into","into","into","label_syntax","labels","ne","ne","ne","new","new","node_expr","node_field","node_label","node_macro_file","node_pat","node_self_param","params","pat_syntax","pats","scope","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_hygiene","cfg","message","node","node","node","node","opts","path","ExprScopes","ScopeData","ScopeEntry","ScopeId","block","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","entries","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","into","into","into","label","name","ne","ne","ne","pat","resolve_name_in_scope","scope_by_expr","scope_chain","scope_for","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","EXTRA_ATTRIBUTES","INERT_ATTRIBUTES","TOOL_MODULES","ALL","Bool","BuiltinFloat","BuiltinInt","BuiltinType","BuiltinUint","Char","F32","F64","Float","I128","I16","I32","I64","I8","Int","Isize","Str","U128","U16","U32","U64","U8","Uint","Usize","as_name","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_suffix","from_suffix","from_suffix","hash","hash","hash","hash","into","into","into","into","ne","partial_cmp","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","ChildBySource","child_by_source","child_by_source_to","ConstData","FunctionData","ImplData","StaticData","TraitData","TypeAliasData","abi","associated_type_by_name","associated_types","async_ret_type","attrs","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","has_body","has_self_param","into","into","into","into","into","into","is_async","is_auto","is_const","is_default","is_extern","is_extern","is_in_extern_block","is_negative","is_unsafe","is_unsafe","is_varargs","items","items","mutable","name","name","name","name","name","ne","ne","ne","ne","ne","ne","params","ret_type","self_ty","skip_array_during_method_dispatch","target_trait","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_ref","type_ref","type_ref","visibility","visibility","visibility","visibility","visibility","AttrsQuery","BlockDefMapQuery","BodyQuery","BodyWithSourceMapQuery","ConstDataQuery","CrateDefMapQueryQuery","CrateLangItemsQuery","DefDatabase","DefDatabaseGroupStorage__","DefDatabaseStorage","EnableProcAttrMacrosQuery","EnumDataQuery","ExprScopesQuery","FieldVisibilitiesQuery","FieldsAttrsQuery","FieldsAttrsSourceMapQuery","FileItemTreeQuery","FunctionDataQuery","FunctionVisibilityQuery","GenericParamsQuery","ImplDataQuery","ImportMapQuery","InternBlockLookupQuery","InternBlockQuery","InternConstLookupQuery","InternConstQuery","InternDatabase","InternDatabaseGroupStorage__","InternDatabaseStorage","InternEnumLookupQuery","InternEnumQuery","InternFunctionLookupQuery","InternFunctionQuery","InternImplLookupQuery","InternImplQuery","InternStaticLookupQuery","InternStaticQuery","InternStructLookupQuery","InternStructQuery","InternTraitLookupQuery","InternTraitQuery","InternTypeAliasLookupQuery","InternTypeAliasQuery","InternUnionLookupQuery","InternUnionQuery","LangItemQuery","StaticDataQuery","StructDataQuery","TraitDataQuery","TypeAliasDataQuery","UnionDataQuery","VariantsAttrsQuery","VariantsAttrsSourceMapQuery","attrs","attrs","block_def_map","block_def_map","body","body","body_with_source_map","body_with_source_map","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","const_data","const_data","crate_def_map","crate_def_map_query","crate_def_map_query","crate_lang_items","crate_lang_items","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","enable_proc_attr_macros","enable_proc_attr_macros","enum_data","enum_data","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","expr_scopes","expr_scopes","field_visibilities","field_visibilities","fields_attrs","fields_attrs","fields_attrs_source_map","fields_attrs_source_map","file_item_tree","file_item_tree","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_index","fmt_index","for_each_query","for_each_query","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","function_data","function_data","function_visibility","function_visibility","generic_params","generic_params","impl_data","impl_data","import_map","import_map","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","intern_block","intern_block","intern_const","intern_const","intern_enum","intern_enum","intern_function","intern_function","intern_impl","intern_impl","intern_static","intern_static","intern_struct","intern_struct","intern_trait","intern_trait","intern_type_alias","intern_type_alias","intern_union","intern_union","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","lang_item","lang_item","lookup_intern_block","lookup_intern_block","lookup_intern_const","lookup_intern_const","lookup_intern_enum","lookup_intern_enum","lookup_intern_function","lookup_intern_function","lookup_intern_impl","lookup_intern_impl","lookup_intern_static","lookup_intern_static","lookup_intern_struct","lookup_intern_struct","lookup_intern_trait","lookup_intern_trait","lookup_intern_type_alias","lookup_intern_type_alias","lookup_intern_union","lookup_intern_union","maybe_changed_since","maybe_changed_since","new","new","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","set_enable_proc_attr_macros","set_enable_proc_attr_macros_with_durability","static_data","static_data","struct_data","struct_data","trait_data","trait_data","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_alias_data","type_alias_data","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union_data","union_data","variants_attrs","variants_attrs","variants_attrs_source_map","variants_attrs_source_map","DynMap","K","Key","KeyMap","Policy","V","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","from","from","from","get","get","index","index_mut","insert","insert","into","into","into","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Add","And","ArithOp","ArithOp","Array","Array","Assignment","Async","Await","BinaryOp","BinaryOp","Bind","BindingAnnotation","BitAnd","BitOr","BitXor","Block","Bool","Box","Box","Break","ByteString","Call","Cast","Char","CmpOp","CmpOp","Const","ConstBlock","Continue","Deref","Div","ElementList","Eq","Expr","Expr","ExprId","Field","Float","For","Greater","If","Index","Int","Label","LabelId","Lambda","Less","Let","Lit","Literal","Literal","LogicOp","LogicOp","Loop","MacroStmts","Match","MatchArm","MethodCall","Missing","Missing","Mul","Mutable","Neg","Not","Or","Or","Ord","Ordering","Pat","PatId","Path","Path","Range","Range","Record","RecordFieldPat","RecordLit","RecordLitField","Ref","Ref","Ref","RefMut","Rem","Repeat","Return","Shl","Shr","Slice","Statement","String","Sub","Try","TryBlock","Tuple","Tuple","TupleStruct","Uint","Unannotated","UnaryOp","UnaryOp","Unsafe","While","Wild","Yield","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","expr","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","guard","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","name","name","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","pat","pat","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","walk_child_exprs","walk_child_pats","initializer","repeat","op","negated","ordering","strict","arg_types","args","args","args","arms","base","body","body","body","body","body","body","body","body","callee","condition","condition","else_branch","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","exprs","fields","generic_args","id","index","iterable","label","label","label","label","label","label","lhs","lhs","method_name","mutability","name","op","op","pat","path","range_type","rawness","receiver","ret_type","rhs","rhs","spread","statements","tail","tail","then_branch","type_ref","args","args","args","ellipsis","ellipsis","ellipsis","end","inner","mode","mutability","name","pat","path","path","prefix","slice","start","subpat","suffix","expr","has_semi","initializer","pat","type_ref","ByCrate","BySelf","Plain","PrefixKind","borrow","borrow_mut","clone","clone_into","eq","equivalent","find_path","find_path_prefixed","fmt","from","into","to_owned","try_from","try_into","type_id","ArgumentImplTrait","ConstParamData","ForLifetime","GenericParams","Lifetime","LifetimeParamData","TraitSelf","TypeBound","TypeParam","TypeParamData","TypeParamList","TypeParamProvenance","TypeRef","WherePredicate","WherePredicateTypeTarget","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consts","default","default","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","find_const_by_name","find_trait_self_param","find_type_by_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","lifetimes","name","name","name","ne","ne","ne","ne","ne","ne","provenance","storage","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","where_predicates","bound","bound","bound","lifetimes","target","target","target","Adt","AssociatedItem","BuiltinType","Const","Contains","EnumVariant","Equals","Function","Fuzzy","ImportInfo","ImportKind","ImportMap","ImportPath","Module","Query","SearchMode","Static","Trait","TypeAlias","assoc_items_only","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","case_sensitive","clone","clone","clone_into","clone_into","container","default","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","exclude_import_kind","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","import_info_for","import_map_query","into","into","into","into","into","into","is_trait_assoc_item","limit","name_only","ne","ne","new","path","path_of","search_dependencies","search_mode","segments","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","InternStorage","Internable","Interned","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","drop","eq","eq","equivalent","fmt","fmt","from","from","hash","into","into","new","new","new_str","storage","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","ItemInNs","ItemScope","Macros","PerNsGlobImports","Types","Values","as_module_def_id","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","child_by_source_to","clone","clone_into","declarations","default","default","entries","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","hash","impls","into","into","into","krate","ne","ne","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unnamed_consts","values","AssocItem","AttrOwner","Const","Const","Const","Enum","Enum","ExternBlock","ExternBlock","ExternCrate","ExternCrate","Field","Field","Fields","FileItemTreeId","Function","Function","Function","Glob","Glob","IdRange","Impl","Impl","Import","Import","ImportKind","Inline","ItemTree","ItemTreeId","ItemTreeNode","MacroCall","MacroCall","MacroCall","MacroDef","MacroDef","MacroRules","MacroRules","Mod","Mod","ModItem","ModItem","ModKind","Normal","Outline","PRIV","PUB","PUB_CRATE","Param","Param","Plain","Prefixed","RawVisibilityId","Record","Single","Source","Static","Static","Struct","Struct","TopLevel","Trait","Trait","TreeId","Tuple","TypeAlias","TypeAlias","TypeAlias","TypeOnly","Union","Union","Unit","UseTree","UseTreeKind","Varargs","Variant","Variant","abi","abi","alias","as_assoc_item","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","async_ret_type","attrs","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","children","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","downcast","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expand","fields","fields","fields","file_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragment","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","generic_params","generic_params","generic_params","generic_params","generic_params","generic_params","generic_params","hash","hash","hash","hash","hash","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","inner_items_of_block","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","is_auto","is_extern","is_extern","is_negative","is_unsafe","item_tree","items","items","kind","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","mutable","name","name","name","name","name","name","name","name","name","name","name","name","name","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","next","next_back","params","path","pretty_print","ret_type","self_ty","target_trait","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top_level_attrs","top_level_items","tree_id","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ref","type_ref","type_ref","type_ref","use_tree","use_tree_to_ast","value","variants","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","items","alias","list","path","path","prefix","ATTR_MACRO","AstPtrPolicy","CONST","CONST_PARAM","ENUM","FUNCTION","IMPL","Key","LIFETIME_PARAM","MACRO","RECORD_FIELD","STATIC","STRUCT","TRAIT","TUPLE_FIELD","TYPE_ALIAS","TYPE_PARAM","UNION","VARIANT","borrow","borrow_mut","from","get","insert","into","try_from","try_into","type_id","EnumId","FunctionId","ImplDefId","LangItemTarget","LangItems","StaticId","StructId","TraitId","as_enum","as_function","as_impl_def","as_static","as_struct","as_trait","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","eq","eq","equivalent","equivalent","fmt","fmt","from","from","hash","into","into","lang_attr","ne","ne","target","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","BlockExpr","BlockExpr","CrateRoot","DefMap","File","Inline","Module","ModuleData","ModuleOrigin","ModuleSource","SourceFile","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","clone","clone","clone_into","clone_into","containing_module","declaration_source","definition_source","diagnostics","diagnostics","dump","dump_block_scopes","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","file_id","fmt","fmt","fmt","fmt","from","from","from","from","hash","index","into","into","into","into","is_inline","module_id","modules","modules_for_file","ne","ne","ne","ne","origin","parent","parent","root","scope","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","visibility","with_ancestor_maps","block","declaration","definition","definition","definition","is_mod_rs","DefDiagnostic","DefDiagnosticKind","MacroError","UnconfiguredCode","UnimplementedBuiltinMacro","UnresolvedExternCrate","UnresolvedImport","UnresolvedMacroCall","UnresolvedModule","UnresolvedProcMacro","borrow","borrow","borrow_mut","borrow_mut","eq","eq","equivalent","equivalent","fmt","fmt","from","from","in_module","into","into","kind","ne","ne","try_from","try_from","try_into","try_into","type_id","type_id","ast","ast","ast","ast","ast","ast","ast","candidate","cfg","id","index","message","opts","path","Abs","Alias","AssociatedTypeBinding","Crate","DollarCrate","EMPTY","GenericArg","GenericArgs","ImportAlias","Lifetime","ModPath","Path","PathKind","PathSegment","PathSegments","Plain","Super","Type","Underscore","__name","__name","args","args_and_bindings","as_ident","bindings","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","first","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_kind","from_known_path","from_segments","from_src","from_src","get","has_self_type","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","is_empty","is_ident","is_self","is_self_type","iter","kind","kind","last","len","len","mod_path","name","name","ne","ne","ne","ne","ne","ne","ne","ne","partial_cmp","partial_cmp","pop_segment","push_segment","qualifier","segments","segments","skip","storage","storage","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_anchor","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ref","AsName","Name","as_name","as_tuple_index","borrow","borrow_mut","clone","clone_into","cmp","eq","equivalent","fmt","fmt","from","hash","into","known","missing","name","ne","new_lifetime","new_tuple_field","partial_cmp","to_owned","to_string","try_from","try_into","type_id","Box","Clone","Copy","Debug","Default","Eq","Future","Hash","Index","IntoIterator","Item","Iterator","Neg","Not","Ok","Option","Ord","Output","PartialEq","PartialOrd","Range","RangeFrom","RangeFull","RangeInclusive","RangeTo","RangeToInclusive","Result","SELF_PARAM","SELF_TYPE","STATIC_LIFETIME","Target","Try","abort","add_with_overflow","alloc","asm","assert","bench","bitreverse","bool","boxed","bswap","caller_location","cfg","cfg_accessible","cfg_attr","cfg_eval","char","column","compile_error","concat","concat_idents","core","core_panic","ctlz","ctpop","cttz","derive","discriminant_value","doc","env","f32","f64","file","filter_map","forget","format_args","format_args_nl","future","global_allocator","global_asm","i128","i16","i32","i64","i8","include","include_bytes","include_str","is_empty","isize","iter","iter_mut","len","likely","line","llvm_asm","macro_rules","maxnumf32","maxnumf64","min_align_of","min_align_of_val","minnumf32","minnumf64","module_path","mul_with_overflow","needs_drop","next","ops","option","option_env","prelude","ptr_guaranteed_eq","ptr_guaranteed_ne","register_attr","register_tool","result","rotate_left","rotate_right","rust_2015","rust_2018","rust_2021","rustc_peek","saturating_add","saturating_sub","size_of","size_of_val","std","std_panic","str","stringify","sub_with_overflow","test","test_case","type_id","type_name","u128","u16","u32","u64","u8","unlikely","usize","v1","variant_count","wrapping_add","wrapping_mul","wrapping_sub","PerNs","borrow","borrow_mut","both","clone","clone_into","default","eq","equivalent","filter_visibility","fmt","from","hash","into","is_none","iter_items","macros","macros","ne","none","or","take_macros","take_types","take_types_vis","take_values","to_owned","try_from","try_into","type_id","types","types","values","values","with_visibility","AdtId","AdtSelfType","AdtSelfType","BuiltinType","ConstId","EnumVariantId","EnumVariantId","FunctionId","GenericParam","GenericParam","GenericParam","HasResolver","ImplSelf","ImplSelfType","Label","Local","LocalBinding","MacroDef","ModuleDef","Partial","ResolveValueResult","Resolver","ScopeDef","SelfType","StaticId","StructId","TraitId","TypeAliasId","TypeNs","Unknown","ValueNs","ValueNs","body_owner","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","generic_def","hash","hash","hash","into","into","into","into","into","krate","module","names_in_scope","ne","ne","ne","ne","resolve_known_enum","resolve_known_struct","resolve_known_trait","resolve_module_path_in_items","resolve_module_path_in_trait_assoc_items","resolve_path_as_macro","resolve_path_in_type_ns","resolve_path_in_type_ns_fully","resolve_path_in_value_ns","resolve_path_in_value_ns_fully","resolve_visibility","resolver","resolver_for_expr","resolver_for_scope","to_owned","to_owned","to_owned","to_owned","traits_in_scope","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","where_predicates_in_scope","HasChildSource","HasSource","Value","Value","child_source","source","Array","ConstScalar","DynTrait","Error","Error","Fn","ForLifetime","ImplTrait","Lifetime","LifetimeRef","Macro","Mut","Mutability","Never","Path","Path","Placeholder","RawPtr","RawPtr","Rawness","Ref","Reference","Shared","Slice","TraitRef","Tuple","TypeBound","TypeRef","Unknown","Usize","as_keyword_for_ptr","as_keyword_for_ref","as_path","as_usize","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_ast","from_mutable","from_raw","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","missing","name","ne","ne","ne","ne","ne","path","storage","storage","storage","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","walk","Module","Module","Public","Public","RawVisibility","Visibility","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","equivalent","equivalent","fmt","fmt","from","from","hash","into","into","is_visible_from","ne","ne","resolve","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["hir_defhir_def::adt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::attr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::body","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::body::BodyDiagnostic","","","","","","","","hir_def::body::scope","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::builtin_attr","","","hir_def::builtin_type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::child_by_source","","","hir_def::data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::dbhir_def::dyn_map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::exprhir_def::expr::Array","","hir_def::expr::BinaryOp","hir_def::expr::CmpOp","","","hir_def::expr::Expr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::expr::Pat","","","","","","","","","","","","","","","","","","","hir_def::expr::Statement","","","","","hir_def::find_path","","","","","","","","","","","","","","","","","","","hir_def::generics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::generics::WherePredicate","","","","","","","hir_def::import_map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::intern","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::item_scope","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::item_treehir_def::item_tree::ModKind","hir_def::item_tree::UseTreeKind","","","","","hir_def::keys","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::lang_item","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::nameres","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::nameres::ModuleOrigin","","","","","","hir_def::nameres::diagnostics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::nameres::diagnostics::DefDiagnosticKind","","","","","","","","","","","","","","hir_def::pathhir_def::path::__name","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::path::__name::known","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::per_ns","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::resolver","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::src","","","","","","hir_def::type_ref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::visibility","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A Data Type","","","","A helper trait for converting to MacroCallId","","","","","","","","","","","","","","","","","The defs which have a body.","","","","","","","","","","","","","","","","","","A generic param","","","","","","","","","","","","","","An ID of a module, <strong>local</strong> to a specific crate","","","","The defs which can be visible in the module.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Defines hir-level representation of structs, enums and …","","","","","","","","","","","","","","","","A higher level attributes based on TokenTree, with also …","Defines <code>Body</code>: a lowered representation of bodies of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builtin attributes resolved by nameres.","This module defines built-in types.","When <em>constructing</em> <code>hir</code>, we start at some parent syntax …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains basic data about various HIR declarations.","Defines database & queries for name resolution.","","This module defines a <code>DynMap</code> – a container for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module describes hir-level representation of …","","An algorithm to find a path to refer to a certain item.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Many kinds of items or constructs can have generic …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A map of all publicly exported items in a crate.","Global <code>Arc</code>-based object interning infrastructure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes items defined or visible (ie, imported) in a …","A simplified AST that only contains items.","keys to be used with <code>DynMap</code>","","","Collects lang items: items marked with <code>#[lang = \\\"...\\\"]</code> …","The module’s ID in its originating <code>DefMap</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the module containing <code>self</code> (or <code>self</code>, if <code>self</code> is …","","","","This module implements import-resolution/macro expansion …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A desugared representation of paths like <code>crate::foo</code> or …","","In rust, it is possible to have a value, a type and a …","Name resolution façade.","","","","","","","","","","","","","","","","","","Utilities for mapping between hir IDs and the surface …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","HIR for references to types. Paths in these are not yet …","","Defines hir-level representation of visibility (e.g. <code>pub</code> …","","","A single field of an enum variant or struct","","","","","","Note that we use <code>StructData</code> for unions as well!","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A struct to map text ranges from [<code>Documentation</code>] back to …","Holds documentation","","<code>#[attr = \\\"string\\\"]</code>","<code>#[attr(subtree)]</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maps the lowered <code>Attr</code> back to its original syntax node.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The body of an item (function, const etc.).","","An item body together with the mapping from syntax nodes …","","","","","","","","","","","","","","","Returns an iterator over all block expressions in this …","The <code>ExprId</code> of the actual body expression.","","","","","","","","","","","","","","","","","","","","","Get a reference to the body source map’s diagnostics.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The patterns for the function’s parameters. While the …","","","Name resolution for expressions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If <code>scope</code> refers to a block expression scope, returns the …","","","","","","","","","","","","","","","","","","","","","","","If <code>scope</code> refers to a labeled expression scope, returns …","","","","","","","","","","","","","","","","","","","Built-in macro-like attributes.","“Inert” built-in attributes that have a special …","Ignored attribute namespaces used by tools.","","","","Different signed int types.","","Different unsigned int types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bounds restricting the type alias itself (eg. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","True if the first param is <code>self</code>. This is relevant to …","","","","","","","","","","","","","","","","","","","","","","","","const _: () = ();","","","","","","","","","","","Whether the trait has …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Representative struct for the query group.","","","","","","","","","","","","","","","","","","","Representative struct for the query group.","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the block-level <code>DefMap</code>, returning <code>None</code> when <code>block</code>…et access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the value of the <code>enable_proc_attr_macros</code> input.","Set the value of the <code>enable_proc_attr_macros</code> input and …xplicit binding annotations given in the HIR for a …","","","","","","","","","","","","","","","","","","The <code>*</code> operator for dereferencing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is produced if the syntax tree does not have a …","","","Annotated with <code>mut x</code> – could be either ref or not, …","The <code>-</code> operator for negation","The <code>!</code> operator for logical inversion","","","","","Close relative to rustc’s hir::PatKind","","","","","","","","","","","Annotated as <code>ref</code>, like <code>ref x</code>","","Annotated as <code>ref mut x</code>.","","","","","","","","","","","","","","","","No binding annotation given: this means that the final …auses paths to start with <code>crate</code> where applicable, …","Causes paths to always start with either <code>self</code>, <code>super</code>, …","Causes paths to ignore imports in the local module.","","","","","","","","Find a path that can be used to refer to a certain item. …","","","","","","","","","","Data about a generic const parameter (to a function, …","","Data about the generic parameters of a function, struct, …","","Data about a generic lifetime parameter (to a function, …","","","For desugared where predicates that can directly refer to …","Data about a generic type parameter (to a function, …","","","","A single predicate from a where clause, i.e. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Import map entry should contain the query string.","","Import map entry should strictly match the query string.","","Import map entry should contain all letters from the …","Item import details stored in the <code>ImportMap</code>.","","A map from publicly exported items to the path needed to …","","","","A way to match import map contents against the search …","","","","Matches only the entries that are associated items, …","","","","","","","","","","","","","Respect casing of the query string when matching.","","","","","The module containing this item.","","","","","","","","","","Do not include imports of the specified kind in the …","","","","","","","","","","","","","","","","","","","","","","","Whether the import is a trait associated item or not.","Limits the returned number of items to <code>limit</code>.","Matches entries’ names only, ignoring the rest of the …","","","","A path that can be used to import the item, relative to …","Returns the <code>ModPath</code> needed to import/mention <code>item</code>, …","Searches dependencies of <code>krate</code> for an importable path …","Specifies the way to search for the entries using the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the crate defining this item (or <code>None</code> if <code>self</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","","A single field of an enum variant or struct","","","","","","","","This is a glob-import of all names in the <code>ModPath</code>.","A range of densely allocated ItemTree IDs.","","","","","","<code>mod m { ... }</code>","The item tree of a source file.","","Trait implemented by all item nodes in the item tree.","","","","“Macros 2.0” macro definition.","","","","","","","Attributes on an item.","","","<code>mod m;</code>","","","","","","The <code>ModPath</code> is imported normally.","","","","","","","","","","Inner attributes of the source file.","","","Identifies a particular [<code>ItemTree</code>].","","","","","This is a <code>some::path::self</code> import, which imports …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bounds on the type alias itself. Only valid in trait …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Expands the <code>UseTree</code> into individually imported <code>ModPath</code>s.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Downcasts a <code>ModItem</code> to a <code>FileItemTreeId</code> specific to this …","","","","","","","","","","","","","","","","","Upcasts a <code>FileItemTreeId</code> to a generic <code>ModItem</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the static is in an <code>extern</code> block.","","","","","","","","Looks up an instance of <code>Self</code> in an item tree.","","","","","","","","","","","","","","","","","","","","","","","const _: () = ();","","","","","The name of the declared macro.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Path to the called macro.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the inner attributes of the source file.","Returns an iterator over all items located at the top …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maps a <code>UseTree</code> contained in this import back to its AST …","","","","","","","","","","","","","","","","","","","","","","","XXX: AST Nodes and SyntaxNodes have identity equality …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pseudo-module introduced by a block scope (contains only …","","","Contains the results of (early) name resolution.","Note that non-inline modules, by definition, live inside …","","","","","","","","","","","","","","","","","","","","Returns the module containing <code>local_mod</code>, either the …","Returns a node which declares this module, either a …","Returns a node which defines this module. That is, a file …","Diagnostics emitted during DefMap construction.","Get a reference to the def map’s diagnostics.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Where does this module come from?","If this <code>DefMap</code> is for a block expression, returns the …","","","","","","","","","","","","","","","","","","Declared visibility of this module.","Ascends the <code>DefMap</code> hierarchy and calls <code>f</code> with every <code>DefMap</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Absolute path (::foo)","Named alias","An associated type binding like in <code>Iterator<Item = T></code>.","","<code>$crate</code> from macro expansion","","A single generic argument.","Generic arguments to a path segment (e.g. the <code>i32</code> in …","","","","","","","","","<code>self::</code> is <code>Super(0)</code>","","Unnamed alias, as in <code>use Foo as _;</code>","See [<code>Name</code>].","","","","If this path is a single identifier, like <code>foo</code>, return its …","Associated type bindings like in <code>Iterator<Item = T></code>.","","","","","","","","","","","","","","","","","","","Bounds for the associated type, like in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>ModPath</code> from a <code>PathKind</code>, with no extra path …","Converts a known mod path to <code>Path</code>.","","","Converts an <code>ast::Path</code> to <code>Path</code>. Works with use trees. It …","","This specifies whether the args contain a Self type as …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of segments in the path (counting …","","The name of the associated type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The type bound to this associated type (in <code>Item = T</code>, this …","","<code>Name</code> is a wrapper around string, which is used in hir for …","","","","","","","","","","","","","","","","A fake name for things missing in the source codeeturns a set of names available in the current scope.","","","","","Resolve known enum from std, like <code>std::result::Result</code>","Resolve known struct from std, like <code>std::boxed::Box</code>","Resolve known trait from std, like <code>std::futures::Future</code>","","","","","","","","","Builds a resolver for type references inside this def.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A concrete constant value","","","","A fn pointer. Last element of the vector is the return …","","","","","","","","","","","","","","","","","","","","","","Compare ty::Ty","Case of an unknown value that rustc might know but we don…","","","","","Gets a target usize out of the ConstScalar","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts an <code>ast::TypeRef</code> to a <code>hir::TypeRef</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>pub(in module)</code>, <code>pub(crate)</code> or <code>pub(super)</code>. Also private, …","Visibility is restricted to a certain module.","<code>pub</code>.","Visibility is unrestricted.","Visibility of an item, not yet resolved.","Visibility of an item, with the path resolved.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"if":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["adtid",4]],[[["crateid",3],["defdatabase",8]],[["option",4],["macrocallid",3]]],[[["crateid",3],["defdatabase",8],["fnmut",8]],[["result",4],["result",4],["unresolvedmacro",3]]],[[],[["option",4],["genericdefid",4]]],[[],["internid",3]],[[],["internid",3]],[[],["internid",3]],[[],["internid",3]],[[],["internid",3]],[[],["internid",3]],[[],["internid",3]],[[],["internid",3]],[[],["internid",3]],[[],["internid",3]],[[["defdatabase",8]],["moditem",4]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["dynmap",3],["defdatabase",8]]],[[["dynmap",3],["defdatabase",8]]],[[["dynmap",3],["defdatabase",8]]],[[["dynmap",3],["defdatabase",8]]],[[["dynmap",3],["defdatabase",8]]],[[["dynmap",3],["defdatabase",8]]],[[["dynmap",3],["defdatabase",8]]],[[["defdatabase",8]],[["arenamap",3],["infile",3]]],[[["defdatabase",8]],[["arenamap",3],["infile",3]]],[[["defdatabase",8]],[["infile",3],["arenamap",3]]],[[["defdatabase",8]],[["infile",3],["arenamap",3]]],[[["defdatabase",8]],[["arenamap",3],["infile",3]]],[[],["moduleid",3]],[[]],[[]],[[],["functionid",3]],[[],["structid",3]],[[],["unionid",3]],[[],["enumid",3]],[[],["enumvariantid",3]],[[],["fieldid",3]],[[],["constid",3]],[[],["staticid",3]],[[],["traitid",3]],[[],["typealiasid",3]],[[],["implid",3]],[[],["blockid",3]],[[],["blockloc",3]],[[],["typeparamid",3]],[[],["lifetimeparamid",3]],[[],["constparamid",3]],[[],["assoccontainerid",4]],[[],["adtid",4]],[[],["genericparamid",4]],[[],["moduledefid",4]],[[],["defwithbodyid",4]],[[],["associtemid",4]],[[],["genericdefid",4]],[[],["attrdefid",4]],[[],["variantid",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["structid",3]],["ordering",4]],[[["unionid",3]],["ordering",4]],[[["enumid",3]],["ordering",4]],[[["implid",3]],["ordering",4]],[[["blockid",3]],["ordering",4]],[[["adtid",4]],["ordering",4]],null,null,[[],[["blockid",3],["option",4]]],[[["defdatabase",8]],[["moduleid",3],["option",4]]],null,null,[[["defdatabase",8]],[["arc",3],["defmap",3]]],null,[[["moduleid",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["functionid",3]],["bool",15]],[[["structid",3]],["bool",15]],[[["unionid",3]],["bool",15]],[[["enumid",3]],["bool",15]],[[["enumvariantid",3]],["bool",15]],[[["fieldid",3]],["bool",15]],[[["constid",3]],["bool",15]],[[["staticid",3]],["bool",15]],[[["traitid",3]],["bool",15]],[[["typealiasid",3]],["bool",15]],[[["implid",3]],["bool",15]],[[["blockid",3]],["bool",15]],[[["blockloc",3]],["bool",15]],[[["typeparamid",3]],["bool",15]],[[["lifetimeparamid",3]],["bool",15]],[[["constparamid",3]],["bool",15]],[[["assoccontainerid",4]],["bool",15]],[[["adtid",4]],["bool",15]],[[["genericparamid",4]],["bool",15]],[[["moduledefid",4]],["bool",15]],[[["defwithbodyid",4]],["bool",15]],[[["associtemid",4]],["bool",15]],[[["genericdefid",4]],["bool",15]],[[["attrdefid",4]],["bool",15]],[[["variantid",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[["defdatabase",8]],["hirfileid",3]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["moduleid",3]],["assoccontainerid",4]],[[]],[[["enumid",3]],["adtid",4]],[[["unionid",3]],["adtid",4]],[[["structid",3]],["adtid",4]],[[]],[[["constparamid",3]],["genericparamid",4]],[[["lifetimeparamid",3]],["genericparamid",4]],[[["typeparamid",3]],["genericparamid",4]],[[["enumid",3]],["moduledefid",4]],[[["moduleid",3]],["moduledefid",4]],[[["typealiasid",3]],["moduledefid",4]],[[["traitid",3]],["moduledefid",4]],[[["functionid",3]],["moduledefid",4]],[[["staticid",3]],["moduledefid",4]],[[["adtid",4]],["moduledefid",4]],[[["builtintype",4]],["moduledefid",4]],[[]],[[["constid",3]],["moduledefid",4]],[[["enumvariantid",3]],["moduledefid",4]],[[["unionid",3]],["moduledefid",4]],[[["structid",3]],["moduledefid",4]],[[["staticid",3]],["defwithbodyid",4]],[[["constid",3]],["defwithbodyid",4]],[[["functionid",3]],["defwithbodyid",4]],[[]],[[["constid",3]],["associtemid",4]],[[["functionid",3]],["associtemid",4]],[[]],[[["typealiasid",3]],["associtemid",4]],[[]],[[["constid",3]],["genericdefid",4]],[[["enumid",3]],["genericdefid",4]],[[["unionid",3]],["genericdefid",4]],[[["functionid",3]],["genericdefid",4]],[[["enumvariantid",3]],["genericdefid",4]],[[["implid",3]],["genericdefid",4]],[[["associtemid",4]]],[[["structid",3]],["genericdefid",4]],[[["adtid",4]],["genericdefid",4]],[[["traitid",3]],["genericdefid",4]],[[["typealiasid",3]],["genericdefid",4]],[[["constid",3]],["attrdefid",4]],[[["unionid",3]],["attrdefid",4]],[[["fieldid",3]],["attrdefid",4]],[[["staticid",3]],["attrdefid",4]],[[["moduleid",3]],["attrdefid",4]],[[]],[[["enumvariantid",3]],["attrdefid",4]],[[["traitid",3]],["attrdefid",4]],[[["typealiasid",3]],["attrdefid",4]],[[["structid",3]],["attrdefid",4]],[[["macrodefid",3]],["attrdefid",4]],[[["enumid",3]],["attrdefid",4]],[[["implid",3]],["attrdefid",4]],[[["functionid",3]],["attrdefid",4]],[[["assoccontainerid",4]]],[[["genericparamid",4]],["attrdefid",4]],[[["adtid",4]],["attrdefid",4]],[[["enumvariantid",3]],["variantid",4]],[[["structid",3]],["variantid",4]],[[]],[[["unionid",3]],["variantid",4]],[[]],[[["internid",3]]],[[["internid",3]]],[[["internid",3]]],[[["internid",3]]],[[["internid",3]]],[[["internid",3]]],[[["internid",3]]],[[["internid",3]]],[[["internid",3]]],[[["internid",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[],["crateid",3]],[[["defdatabase",8]],["crateid",3]],null,null,null,null,null,null,null,[[["defdatabase",8]]],[[["defdatabase",8]],[["function",3],["associtemloc",3]]],[[["defdatabase",8]],[["itemloc",3],["struct",3]]],[[["defdatabase",8]],["unionloc",6]],[[["defdatabase",8]],["enumloc",6]],[[["defdatabase",8]],[["associtemloc",3],["const",3]]],[[["defdatabase",8]],["staticloc",6]],[[["defdatabase",8]],["traitloc",6]],[[["defdatabase",8]],[["associtemloc",3],["typealias",3]]],[[["defdatabase",8]],[["itemloc",3],["impl",3]]],[[["defdatabase",8]],["blockloc",3]],[[["defdatabase",8]],["moduleid",3]],[[["defdatabase",8]],["moduleid",3]],[[["defdatabase",8]],["moduleid",3]],[[["defdatabase",8]],["moduleid",3]],[[["defdatabase",8]],["moduleid",3]],[[["defdatabase",8]],["moduleid",3]],[[["defdatabase",8]],["moduleid",3]],[[["defdatabase",8]],[["moduleid",3],["option",4]]],[[["defdatabase",8]],["moduleid",3]],[[["defdatabase",8]],["moduleid",3]],[[["defdatabase",8]],["moduleid",3]],null,[[["moduleid",3]],["bool",15]],[[["functionid",3]],["bool",15]],[[["structid",3]],["bool",15]],[[["unionid",3]],["bool",15]],[[["enumid",3]],["bool",15]],[[["enumvariantid",3]],["bool",15]],[[["fieldid",3]],["bool",15]],[[["constid",3]],["bool",15]],[[["staticid",3]],["bool",15]],[[["traitid",3]],["bool",15]],[[["typealiasid",3]],["bool",15]],[[["implid",3]],["bool",15]],[[["blockid",3]],["bool",15]],[[["blockloc",3]],["bool",15]],[[["typeparamid",3]],["bool",15]],[[["lifetimeparamid",3]],["bool",15]],[[["constparamid",3]],["bool",15]],[[["assoccontainerid",4]],["bool",15]],[[["adtid",4]],["bool",15]],[[["genericparamid",4]],["bool",15]],[[["moduledefid",4]],["bool",15]],[[["defwithbodyid",4]],["bool",15]],[[["associtemid",4]],["bool",15]],[[["genericdefid",4]],["bool",15]],[[["attrdefid",4]],["bool",15]],[[["variantid",4]],["bool",15]],null,null,null,null,null,[[["structid",3]],[["option",4],["ordering",4]]],[[["unionid",3]],[["option",4],["ordering",4]]],[[["enumid",3]],[["option",4],["ordering",4]]],[[["implid",3]],[["option",4],["ordering",4]]],[[["blockid",3]],[["option",4],["ordering",4]]],[[["adtid",4]],[["option",4],["ordering",4]]],null,null,null,null,[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["infile",3]],[[["defdatabase",8]],["infile",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["defdatabase",8]],[["variantdata",4],["arc",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["structdata",3]],[[],["enumdata",3]],[[],["enumvariantdata",3]],[[],["variantdata",4]],[[],["fielddata",3]],[[],["reprkind",4]],[[],["structkind",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["structdata",3]],["bool",15]],[[["enumdata",3]],["bool",15]],[[["enumvariantdata",3]],["bool",15]],[[["variantdata",4]],["bool",15]],[[["fielddata",3]],["bool",15]],[[["reprkind",4]],["bool",15]],[[["structkind",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["name",3]],[["localfieldid",6],["option",4]]],[[],["arena",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["structkind",4]],null,null,null,null,[[["structdata",3]],["bool",15]],[[["enumdata",3]],["bool",15]],[[["enumvariantdata",3]],["bool",15]],[[["variantdata",4]],["bool",15]],[[["fielddata",3]],["bool",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["name",3]],[["localenumvariantid",6],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["attrquery",3]],[[],[["cfgexpr",4],["option",4]]],[[],["documentation",3]],[[],["attrs",3]],[[],["attrswithowner",3]],[[],["attr",3]],[[],["attrinput",4]],[[],["attrquery",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["attrs",3]],[[]],[[],["attrs",3]],[[],[["option",4],["documentation",3]]],[[["defdatabase",8]],["option",4]],[[["documentation",3]],["bool",15]],[[["attrs",3]],["bool",15]],[[["attrswithowner",3]],["bool",15]],[[["attr",3]],["bool",15]],[[["attrinput",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["textrange",3]],[["option",4],["infile",3]]],[[["documentation",3]],["bool",15]],[[["attrs",3]],["bool",15]],[[["attrswithowner",3]],["bool",15]],[[["attr",3]],["bool",15]],[[["attrinput",4]],["bool",15]],[[["string",3]]],[[["defdatabase",8]],["attrsourcemap",3]],[[["attr",3]],[["infile",3],["either",4]]],[[],["internstorage",3]],[[],[["option",4],["smolstr",3]]],[[],[["smolstr",3],["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["defdatabase",8]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["syntheticsyntax",3]],[[]],[[],["hirfileid",3]],null,[[],["bodysourcemap",3]],[[],["syntheticsyntax",3]],[[]],[[["defdatabase",8],["macrocall",3]],[["expandresult",3],["unresolvedmacro",3],["result",4]]],[[["body",3]],["bool",15]],[[["bodysourcemap",3]],["bool",15]],[[["syntheticsyntax",3]],["bool",15]],[[["bodydiagnostic",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["mark",3],["defdatabase",8]]],[[["exprid",6]],[["syntheticsyntax",3],["exprsource",6],["result",4]]],null,[[["exprid",6]],[["infile",3],["astptr",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["patid",6]],["pat",4]],[[["exprid",6]],["expr",4]],[[["labelid",6]],["label",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["labelid",6]],["labelsource",6]],null,[[["body",3]],["bool",15]],[[["bodysourcemap",3]],["bool",15]],[[["bodydiagnostic",4]],["bool",15]],[[["defdatabase",8],["hirfileid",3]]],[[["moduleid",3],["hirfileid",3],["defdatabase",8]],["expander",3]],[[["infile",3],["expr",4]],[["option",4],["exprid",6]]],[[["infile",3],["recordexprfield",3]],[["option",4],["exprid",6]]],[[["infile",3],["label",3]],[["option",4],["labelid",6]]],[[["infile",3],["macrocall",3]],[["hirfileid",3],["option",4]]],[[["infile",3],["pat",4]],[["option",4],["patid",6]]],[[["selfparam",3],["infile",3]],[["option",4],["patid",6]]],null,[[["patid",6]],[["syntheticsyntax",3],["patsource",6],["result",4]]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["hygiene",3],["defdatabase",8]]],null,null,null,null,null,null,null,null,null,null,null,null,[[["scopeid",6]],[["blockid",3],["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["scopeid",6]]],[[["exprscopes",3]],["bool",15]],[[["scopeentry",3]],["bool",15]],[[["scopedata",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["scopeid",6]],["option",4]],[[],["name",3]],[[["exprscopes",3]],["bool",15]],[[["scopeentry",3]],["bool",15]],[[["scopedata",3]],["bool",15]],[[],["patid",6]],[[["scopeid",6],["name",3]],[["option",4],["scopeentry",3]]],[[],["fxhashmap",6]],[[["option",4],["scopeid",6]]],[[["exprid",6]],[["option",4],["scopeid",6]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["name",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["builtinint",4]],[[],["builtinuint",4]],[[],["builtinfloat",4]],[[],["builtintype",4]],[[]],[[]],[[]],[[]],[[["builtinint",4]],["ordering",4]],[[["builtinuint",4]],["ordering",4]],[[["builtinfloat",4]],["ordering",4]],[[["builtinint",4]],["bool",15]],[[["builtinuint",4]],["bool",15]],[[["builtinfloat",4]],["bool",15]],[[["builtintype",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["str",15]],[["builtinint",4],["option",4]]],[[["str",15]],[["builtinuint",4],["option",4]]],[[["str",15]],[["option",4],["builtinfloat",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["builtintype",4]],["bool",15]],[[["builtinint",4]],[["option",4],["ordering",4]]],[[["builtinuint",4]],[["option",4],["ordering",4]]],[[["builtinfloat",4]],[["option",4],["ordering",4]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["defdatabase",8]],["dynmap",3]],[[["dynmap",3],["defdatabase",8]]],null,null,null,null,null,null,null,[[["name",3]],[["option",4],["typealiasid",3]]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["functiondata",3]],[[],["typealiasdata",3]],[[],["traitdata",3]],[[],["impldata",3]],[[],["constdata",3]],[[],["staticdata",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["functiondata",3]],["bool",15]],[[["typealiasdata",3]],["bool",15]],[[["traitdata",3]],["bool",15]],[[["impldata",3]],["bool",15]],[[["constdata",3]],["bool",15]],[[["staticdata",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],null,[[],["bool",15]],[[],["bool",15]],null,null,[[],["bool",15]],null,[[],["bool",15]],null,[[],["bool",15]],null,null,null,null,null,null,null,null,[[["functiondata",3]],["bool",15]],[[["typealiasdata",3]],["bool",15]],[[["traitdata",3]],["bool",15]],[[["impldata",3]],["bool",15]],[[["constdata",3]],["bool",15]],[[["staticdata",3]],["bool",15]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["attrdefid",4]],["attrswithowner",3]],null,[[["blockid",3]],[["arc",3],["option",4]]],null,[[["defwithbodyid",4]],[["arc",3],["body",3]]],null,[[["defwithbodyid",4]]],nullconstid",3]],[["arc",3],["constdata",3]]],null,[[["crateid",3]],[["arc",3],["defmap",3]]],[[["crateid",3]],[["arc",3],["defmap",3]]],null,[[["crateid",3]],[["langitems",3],["arc",3]]],null,[[],["internfunctionquery",3]],[[],["internfunctionlookupquery",3]],[[],["internstructquery",3]],[[],["internstructlookupquery",3]],[[],["internunionquery",3]],[[],["internunionlookupquery",3]],[[],["internenumquery",3]],[[],["internenumlookupquery",3]],[[],["internconstquery",3]],[[],["internconstlookupquery",3]],[[],["internstaticquery",3]],[[],["internstaticlookupquery",3]],[[],["interntraitquery",3]],[[],["interntraitlookupquery",3]],[[],["interntypealiasquery",3]],[[],["interntypealiaslookupquery",3]],[[],["internimplquery",3]],[[],["internimpllookupquery",3]],[[],["internblockquery",3]],[[],["internblocklookupquery",3]],[[],["enableprocattrmacrosquery",3]],[[],["fileitemtreequery",3]],[[],["cratedefmapqueryquery",3]],[[],["blockdefmapquery",3]],[[],["structdataquery",3]],[[],["uniondataquery",3]],[[],["enumdataquery",3]],[[],["impldataquery",3]],[[],["traitdataquery",3]],[[],["typealiasdataquery",3]],[[],["functiondataquery",3]],[[],["constdataquery",3]],[[],["staticdataquery",3]],[[],["bodywithsourcemapquery",3]],[[],["bodyquery",3]],[[],["exprscopesquery",3]],[[],["genericparamsquery",3]],[[],["variantsattrsquery",3]],[[],["fieldsattrsquery",3]],[[],["variantsattrssourcemapquery",3]],[[],["fieldsattrssourcemapquery",3]],[[],["attrsquery",3]],[[],["cratelangitemsquery",3]],[[],["langitemquery",3]],[[],["importmapquery",3]],[[],["fieldvisibilitiesquery",3]],[[],["functionvisibilityquery",3]],[[],["bool",15]],null,[[["enumid",3]],[["enumdata",3],["arc",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["defwithbodyid",4]],[["arc",3],["exprscopes",3]]],null,[[["variantid",4]],[["arc",3],["arenamap",3]]],null,[[["variantid",4]],[["arc",3],["arenamap",3]]],null,[[["variantid",4]],[["arc",3],["arenamap",3]]],null,[[["hirfileid",3]],[["arc",3],["itemtree",3]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["interndatabase",8],["formatter",3],["databasekeyindex",3]],["result",6]],[[["formatter",3],["defdatabase",8],["databasekeyindex",3]],["result",6]],[[["fnmut",8],["runtime",3]]],[[["fnmut",8],["runtime",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["functionid",3]],[["functiondata",3],["arc",3]]],null,[[["functionid",3]],["visibility",4]],null,[[["genericdefid",4]],[["genericparams",3],["interned",3]]],null,[[["implid",3]],[["impldata",3],["arc",3]]],null,[[["crateid",3]],[["importmap",3],["arc",3]]],null,[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["blockloc",3]],["blockid",3]],null,[[["associtemloc",3],["const",3]],["constid",3]],null,[[["enumloc",6]],["enumid",3]],null,[[["function",3],["associtemloc",3]],["functionid",3]],null,[[["itemloc",3],["impl",3]],["implid",3]],null,[[["staticloc",6]],["staticid",3]],null,[[["itemloc",3],["struct",3]],["structid",3]],null,[[["traitloc",6]],["traitid",3]],null,[[["associtemloc",3],["typealias",3]],["typealiasid",3]],null,[[["unionloc",6]],["unionid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["crateid",3],["smolstr",3]],[["option",4],["langitemtarget",4]]],null,[[["blockid",3]],["blockloc",3]],null,[[["constid",3]],[["associtemloc",3],["const",3]]],null,[[["enumid",3]],["enumloc",6]],null,[[["functionid",3]],[["function",3],["associtemloc",3]]],null,[[["implid",3]],[["itemloc",3],["impl",3]]],null,[[["staticid",3]],["staticloc",6]],null,[[["structid",3]],[["itemloc",3],["struct",3]]],null,[[["traitid",3]],["traitloc",6]],null,[[["typealiasid",3]],[["associtemloc",3],["typealias",3]]],null,[[["unionid",3]],["unionloc",6]],null,[[["interndatabase",8],["revision",3],["databasekeyindex",3]],["bool",15]],[[["revision",3],["defdatabase",8],["databasekeyindex",3]],["bool",15]],[[["u16",15]]],[[["u16",15]]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[["bool",15]]],[[["durability",3],["bool",15]]],[[["staticid",3]],[["arc",3],["staticdata",3]]],null,[[["structid",3]],[["structdata",3],["arc",3]]],null,[[["traitid",3]],[["traitdata",3],["arc",3]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["typealiasid",3]],[["typealiasdata",3],["arc",3]]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["unionid",3]],[["structdata",3],["arc",3]]],null,[[["enumid",3]],[["arc",3],["arenamap",3]]],null,[[["enumid",3]],[["arc",3],["arenamap",3]]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["key",3]],[[]],[[]],[[]],[[]],[[]],[[["dynmap",3]],["option",4]],[[],["option",4]],[[["key",3]]],[[["key",3]]],[[["dynmap",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["label",3]],[[],["literal",4]],[[],["expr",4]],[[],["binaryop",4]],[[],["logicop",4]],[[],["cmpop",4]],[[],["ordering",4]],[[],["arithop",4]],[[],["array",4]],[[],["matcharm",3]],[[],["recordlitfield",3]],[[],["statement",4]],[[],["bindingannotation",4]],[[],["recordfieldpat",3]],[[],["pat",4]],[[],["prefixop",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["label",3]],["bool",15]],[[["literal",4]],["bool",15]],[[["expr",4]],["bool",15]],[[["binaryop",4]],["bool",15]],[[["logicop",4]],["bool",15]],[[["cmpop",4]],["bool",15]],[[["ordering",4]],["bool",15]],[[["arithop",4]],["bool",15]],[[["array",4]],["bool",15]],[[["matcharm",3]],["bool",15]],[[["recordlitfield",3]],["bool",15]],[[["statement",4]],["bool",15]],[[["bindingannotation",4]],["bool",15]],[[["recordfieldpat",3]],["bool",15]],[[["pat",4]],["bool",15]],[[["prefixop",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[["literalkind",4]]],[[]],[[]],[[["binop",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["label",3]],["bool",15]],[[["literal",4]],["bool",15]],[[["expr",4]],["bool",15]],[[["binaryop",4]],["bool",15]],[[["cmpop",4]],["bool",15]],[[["array",4]],["bool",15]],[[["matcharm",3]],["bool",15]],[[["recordlitfield",3]],["bool",15]],[[["statement",4]],["bool",15]],[[["recordfieldpat",3]],["bool",15]],[[["pat",4]],["bool",15]],[[["bool",15]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["prefixkind",4]],[[]],[[["prefixkind",4]],["bool",15]],[[],["bool",15]],[[["moduleid",3],["defdatabase",8],["iteminns",4]],[["modpath",3],["option",4]]],[[["moduleid",3],["prefixkind",4],["defdatabase",8],["iteminns",4]],[["modpath",3],["option",4]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["typeparamdata",3]],[[],["lifetimeparamdata",3]],[[],["constparamdata",3]],[[],["typeparamprovenance",4]],[[],["genericparams",3]],[[],["wherepredicate",4]],[[],["wherepredicatetypetarget",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["genericparams",3]],null,[[["typeparamdata",3]],["bool",15]],[[["lifetimeparamdata",3]],["bool",15]],[[["constparamdata",3]],["bool",15]],[[["typeparamprovenance",4]],["bool",15]],[[["genericparams",3]],["bool",15]],[[["wherepredicate",4]],["bool",15]],[[["wherepredicatetypetarget",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["name",3]],[["option",4],["localconstparamid",6]]],[[],[["option",4],["localtypeparamid",6]]],[[["name",3]],[["option",4],["localtypeparamid",6]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[["typeparamdata",3]],["bool",15]],[[["lifetimeparamdata",3]],["bool",15]],[[["constparamdata",3]],["bool",15]],[[["genericparams",3]],["bool",15]],[[["wherepredicate",4]],["bool",15]],[[["wherepredicatetypetarget",4]],["bool",15]],null,[[],["internstorage",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["importinfo",3]],[[],["importpath",3]],[[]],[[]],null,[[],["importmap",3]],[[["importinfo",3]],["bool",15]],[[["importpath",3]],["bool",15]],[[],["bool",15]],[[["importkind",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["importkind",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["iteminns",4]],[["importinfo",3],["option",4]]],[[["crateid",3],["defdatabase",8]],["arc",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["usize",15]]],[[]],[[["importinfo",3]],["bool",15]],[[["importpath",3]],["bool",15]],[[["string",3]]],null,[[["iteminns",4]],[["importpath",3],["option",4]]],[[["crateid",3],["defdatabase",8],["query",3]],[["fxhashset",6],["iteminns",4]]],[[["searchmode",4]]],null,[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]]],[[],["internstorage",3]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,[[],[["option",4],["moduledefid",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["dynmap",3],["defdatabase",8]]],[[],["iteminns",4]],[[]],[[]],[[],["pernsglobimports",3]],[[],["itemscope",3]],[[]],[[["itemscope",3]],["bool",15]],[[["iteminns",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["defdatabase",8]],[["crateid",3],["option",4]]],[[["itemscope",3]],["bool",15]],[[["iteminns",4]],["bool",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["option",4],["associtem",4]]],[[],["fileastid",3]],[[["itemtree",3]],[["fileastid",3],["item",4]]],[[],["fileastid",3]],[[],["fileastid",3]],[[],["fileastid",3]],[[],["fileastid",3]],[[],["fileastid",3]],[[],["fileastid",3]],[[],["fileastid",3]],[[],["fileastid",3]],[[],["fileastid",3]],[[],["fileastid",3]],[[],["fileastid",3]],[[],["fileastid",3]],[[],["fileastid",3]],[[],["fileastid",3]],[[],["fileastid",3]],[[],["fileastid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["crateid",3],["defdatabase",8],["attrowner",4]],["attrs",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[],["rawvisibilityid",3]],[[],["treeid",3]],[[]],[[],["moditem",4]],[[],["import",3]],[[],["usetree",3]],[[],["usetreekind",4]],[[],["externcrate",3]],[[],["externblock",3]],[[],["function",3]],[[],["param",4]],[[],["struct",3]],[[],["union",3]],[[],["enum",3]],[[],["const",3]],[[],["static",3]],[[],["trait",3]],[[],["impl",3]],[[],["typealias",3]],[[],["mod",3]],[[],["modkind",4]],[[],["macrocall",3]],[[],["macrorules",3]],[[],["macrodef",3]],[[],["importkind",4]],[[],["associtem",4]],[[],["fields",4]],[[],["field",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["itemtree",3]],[[],[["fileitemtreeid",3],["option",4]]],[[["fileitemtreeid",3]],["bool",15]],[[],["bool",15]],[[["rawvisibilityid",3]],["bool",15]],[[["itemtree",3]],["bool",15]],[[["attrowner",4]],["bool",15]],[[["treeid",3]],["bool",15]],[[],["bool",15]],[[["moditem",4]],["bool",15]],[[["import",3]],["bool",15]],[[["usetree",3]],["bool",15]],[[["usetreekind",4]],["bool",15]],[[["externcrate",3]],["bool",15]],[[["externblock",3]],["bool",15]],[[["function",3]],["bool",15]],[[["param",4]],["bool",15]],[[["struct",3]],["bool",15]],[[["union",3]],["bool",15]],[[["enum",3]],["bool",15]],[[["const",3]],["bool",15]],[[["static",3]],["bool",15]],[[["trait",3]],["bool",15]],[[["impl",3]],["bool",15]],[[["typealias",3]],["bool",15]],[[["mod",3]],["bool",15]],[[["modkind",4]],["bool",15]],[[["macrocall",3]],["bool",15]],[[["macrorules",3]],["bool",15]],[[["macrodef",3]],["bool",15]],[[["importkind",4]],["bool",15]],[[["associtem",4]],["bool",15]],[[["variant",3]],["bool",15]],[[["fields",4]],["bool",15]],[[["field",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],null,null,null,[[],["hirfileid",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[["param",4],["idx",3]],["attrowner",4]],[[["idx",3],["field",3]],["attrowner",4]],[[["variant",3],["idx",3]],["attrowner",4]],[[["moditem",4]],["attrowner",4]],[[]],[[]],[[["associtem",4]]],[[["enum",3],["fileitemtreeid",3]],["moditem",4]],[[]],[[["macrodef",3],["fileitemtreeid",3]],["moditem",4]],[[["externcrate",3],["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3],["externblock",3]],["moditem",4]],[[["fileitemtreeid",3],["macrorules",3]],["moditem",4]],[[["fileitemtreeid",3],["macrocall",3]],["moditem",4]],[[["fileitemtreeid",3],["function",3]],["moditem",4]],[[["fileitemtreeid",3],["struct",3]],["moditem",4]],[[["union",3],["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3],["mod",3]],["moditem",4]],[[["import",3],["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3],["typealias",3]],["moditem",4]],[[["fileitemtreeid",3],["const",3]],["moditem",4]],[[["static",3],["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3],["trait",3]],["moditem",4]],[[["impl",3],["fileitemtreeid",3]],["moditem",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["fileitemtreeid",3],["macrocall",3]],["associtem",4]],[[["fileitemtreeid",3],["const",3]],["associtem",4]],[[["fileitemtreeid",3],["typealias",3]],["associtem",4]],[[["fileitemtreeid",3],["function",3]],["associtem",4]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["moditem",4]],[["option",4],["fileitemtreeid",3]]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["idx",3],["macrorules",3]]],[[["variant",3],["idx",3]]],[[["idx",3],["macrodef",3]]],[[["idx",3],["macrocall",3]]],[[["idx",3],["import",3]]],[[["idx",3],["mod",3]]],[[["typealias",3],["idx",3]]],[[["impl",3],["idx",3]]],[[["idx",3],["trait",3]]],[[["fileitemtreeid",3]]],[[["static",3],["idx",3]]],[[["idx",3],["const",3]]],[[["idx",3],["field",3]]],[[["idx",3],["externcrate",3]]],[[["param",4],["idx",3]]],[[["rawvisibilityid",3]]],[[["enum",3],["idx",3]]],[[["idx",3],["union",3]]],[[["idx",3],["struct",3]]],[[["idx",3],["function",3]]],[[["externblock",3],["idx",3]]],null,[[["fileastid",3],["blockexpr",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[["defdatabase",8]],[["arc",3],["itemtree",3]]],null,null,null,[[["idx",3],["itemtree",3]]],[[["idx",3],["itemtree",3]]],[[["idx",3],["itemtree",3]]],[[["idx",3],["itemtree",3]]],[[["idx",3],["itemtree",3]]],[[["idx",3],["itemtree",3]]],[[["idx",3],["itemtree",3]]],[[["idx",3],["itemtree",3]]],[[["idx",3],["itemtree",3]]],[[["idx",3],["itemtree",3]]],[[["idx",3],["itemtree",3]]],[[["idx",3],["itemtree",3]]],[[["idx",3],["itemtree",3]]],[[["idx",3],["itemtree",3]]],[[["idx",3],["itemtree",3]]],[[["idx",3],["itemtree",3]]],[[["idx",3],["itemtree",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["rawvisibilityid",3]],["bool",15]],[[["itemtree",3]],["bool",15]],[[["attrowner",4]],["bool",15]],[[["treeid",3]],["bool",15]],[[["moditem",4]],["bool",15]],[[["import",3]],["bool",15]],[[["usetree",3]],["bool",15]],[[["usetreekind",4]],["bool",15]],[[["externcrate",3]],["bool",15]],[[["externblock",3]],["bool",15]],[[["function",3]],["bool",15]],[[["param",4]],["bool",15]],[[["struct",3]],["bool",15]],[[["union",3]],["bool",15]],[[["enum",3]],["bool",15]],[[["const",3]],["bool",15]],[[["static",3]],["bool",15]],[[["trait",3]],["bool",15]],[[["impl",3]],["bool",15]],[[["typealias",3]],["bool",15]],[[["mod",3]],["bool",15]],[[["modkind",4]],["bool",15]],[[["macrocall",3]],["bool",15]],[[["macrorules",3]],["bool",15]],[[["macrodef",3]],["bool",15]],[[["associtem",4]],["bool",15]],[[["variant",3]],["bool",15]],[[["fields",4]],["bool",15]],[[["field",3]],["bool",15]],[[["treeid",3],["fileitemtreeid",3]]],[[],["option",4]],[[],["option",4]],null,null,[[],["string",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["crateid",3],["defdatabase",8]],["attrs",3]],[[]],[[],["treeid",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,[[["usetree",3],["hirfileid",3],["defdatabase",8],["idx",3]],["usetree",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[["infile",3],["dynmap",3]],["option",4]],[[["dynmap",3],["infile",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[],[["option",4],["enumid",3]]],[[],[["option",4],["functionid",3]]],[[],[["implid",3],["option",4]]],[[],[["staticid",3],["option",4]]],[[],[["option",4],["structid",3]]],[[],[["option",4],["traitid",3]]],[[]],[[]],[[]],[[]],[[],["langitemtarget",4]],[[],["langitems",3]],[[]],[[]],[[],["langitems",3]],[[["langitemtarget",4]],["bool",15]],[[["langitems",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["defdatabase",8]],[["option",4],["smolstr",3]]],[[["langitemtarget",4]],["bool",15]],[[["langitems",3]],["bool",15]],[[["str",15]],[["option",4],["langitemtarget",4]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["moduleorigin",4]],[[],["modulesource",4]],[[]],[[]],[[["localmoduleid",6]],[["moduleid",3],["option",4]]],[[["defdatabase",8]],[["infile",3],["option",4]]],[[["defdatabase",8]],[["modulesource",4],["infile",3]]],null,[[]],[[["defdatabase",8]],["string",3]],[[["defdatabase",8]],["string",3]],[[["defmap",3]],["bool",15]],[[["moduleorigin",4]],["bool",15]],[[["moduledata",3]],["bool",15]],[[["modulesource",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["option",4],["fileid",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["localmoduleid",6]],["moduledata",3]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["localmoduleid",6]],["moduleid",3]],[[]],[[["fileid",3]]],[[["defmap",3]],["bool",15]],[[["moduleorigin",4]],["bool",15]],[[["moduledata",3]],["bool",15]],[[["modulesource",4]],["bool",15]],null,[[],[["moduleid",3],["option",4]]],null,[[],["localmoduleid",6]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["localmoduleid",6],["defdatabase",8],["fnmut",8]],["option",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["defdiagnostickind",4]],["bool",15]],[[["defdiagnostic",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[]],[[]],null,[[["defdiagnostickind",4]],["bool",15]],[[["defdiagnostic",3]],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["name",3],["option",4]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["modpath",3]],[[],["pathkind",4]],[[],["importalias",4]],[[],["path",3]],[[],["genericargs",3]],[[],["associatedtypebinding",3]],[[],["genericarg",4]],[[],["pathsegment",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["modpath",3]],["ordering",4]],[[["pathkind",4]],["ordering",4]],[[["modpath",3]],["bool",15]],[[["pathkind",4]],["bool",15]],[[["importalias",4]],["bool",15]],[[["path",3]],["bool",15]],[[["genericargs",3]],["bool",15]],[[["associatedtypebinding",3]],["bool",15]],[[["genericarg",4]],["bool",15]],[[["pathsegment",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["pathsegment",3],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["name",3]],["modpath",3]],[[]],[[]],[[]],[[["name",3]],["path",3]],[[]],[[]],[[]],[[]],[[]],[[["pathkind",4]],["modpath",3]],[[["modpath",3],["vec",3],["option",4]],["path",3]],[[["pathkind",4]],["modpath",3]],[[["hygiene",3],["defdatabase",8],["path",3]],[["modpath",3],["option",4]]],[[["lowerctx",3],["path",3]],[["path",3],["option",4]]],[[["usize",15]],[["pathsegment",3],["option",4]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[],["pathkind",4]],null,[[],[["pathsegment",3],["option",4]]],[[],["usize",15]],[[],["usize",15]],[[],["modpath",3]],null,null,[[["modpath",3]],["bool",15]],[[["pathkind",4]],["bool",15]],[[["importalias",4]],["bool",15]],[[["path",3]],["bool",15]],[[["genericargs",3]],["bool",15]],[[["associatedtypebinding",3]],["bool",15]],[[["genericarg",4]],["bool",15]],[[["pathsegment",3]],["bool",15]],[[["modpath",3]],[["option",4],["ordering",4]]],[[["pathkind",4]],[["option",4],["ordering",4]]],[[],[["name",3],["option",4]]],[[["name",3]]],[[],[["path",3],["option",4]]],[[]],[[],["pathsegments",3]],[[["usize",15]],["pathsegments",3]],[[],["internstorage",3]],[[],["internstorage",3]],[[["usize",15]],["pathsegments",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["option",4],["typeref",4]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[],["name",3]],[[],[["usize",15],["option",4]]],[[]],[[]],[[],["name",3]],[[]],[[["name",3]],["ordering",4]],[[["name",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],null,[[],["name",3]],null,[[["name",3]],["bool",15]],[[["lifetime",3]],["name",3]],[[["usize",15]],["name",3]],[[["name",3]],[["option",4],["ordering",4]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["visibility",4],["moduledefid",4]],["perns",3]],[[],["perns",3]],[[]],[[]],[[["perns",3]],["bool",15]],[[],["bool",15]],[[],["perns",3]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[["visibility",4],["macrodefid",3]],["perns",3]],null,[[["perns",3]],["bool",15]],[[],["perns",3]],[[["perns",3]],["perns",3]],[[],[["macrodefid",3],["option",4]]],[[],[["option",4],["moduledefid",4]]],[[],["option",4]],[[],[["option",4],["moduledefid",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["visibility",4],["moduledefid",4]],["perns",3]],null,[[["visibility",4],["moduledefid",4]],["perns",3]],null,[[["visibility",4]],["perns",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["defwithbodyid",4],["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["resolver",3]],[[],["typens",4]],[[],["resolvevalueresult",4]],[[],["valuens",4]],[[]],[[]],[[]],[[]],[[],["resolver",3]],[[["typens",4]],["bool",15]],[[["resolvevalueresult",4]],["bool",15]],[[["valuens",4]],["bool",15]],[[["scopedef",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4],["genericdefid",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["crateid",3],["option",4]]],[[],[["moduleid",3],["option",4]]],[[["defdatabase",8]],[["indexmap",3],["smallvec",3],["name",3]]],[[["typens",4]],["bool",15]],[[["resolvevalueresult",4]],["bool",15]],[[["valuens",4]],["bool",15]],[[["scopedef",4]],["bool",15]],[[["modpath",3],["defdatabase",8]],[["option",4],["enumid",3]]],[[["modpath",3],["defdatabase",8]],[["option",4],["structid",3]]],[[["modpath",3],["defdatabase",8]],[["option",4],["traitid",3]]],[[["modpath",3],["defdatabase",8]],["perns",3]],[[["modpath",3],["defdatabase",8]],[["perns",3],["option",4]]],[[["modpath",3],["defdatabase",8]],[["macrodefid",3],["option",4]]],[[["modpath",3],["defdatabase",8]],["option",4]],[[["modpath",3],["defdatabase",8]],[["typens",4],["option",4]]],[[["modpath",3],["defdatabase",8]],[["resolvevalueresult",4],["option",4]]],[[["modpath",3],["defdatabase",8]],[["option",4],["valuens",4]]],[[["defdatabase",8],["rawvisibility",4]],[["visibility",4],["option",4]]],[[["defdatabase",8]],["resolver",3]],[[["exprid",6],["defdatabase",8],["defwithbodyid",4]],["resolver",3]],[[["scopeid",6],["option",4],["defdatabase",8],["defwithbodyid",4]],["resolver",3]],[[]],[[]],[[]],[[]],[[["defdatabase",8]],[["fxhashset",6],["traitid",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,null,null,null,[[["defdatabase",8]],[["infile",3],["arenamap",3]]],[[["defdatabase",8]],["infile",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],[[],["str",15]],[[],[["path",3],["option",4]]],[[],[["option",4],["u64",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mutability",4]],[[],["rawness",4]],[[],["traitref",3]],[[],["typeref",4]],[[],["lifetimeref",3]],[[],["typebound",4]],[[],["constscalar",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["mutability",4]],["bool",15]],[[["rawness",4]],["bool",15]],[[["traitref",3]],["bool",15]],[[["typeref",4]],["bool",15]],[[["lifetimeref",3]],["bool",15]],[[["typebound",4]],["bool",15]],[[["constscalar",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["lowerctx",3],["type",4]]],[[["bool",15]],["mutability",4]],[[["bool",15]],["rawness",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["lifetimeref",3]],null,[[["traitref",3]],["bool",15]],[[["typeref",4]],["bool",15]],[[["lifetimeref",3]],["bool",15]],[[["typebound",4]],["bool",15]],[[["constscalar",4]],["bool",15]],null,[[],["internstorage",3]],[[],["internstorage",3]],[[],["internstorage",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["rawvisibility",4]],[[],["visibility",4]],[[]],[[]],[[["rawvisibility",4]],["bool",15]],[[["visibility",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["moduleid",3],["defdatabase",8]],["bool",15]],[[["rawvisibility",4]],["bool",15]],[[["visibility",4]],["bool",15]],[[["resolver",3],["defdatabase",8]],["visibility",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"ModuleDefId"],[4,"GenericDefId"],[4,"AttrDefId"],[4,"DefWithBodyId"],[4,"AssocItemId"],[4,"GenericParamId"],[8,"Lookup"],[4,"AdtId"],[4,"VariantId"],[4,"AssocContainerId"],[8,"AsMacroCall"],[3,"FunctionId"],[3,"StructId"],[3,"UnionId"],[3,"EnumId"],[3,"ConstId"],[3,"StaticId"],[3,"TraitId"],[3,"TypeAliasId"],[3,"ImplId"],[3,"BlockId"],[3,"ModuleId"],[3,"ItemLoc"],[3,"AssocItemLoc"],[3,"EnumVariantId"],[3,"FieldId"],[3,"BlockLoc"],[3,"TypeParamId"],[3,"LifetimeParamId"],[3,"ConstParamId"],[3,"UnresolvedMacro"],[8,"HasModule"],[6,"StaticLoc"],[4,"ReprKind"],[4,"VariantData"],[4,"StructKind"],[3,"StructData"],[3,"EnumData"],[3,"EnumVariantData"],[3,"FieldData"],[3,"Attrs"],[4,"AttrInput"],[3,"Documentation"],[3,"AttrQuery"],[3,"AttrSourceMap"],[3,"DocsRangeMap"],[3,"AttrsWithOwner"],[3,"Attr"],[4,"BodyDiagnostic"],[3,"Body"],[3,"LowerCtx"],[3,"Expander"],[3,"Mark"],[3,"BodySourceMap"],[3,"SyntheticSyntax"],[13,"InactiveCode"],[13,"MacroError"],[13,"UnresolvedProcMacro"],[13,"UnresolvedMacroCall"],[3,"ExprScopes"],[3,"ScopeEntry"],[3,"ScopeData"],[4,"BuiltinType"],[4,"BuiltinFloat"],[4,"BuiltinInt"],[4,"BuiltinUint"],[8,"ChildBySource"],[3,"FunctionData"],[3,"TraitData"],[3,"TypeAliasData"],[3,"ImplData"],[3,"ConstData"],[3,"StaticData"],[8,"DefDatabase"],[3,"DefDatabaseGroupStorage__"],[3,"InternDatabaseStorage"],[3,"InternDatabaseGroupStorage__"],[3,"InternFunctionQuery"],[3,"InternFunctionLookupQuery"],[3,"InternStructQuery"],[3,"InternStructLookupQuery"],[3,"InternUnionQuery"],[3,"InternUnionLookupQuery"],[3,"InternEnumQuery"],[3,"InternEnumLookupQuery"],[3,"InternConstQuery"],[3,"InternConstLookupQuery"],[3,"InternStaticQuery"],[3,"InternStaticLookupQuery"],[3,"InternTraitQuery"],[3,"InternTraitLookupQuery"],[3,"InternTypeAliasQuery"],[3,"InternTypeAliasLookupQuery"],[3,"InternImplQuery"],[3,"InternImplLookupQuery"],[3,"InternBlockQuery"],[3,"InternBlockLookupQuery"],[3,"DefDatabaseStorage"],[3,"EnableProcAttrMacrosQuery"],[3,"FileItemTreeQuery"],[3,"CrateDefMapQueryQuery"],[3,"BlockDefMapQuery"],[3,"StructDataQuery"],[3,"UnionDataQuery"],[3,"EnumDataQuery"],[3,"ImplDataQuery"],[3,"TraitDataQuery"],[3,"TypeAliasDataQuery"],[3,"FunctionDataQuery"],[3,"ConstDataQuery"],[3,"StaticDataQuery"],[3,"BodyWithSourceMapQuery"],[3,"BodyQuery"],[3,"ExprScopesQuery"],[3,"GenericParamsQuery"],[3,"VariantsAttrsQuery"],[3,"FieldsAttrsQuery"],[3,"VariantsAttrsSourceMapQuery"],[3,"FieldsAttrsSourceMapQuery"],[3,"AttrsQuery"],[3,"CrateLangItemsQuery"],[3,"LangItemQuery"],[3,"ImportMapQuery"],[3,"FieldVisibilitiesQuery"],[3,"FunctionVisibilityQuery"],[8,"InternDatabase"],[8,"Policy"],[3,"Key"],[3,"DynMap"],[3,"KeyMap"],[4,"ArithOp"],[4,"LogicOp"],[4,"BinaryOp"],[4,"Expr"],[4,"Pat"],[4,"Literal"],[4,"UnaryOp"],[4,"Array"],[4,"CmpOp"],[4,"Statement"],[4,"Ordering"],[4,"BindingAnnotation"],[3,"Label"],[3,"MatchArm"],[3,"RecordLitField"],[3,"RecordFieldPat"],[13,"Repeat"],[13,"Assignment"],[13,"Eq"],[13,"Ord"],[13,"Lambda"],[13,"Call"],[13,"MethodCall"],[13,"Match"],[13,"Index"],[13,"Loop"],[13,"While"],[13,"For"],[13,"TryBlock"],[13,"Async"],[13,"Const"],[13,"Unsafe"],[13,"If"],[13,"Break"],[13,"Return"],[13,"Yield"],[13,"Field"],[13,"Await"],[13,"Try"],[13,"Cast"],[13,"Ref"],[13,"Box"],[13,"UnaryOp"],[13,"Tuple"],[13,"RecordLit"],[13,"Block"],[13,"Continue"],[13,"BinaryOp"],[13,"Range"],[13,"MacroStmts"],[13,"Tuple"],[13,"Record"],[13,"TupleStruct"],[13,"Range"],[13,"Box"],[13,"Bind"],[13,"Ref"],[13,"Slice"],[13,"Expr"],[13,"Let"],[4,"PrefixKind"],[4,"TypeParamProvenance"],[4,"WherePredicate"],[4,"WherePredicateTypeTarget"],[3,"TypeParamData"],[3,"LifetimeParamData"],[3,"ConstParamData"],[3,"GenericParams"],[13,"TypeBound"],[13,"Lifetime"],[13,"ForLifetime"],[4,"ImportKind"],[4,"SearchMode"],[3,"Query"],[3,"ImportInfo"],[3,"ImportPath"],[3,"ImportMap"],[3,"Interned"],[3,"InternStorage"],[8,"Internable"],[4,"ItemInNs"],[3,"PerNsGlobImports"],[3,"ItemScope"],[4,"ModItem"],[4,"AssocItem"],[4,"AttrOwner"],[4,"UseTreeKind"],[4,"ImportKind"],[4,"ModKind"],[4,"Param"],[3,"RawVisibilityId"],[4,"Fields"],[8,"ItemTreeNode"],[3,"ExternBlock"],[3,"Function"],[3,"ExternCrate"],[3,"Import"],[3,"Struct"],[3,"Union"],[3,"Enum"],[3,"Const"],[3,"Static"],[3,"Trait"],[3,"Impl"],[3,"TypeAlias"],[3,"Mod"],[3,"MacroCall"],[3,"MacroRules"],[3,"MacroDef"],[3,"ItemTree"],[3,"FileItemTreeId"],[3,"IdRange"],[3,"TreeId"],[3,"ItemTreeId"],[3,"UseTree"],[3,"Variant"],[3,"Field"],[13,"Inline"],[13,"Single"],[13,"Prefixed"],[13,"Glob"],[3,"AstPtrPolicy"],[4,"LangItemTarget"],[3,"LangItems"],[4,"ModuleOrigin"],[4,"ModuleSource"],[3,"DefMap"],[3,"ModuleData"],[13,"BlockExpr"],[13,"File"],[13,"CrateRoot"],[13,"Inline"],[4,"DefDiagnosticKind"],[3,"DefDiagnostic"],[13,"UnresolvedModule"],[13,"UnresolvedExternCrate"],[13,"UnconfiguredCode"],[13,"UnresolvedProcMacro"],[13,"UnresolvedMacroCall"],[13,"MacroError"],[13,"UnimplementedBuiltinMacro"],[13,"UnresolvedImport"],[4,"PathKind"],[4,"ImportAlias"],[3,"PathSegments"],[4,"GenericArg"],[3,"GenericArgs"],[3,"PathSegment"],[3,"ModPath"],[3,"Path"],[3,"AssociatedTypeBinding"],[8,"AsName"],[3,"Name"],[3,"PerNs"],[4,"TypeNs"],[4,"ScopeDef"],[4,"ValueNs"],[4,"ResolveValueResult"],[3,"Resolver"],[8,"HasResolver"],[8,"HasSource"],[8,"HasChildSource"],[4,"TypeRef"],[4,"TypeBound"],[4,"Mutability"],[4,"Rawness"],[4,"ConstScalar"],[3,"TraitRef"],[3,"LifetimeRef"],[4,"RawVisibility"],[4,"Visibility"]]},\
"hir_expand":{"doc":"<code>hir_expand</code> deals with macro expansion.","tn":["AstId","Attr","Attr","BindingError","Block","BuiltIn","BuiltInAttr","BuiltInDerive","BuiltInEager","Call","ConversionError","Declarative","Def","Derive","ExpandError","ExpandResult","ExpansionInfo","Expr","FnLike","FragmentKind","HirFileId","InFile","Item","Items","MacroCallId","MacroCallKind","MacroCallLoc","MacroDefId","MacroDefKind","MacroFile","MetaItem","NoMatchingRule","Origin","Other","Path","Pattern","ProcMacro","ProcMacroError","Statement","StatementOptionalSemi","Statements","Type","UnexpectedToken","UnresolvedProcMacro","Visibility","ancestors_with_macros","ancestors_with_macros","as_file","as_intern_id","as_lazy_macro","as_ref","ast_id","ast_id_map","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builtin_attr","builtin_derive","builtin_macro","call_node","call_node","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloned","db","def","descendants","eager","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","err","expansion_info","expansion_level","file_id","file_syntax","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_intern_id","hash","hash","hash","hash","hash","hash","hash","hash","hash","hygiene","into","into","into","into","into","into","into","into","into","into","into","into","into","is_builtin_derive","is_include_macro","is_macro","is_proc_macro","kind","kind","krate","local_inner","map","map","map_token_down","map_token_up","name","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","ok","only_err","original_file","original_file_range","proc_macro","quote","quote","result","str_err","syntax","to_fragment_kind","to_node","to_node","to_node","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transpose","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","with_value","ast_id","ast_id","ast_id","attr_args","attr_name","derive_attr_index","derive_name","fragment","invoc_attr_index","AstIdMap","FileAstId","ast_id","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","eq","eq","equivalent","equivalent","fmt","fmt","from","from","get","hash","into","into","ne","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","Bench","BuiltinAttrExpander","CfgAccessible","CfgEval","Derive","GlobalAllocator","Test","TestCase","borrow","borrow_mut","clone","clone_into","eq","equivalent","expand","find_builtin_attr","fmt","from","hash","into","to_owned","try_from","try_into","type_id","BuiltinDeriveExpander","Clone","Copy","Debug","Default","Eq","Hash","Ord","PartialEq","PartialOrd","borrow","borrow_mut","clone","clone_into","eq","equivalent","expand","find_builtin_derive","fmt","from","hash","into","to_owned","try_from","try_into","type_id","Asm","Assert","BuiltinFnLikeExpander","Cfg","Column","CompileError","Concat","ConcatIdents","CorePanic","EagerExpander","Env","ExpandedEager","File","FormatArgs","FormatArgsNl","GlobalAsm","Include","IncludeBytes","IncludeStr","Line","LlvmAsm","ModulePath","OptionEnv","StdPanic","Stringify","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","equivalent","equivalent","expand","expand","find_builtin_macro","fmt","fmt","fmt","from","from","from","hash","hash","into","into","into","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","AstDatabase","AstDatabaseGroupStorage__","AstDatabaseStorage","AstIdMapQuery","Builtin","BuiltinAttr","BuiltinDerive","ExpandProcMacroQuery","HygieneFrameQuery","InternMacroLookupQuery","InternMacroQuery","MacroArgTextQuery","MacroDef","MacroDefQuery","MacroExpandErrorQuery","MacroExpandQuery","MacroRules","ParseMacroExpansionQuery","ProcMacro","TokenExpander","ast_id_map","ast_id_map","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","default","default","default","default","default","default","default","default","default","eq","equivalent","execute","execute","execute","execute","execute","execute","execute","execute","expand_proc_macro","expand_proc_macro","expand_speculative","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_index","for_each_query","from","from","from","from","from","from","from","from","from","from","from","from","from","hygiene_frame","hygiene_frame","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","intern_macro","intern_macro","into","into","into","into","into","into","into","into","into","into","into","into","into","lookup_intern_macro","lookup_intern_macro","macro_arg","macro_arg_text","macro_arg_text","macro_def","macro_def","macro_expand","macro_expand","macro_expand_error","macro_expand_error","maybe_changed_since","ne","new","parse_macro_expansion","parse_macro_expansion","parse_or_expand","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","def_site_token_map","def_site_token_map","mac","mac","ErrorEmitted","ErrorSink","borrow","borrow_mut","emit","expand_eager_macro","expand_result_option","fmt","from","into","option","option_with","result","try_from","try_into","type_id","Hygiene","HygieneFrame","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","equivalent","fmt","fmt","from","from","into","into","local_inner_macros","name_ref_to_name","ne","new","new_unhygienic","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","AsName","Name","as_name","as_tuple_index","borrow","borrow_mut","clone","clone_into","cmp","eq","equivalent","fmt","fmt","from","hash","into","known","missing","ne","new_lifetime","new_tuple_field","partial_cmp","to_owned","to_string","try_from","try_into","type_id","Box","Clone","Copy","Debug","Default","Eq","Future","Hash","Index","IntoIterator","Item","Iterator","Neg","Not","Ok","Option","Ord","Output","PartialEq","PartialOrd","Range","RangeFrom","RangeFull","RangeInclusive","RangeTo","RangeToInclusive","Result","SELF_PARAM","SELF_TYPE","STATIC_LIFETIME","Target","Try","abort","add_with_overflow","alloc","asm","assert","bench","bitreverse","bool","boxed","bswap","caller_location","cfg","cfg_accessible","cfg_attr","cfg_eval","char","column","compile_error","concat","concat_idents","core","core_panic","ctlz","ctpop","cttz","derive","discriminant_value","doc","env","f32","f64","file","filter_map","forget","format_args","format_args_nl","future","global_allocator","global_asm","i128","i16","i32","i64","i8","include","include_bytes","include_str","is_empty","isize","iter","iter_mut","len","likely","line","llvm_asm","macro_rules","maxnumf32","maxnumf64","min_align_of","min_align_of_val","minnumf32","minnumf64","module_path","mul_with_overflow","needs_drop","next","ops","option","option_env","prelude","ptr_guaranteed_eq","ptr_guaranteed_ne","register_attr","register_tool","result","rotate_left","rotate_right","rust_2015","rust_2018","rust_2021","rustc_peek","saturating_add","saturating_sub","size_of","size_of_val","std","std_panic","str","stringify","sub_with_overflow","test","test_case","type_id","type_name","u128","u16","u32","u64","u8","unlikely","usize","v1","variant_count","wrapping_add","wrapping_mul","wrapping_sub","ProcMacroExpander","borrow","borrow_mut","clone","clone_into","dummy","eq","equivalent","expand","fmt","from","hash","into","is_dummy","ne","new","to_owned","try_from","try_into","type_id"],"q":["hir_expandhir_expand::MacroCallKind","","","","","","","","","hir_expand::ast_id_map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_expand::builtin_attr","","","","","","","","","","","","","","","","","","","","","","","","hir_expand::builtin_derive","","","","","","","","","","","","","","","","","","","","","","","","","","hir_expand::builtin_macro","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_expand::dbhir_expand::db::TokenExpander","","","","hir_expand::eager","","","","","","","","","","","","","","","","hir_expand::hygiene","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_expand::name","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_expand::name::known","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_expand::proc_macro","","","","","","","","","","","","","","","","","","",""],"d":["<code>AstId</code> points to an AST node in any file.","","","","","","","","","","","","","","","","ExpansionInfo mainly describes how to map text range …","","","","Input to the analyzer is a set of files, where each file …","<code>InFile<T></code> stores a value of <code>T</code> inside a particular …","","","<code>MacroCallId</code> identifies a particular macro invocation, like…","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>AstIdMap</code> allows to create stable IDs for “large” …","","","","","","","","","","","","","","","","","","","","","","","","","","","Builtin attributes.","Builtin derives.","Builtin macro","If this is a macro call, returns the syntax node of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","Defines database & queries for macro expansion.","","","Eager expansion related utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return expansion information if it is a macro-expansion …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This modules handles hygiene information.","","","","","","","","","","","","","","Indicate it is macro file generated for builtin derive","Return whether this file is an include macro","","","","","","","","","","","See [<code>Name</code>].","","","","","","","","","","","","","","","","For macro-expansion files, returns the file original …","","Proc Macro Expander stub","A simplified version of quote-crate like quasi quote macro","FIXME: It probably should implement in proc-macro","","","","Given a <code>MacroCallId</code>, return what <code>FragmentKind</code> it belongs …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Syntactical index of the invoking <code>#[derive]</code> attribute.","","","Syntactical index of the invoking <code>#[attribute]</code>.","Maps items’ <code>SyntaxNode</code>s to <code>ErasedFileAstId</code>s and back.","<code>AstId</code> points to an AST node in a specific file.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Representative struct for the query group.","","Stuff like <code>line!</code> and <code>file!</code>.","<code>global_allocator</code> and such.","<code>derive(Copy)</code> and such.","","","","","","AKA macros 2.0.","","","","Old-style <code>macro_rules</code>.","","The thing we love the most here in rust-analyzer – …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Special case of the previous query for procedural macros. …","","This expands the given macro call, but with different …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Macro ids. That’s probably the tricksiest bit in …","","","","","","","","","","","","","","","","","Lowers syntactic macro call to a token tree …","Extracts syntax node, corresponding to a macro call. That…","","Gets the expander for this macro. This compiles …","","Expand macro call to a token tree. This query is LRUed …","","Firewall query that returns the error from the …","","","","","Implementation for the macro case.","","Main public API – parses a hir file, not caring whether …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>Name</code> is a wrapper around string, which is used in hir for …","","","","","","","","","","","","","","","","A fake name for things missing in the source codei":[0,1,2,3,2,4,4,4,4,5,3,4,5,1,0,0,0,2,1,0,0,0,2,2,0,0,0,0,0,0,2,3,0,3,2,2,4,3,2,2,2,2,3,3,2,6,6,7,7,8,6,8,0,9,10,7,8,4,11,1,12,6,2,3,5,13,9,10,7,8,4,11,1,12,6,2,3,5,13,0,0,0,9,12,9,10,7,8,4,11,1,12,6,2,3,13,9,10,7,8,4,11,1,12,6,2,3,13,6,0,11,6,0,9,10,7,8,4,11,1,12,6,2,3,5,13,9,10,7,8,4,11,1,12,6,2,3,5,13,13,9,9,6,6,9,10,7,8,4,11,1,12,6,2,3,3,5,13,9,9,9,10,7,8,4,11,1,12,6,2,3,3,5,13,13,7,9,10,7,8,4,11,1,6,2,0,9,10,7,8,4,11,1,12,6,2,3,5,13,9,9,9,8,8,11,8,8,6,13,12,12,0,0,9,10,7,8,4,11,1,12,6,3,13,6,13,13,9,6,0,0,0,13,13,6,0,14,1,6,9,10,7,8,4,11,1,12,6,2,3,13,3,6,9,10,7,8,4,11,1,12,6,2,3,5,13,9,10,7,8,4,11,1,12,6,2,3,5,13,9,10,7,8,4,11,1,12,6,2,3,5,13,6,13,6,15,16,17,17,17,16,16,15,17,0,0,18,19,18,19,18,19,19,18,19,18,19,18,19,18,19,18,18,19,19,18,18,19,19,18,19,18,19,18,19,20,0,20,20,20,20,20,20,20,20,20,20,20,20,20,0,20,20,20,20,20,20,20,20,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,21,21,21,21,21,21,21,21,22,22,0,22,22,23,23,23,22,0,23,0,22,22,22,22,23,23,23,22,22,22,23,22,22,24,22,23,24,22,23,22,23,22,23,22,23,22,23,22,23,0,24,22,23,24,22,23,22,23,24,22,23,22,23,24,22,23,24,22,23,24,22,23,0,0,0,0,25,25,25,0,0,0,0,0,25,0,0,0,25,0,25,0,26,27,25,28,27,29,30,31,32,33,34,35,36,37,38,25,28,27,29,30,31,32,33,34,35,36,37,38,25,25,29,30,31,32,33,34,35,36,37,38,25,25,29,30,33,34,35,36,37,38,26,27,0,25,29,30,31,32,33,34,35,36,37,38,27,27,25,28,27,29,30,31,32,33,34,35,36,37,38,26,27,29,30,31,32,33,34,35,36,37,38,29,30,31,32,33,34,35,36,37,38,26,27,25,28,27,29,30,31,32,33,34,35,36,37,38,26,27,26,26,27,26,27,26,27,26,27,27,25,27,26,27,26,29,30,31,32,33,34,35,36,37,38,25,25,28,27,29,30,31,32,33,34,35,36,37,38,25,28,27,29,30,31,32,33,34,35,36,37,38,25,28,27,29,30,31,32,33,34,35,36,37,38,39,40,39,40,0,0,41,41,42,0,42,41,41,41,42,42,42,41,41,41,0,0,43,44,43,44,43,44,43,44,44,44,43,44,43,44,43,44,43,43,44,43,43,43,44,43,44,43,44,43,44,0,0,45,46,46,46,46,46,46,46,46,46,46,46,46,46,0,46,46,46,46,46,46,46,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["astdatabase",8]]],[[["astdatabase",8]]],[[],["hirfileid",3]],[[],["internid",3]],[[["astdatabase",8],["macrocallkind",4],["crateid",3]],["macrocallid",3]],[[],["infile",3]],[[],[["astid",6],["astid",6],["either",4]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["astdatabase",8]],[["infile",3],["option",4]]],[[],[["infile",3],["option",4]]],[[],["hirfileid",3]],[[],["macrofile",3]],[[],["macrocallid",3]],[[],["macrodefid",3]],[[],["macrodefkind",4]],[[],["macrocallloc",3]],[[],["macrocallkind",4]],[[],["expansioninfo",3]],[[],["infile",3]],[[],["fragmentkind",4]],[[],["expanderror",4]],[[],["expandresult",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["infile",3]],null,null,[[]],null,[[["hirfileid",3]],["bool",15]],[[["macrofile",3]],["bool",15]],[[["macrocallid",3]],["bool",15]],[[["macrodefid",3]],["bool",15]],[[["macrodefkind",4]],["bool",15]],[[["macrocallloc",3]],["bool",15]],[[["macrocallkind",4]],["bool",15]],[[["expansioninfo",3]],["bool",15]],[[["infile",3]],["bool",15]],[[["fragmentkind",4]],["bool",15]],[[["expanderror",4]],["bool",15]],[[["origin",4]],["bool",15]],[[["expandresult",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[["astdatabase",8]],[["expansioninfo",3],["option",4]]],[[["astdatabase",8]],["u32",15]],null,[[["astdatabase",8]],["syntaxnode",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["macrofile",3]]],[[]],[[["fileid",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["expansionerror",4]],["expanderror",4]],[[]],[[]],[[["result",4],["expanderror",4]],["expandresult",3]],[[["internid",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["astdatabase",8]],[["infile",3],["option",4]]],[[["astdatabase",8]],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,[[["fnonce",8]],["infile",3]],[[],["expandresult",3]],[[["syntaxtoken",6],["infile",3]],[["option",4],["infile",3]]],[[["syntaxtoken",6],["infile",3]],["option",4]],null,null,[[["hirfileid",3]],["bool",15]],[[["macrofile",3]],["bool",15]],[[["macrocallid",3]],["bool",15]],[[["macrodefid",3]],["bool",15]],[[["macrodefkind",4]],["bool",15]],[[["macrocallloc",3]],["bool",15]],[[["macrocallkind",4]],["bool",15]],[[["expansioninfo",3]],["bool",15]],[[["infile",3]],["bool",15]],[[["expanderror",4]],["bool",15]],[[["expandresult",3]],["bool",15]],[[["hirfileid",3]],["infile",3]],[[],["expandresult",3]],[[["expanderror",4]],["expandresult",3]],[[["astdatabase",8]],["fileid",3]],[[["astdatabase",8]],["filerange",3]],null,null,null,[[],[["result",4],["expanderror",4]]],[[["string",3]],["expandresult",3]],[[],[["infile",3],["syntaxnode",6]]],[[["macrocall",3]],["fragmentkind",4]],[[["astdatabase",8]]],[[["astdatabase",8]],[["infile",3],["syntaxnode",6]]],[[["astdatabase",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],[["infile",3],["option",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[],["infile",3]],null,null,null,null,null,null,null,null,null,null,null,[[],[["astnode",8],["fileastid",3]]],[[]],[[]],[[]],[[]],[[],["fileastid",3]],[[]],[[],["astidmap",3]],[[],["bool",15]],[[["astidmap",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["astnode",8],["fileastid",3]],[["astptr",3],["astnode",8]]],[[]],[[]],[[]],[[["astidmap",3]],["bool",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],[["fileastid",3],["astnode",8]]],null,null,null,null,null,null,null,null,[[]],[[]],[[],["builtinattrexpander",4]],[[]],[[["builtinattrexpander",4]],["bool",15]],[[],["bool",15]],[[["subtree",3],["astdatabase",8],["macrocallid",3]],[["subtree",3],["expanderror",4],["result",4]]],[[["name",3],["astid",6],["crateid",3],["macro",4]],[["option",4],["macrodefid",3]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["builtinderiveexpander",4]],[[]],[[["builtinderiveexpander",4]],["bool",15]],[[],["bool",15]],[[["subtree",3],["astdatabase",8],["macrocallid",3]],[["subtree",3],["expanderror",4],["result",4]]],[[["name",3],["astid",6],["crateid",3],["macro",4]],[["option",4],["macrodefid",3]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["builtinfnlikeexpander",4]],[[],["eagerexpander",4]],[[]],[[]],[[["builtinfnlikeexpander",4]],["bool",15]],[[["eagerexpander",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["subtree",3],["astdatabase",8],["macrocallid",3]],[["subtree",3],["expandresult",3]]],[[["subtree",3],["astdatabase",8],["macrocallid",3]],[["option",4],["expandresult",3]]],[[["name",3],["astid",6],["crateid",3],["macro",4]],[["option",4],["macrodefid",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["hirfileid",3]],[["arc",3],["astidmap",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["tokenexpander",4]],[[]],[[],["astidmapquery",3]],[[],["parsemacroexpansionquery",3]],[[],["internmacroquery",3]],[[],["internmacrolookupquery",3]],[[],["macroargtextquery",3]],[[],["macrodefquery",3]],[[],["macroexpandquery",3]],[[],["expandprocmacroquery",3]],[[],["macroexpanderrorquery",3]],[[],["hygieneframequery",3]],[[["tokenexpander",4]],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["macrocallid",3]],[["subtree",3],["expanderror",4],["result",4]]],null,[[["tokentree",3],["astdatabase",8],["macrocallid",3],["syntaxtoken",6]],["option",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3],["astdatabase",8],["databasekeyindex",3]],["result",6]],[[["fnmut",8],["runtime",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["hirfileid",3]],[["arc",3],["hygieneframe",3]]],null,[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytablemut",3]],[[["astdatabase",8]],["querytablemut",3]],[[["astdatabase",8]],["querytablemut",3]],[[["astdatabase",8]],["querytablemut",3]],[[["astdatabase",8]],["querytablemut",3]],[[["astdatabase",8]],["querytablemut",3]],[[["astdatabase",8]],["querytablemut",3]],[[["astdatabase",8]],["querytablemut",3]],[[["astdatabase",8]],["querytablemut",3]],[[["astdatabase",8]],["querytablemut",3]],[[["macrocallloc",3]],["macrocallid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["macrocallid",3]],["macrocallloc",3]],null,[[["macrocallid",3]],[["arc",3],["option",4]]],[[["macrocallid",3]],[["option",4],["greennode",3]]],null,[[["macrodefid",3]],[["option",4],["arc",3]]],null,[[["macrocallid",3]],[["expandresult",3],["option",4]]],null,[[["macrocallid",3]],[["option",4],["expanderror",4]]],null,[[["revision",3],["astdatabase",8],["databasekeyindex",3]],["bool",15]],[[["tokenexpander",4]],["bool",15]],[[["u16",15]]],[[["macrofile",3]],[["expandresult",3],["option",4]]],null,[[["hirfileid",3]],[["syntaxnode",6],["option",4]]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,[[]],[[]],[[["expanderror",4]]],[[["infile",3],["astdatabase",8],["crateid",3],["macrocall",3],["fn",8],["macrodefid",3],["fnmut",8]],[["result",4],["macrocallid",3],["erroremitted",3]]],[[["expandresult",3],["option",4]],[["result",4],["erroremitted",3]]],[[["formatter",3]],["result",6]],[[]],[[]],[[["option",4]],[["result",4],["erroremitted",3]]],[[],[["result",4],["erroremitted",3]]],[[["result",4],["expanderror",4]],[["result",4],["erroremitted",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[],["hygiene",3]],[[],["hygieneframe",3]],[[]],[[]],[[["hygieneframe",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["astdatabase",8],["path",3]],[["option",4],["crateid",3]]],[[["astdatabase",8],["nameref",3]],[["crateid",3],["name",3],["either",4]]],[[["hygieneframe",3]],["bool",15]],[[["hirfileid",3],["astdatabase",8]],["hygiene",3]],[[],["hygiene",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[],["name",3]],[[],[["usize",15],["option",4]]],[[]],[[]],[[],["name",3]],[[]],[[["name",3]],["ordering",4]],[[["name",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,[[],["name",3]],[[["name",3]],["bool",15]],[[["lifetime",3]],["name",3]],[[["usize",15]],["name",3]],[[["name",3]],[["option",4],["ordering",4]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["procmacroexpander",3]],[[]],[[["crateid",3]]],[[["procmacroexpander",3]],["bool",15]],[[],["bool",15]],[[["astdatabase",8],["crateid",3],["subtree",3],["option",4]],[["subtree",3],["expanderror",4],["result",4]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["bool",15]],[[["procmacroexpander",3]],["bool",15]],[[["procmacroid",3],["crateid",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[4,"MacroCallKind"],[4,"FragmentKind"],[4,"ExpandError"],[4,"MacroDefKind"],[4,"Origin"],[3,"InFile"],[3,"MacroCallId"],[3,"MacroDefId"],[3,"HirFileId"],[3,"MacroFile"],[3,"MacroCallLoc"],[3,"ExpansionInfo"],[3,"ExpandResult"],[6,"AstId"],[13,"FnLike"],[13,"Derive"],[13,"Attr"],[3,"AstIdMap"],[3,"FileAstId"],[4,"BuiltinAttrExpander"],[4,"BuiltinDeriveExpander"],[4,"BuiltinFnLikeExpander"],[4,"EagerExpander"],[3,"ExpandedEager"],[4,"TokenExpander"],[8,"AstDatabase"],[3,"AstDatabaseGroupStorage__"],[3,"AstDatabaseStorage"],[3,"AstIdMapQuery"],[3,"ParseMacroExpansionQuery"],[3,"InternMacroQuery"],[3,"InternMacroLookupQuery"],[3,"MacroArgTextQuery"],[3,"MacroDefQuery"],[3,"MacroExpandQuery"],[3,"ExpandProcMacroQuery"],[3,"MacroExpandErrorQuery"],[3,"HygieneFrameQuery"],[13,"MacroRules"],[13,"MacroDef"],[3,"ErrorEmitted"],[8,"ErrorSink"],[3,"Hygiene"],[3,"HygieneFrame"],[8,"AsName"],[3,"Name"],[3,"ProcMacroExpander"]]},\
"hir_ty":{"doc":"The type system. We currently use this to infer types for …","t":[12,12,3,13,6,6,6,13,6,13,3,13,13,4,3,6,6,8,6,13,6,6,6,6,13,6,6,3,13,6,6,13,13,6,13,13,6,6,6,3,6,13,13,13,6,6,6,6,18,4,4,6,4,3,6,13,13,3,6,6,6,13,4,13,13,18,13,6,6,13,6,6,6,8,6,6,13,3,13,4,4,6,13,13,13,6,6,8,6,3,4,8,6,3,4,13,8,13,13,13,4,13,6,6,6,11,5,10,11,10,11,10,11,10,11,10,11,10,11,10,11,11,11,11,10,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,0,11,11,5,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,0,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,5,11,5,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,10,11,10,11,11,11,11,11,11,5,5,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,12,11,0,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,10,11,11,5,11,5,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,10,11,10,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,8,5,10,5,3,3,3,3,3,3,3,3,3,3,3,8,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,10,12,11,11,11,11,11,11,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,10,12,11,11,11,11,11,11,10,12,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,10,12,10,12,10,12,10,12,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,11,11,11,11,11,11,10,12,10,12,10,12,10,12,10,12,10,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,4,4,13,13,13,13,4,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,5,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,12,12,12,12,12,12,12,12,13,13,4,13,4,13,8,4,3,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,5,12,13,13,13,13,13,3,4,13,13,13,13,13,13,13,3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,5,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,4,4,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,13,13,13,4,3,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11],"n":["0","0","AdtId","AdtId","AliasEq","AliasTy","AssocTypeId","AsyncBlockTypeImplTrait","Binders","Bool","BoundVar","BreakOutsideOfLoop","BuiltinType","CallableDefId","CallableSig","Canonical","CanonicalVarKinds","Cast","ChalkTraitId","Char","ClosureId","ConcreteConst","Const","ConstData","ConstId","ConstValue","ConstrainedSubst","DebruijnIndex","Disallowed","DomainGoal","DynTy","EnumVariantId","EnumVariantId","Environment","Float","Float","FnDefId","FnPointer","FnSig","FnSubst","ForeignDefId","FunctionId","FunctionId","General","GenericArg","GenericArgData","Goal","Guidance","INNERMOST","ImplTraitId","ImplTraitLoweringMode","InEnvironment","InferenceDiagnostic","InferenceResult","InferenceVar","Int","Integer","Interner","Lifetime","LifetimeData","LifetimeOutlives","Mut","Mutability","NoSuchField","Not","ONE","Opaque","OpaqueTy","OpaqueTyId","Param","PlaceholderIndex","PolyFnSig","ProjectionTy","ProjectionTyExt","QuantifiedWhereClause","QuantifiedWhereClauses","ReturnTypeImplTrait","ReturnTypeImplTraits","Safe","Safety","Scalar","Solution","StaticId","StructId","StructId","Substitution","TraitRef","TraitRefExt","Ty","TyBuilder","TyDefId","TyExt","TyKind","TyLoweringContext","TyVariableKind","TypeAliasId","TypeWalk","Uint","UnionId","Unsafe","ValueTyDefId","Variable","VariableKind","VariableKinds","WhereClause","adt","all_super_traits","as_adt","as_adt","as_builtin","as_builtin","as_fn_def","as_fn_def","as_generic_def","as_generic_def","as_reference","as_reference","as_reference_or_ptr","as_reference_or_ptr","as_tuple","as_tuple","assoc_resolutions_for_expr","assoc_resolutions_for_pat","assoc_type_projection","associated_type_parent_trait","associated_type_parent_trait","associated_type_shorthand_candidates","autoderef","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_within","build","build","build","build","build","build","builtin","callable_def","callable_def","callable_item_sig","callable_sig","callable_sig","canonical_var_kinds_data","cast","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","const_data","const_eq","const_from_placeholder_idx","consteval","constraints_data","could_match","could_unify","db","db","debruijn","debug_adt_id","debug_alias","debug_assoc_type_id","debug_canonical_var_kinds","debug_closure_id","debug_const","debug_constraints","debug_fn_def_id","debug_generic_arg","debug_goal","debug_goals","debug_lifetime","debug_opaque_ty","debug_opaque_ty_id","debug_program_clause","debug_program_clause_implication","debug_program_clauses","debug_projection_ty","debug_quantified_where_clauses","debug_separator_trait_ref","debug_substitution","debug_trait_id","debug_ty","debug_variable_kinds","debug_variable_kinds_with_angles","def_ty","default","depth","diagnostics","diagnostics","display","dummy_usize_const","dyn_trait","dyn_trait","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equals_ctor","equals_ctor","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr_adjustments","expr_type_mismatches","field_resolution","fill","fill_with_bound_vars","fill_with_defaults","fill_with_unknown","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_ptr","fold_with","fold_with","fold_with","fold_with","fold_with","fold_with","fold_with","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_assoc_type_id","from_chalk_trait_id","from_fn_ptr","from_foreign_def_id","from_params_and_return","from_placeholder_idx","generic_arg_data","goal_data","goals_data","has_interner","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_trait_id","hir_trait_id","impl_self_ty","impl_trait_bounds","impl_trait_bounds","impl_trait_mode","index","index","index","index_if_bound_at","index_if_innermost","intern_canonical_var_kinds","intern_const","intern_constraints","intern_generic_arg","intern_generic_arg_kinds","intern_goal","intern_goals","intern_lifetime","intern_program_clause","intern_program_clauses","intern_quantified_where_clauses","intern_substitution","intern_ty","intern_variances","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_never","is_never","is_ty_var","is_ty_var","is_unit","is_unit","is_unknown","is_unknown","is_unknown","krate","lifetime_data","lower_ty","lower_ty_ext","lt_from_placeholder_idx","make_canonical","method_resolution","method_resolution","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","param_idx","params","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pat_adjustments","pat_type_mismatches","primitive","program_clause_data","program_clauses_data","push","quantified_where_clauses_data","remaining","replace_errors_with_variables","resolver","ret","shift_in","shift_out","shifted_in","shifted_in","shifted_in","shifted_in","shifted_in","shifted_in","shifted_in","shifted_in","shifted_in","shifted_in_from","shifted_in_from","shifted_in_from","shifted_in_from","shifted_in_from","shifted_in_from","shifted_in_from","shifted_in_from","shifted_in_from","shifted_out","shifted_out","shifted_out","shifted_out","shifted_out","shifted_out","shifted_out","shifted_out","shifted_out","shifted_out_to","shifted_out_to","shifted_out_to","shifted_out_to","shifted_out_to","shifted_out_to","shifted_out_to","shifted_out_to","shifted_out_to","static_lifetime","strip_references","strip_references","subst_for_def","subst_prefix","substitution_data","to_assoc_type_id","to_chalk_trait_id","to_const","to_fn_ptr","to_foreign_def_id","to_lifetime","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_placeholder_idx","to_ty","trait_","trait_","trait_ref","trait_ref","trait_ref","traits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tuple","ty_data","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_mismatch_for_expr","type_mismatch_for_pat","type_of_expr","type_of_pat","type_param_mode","type_params_subst","unit","use_parent_substs","value_ty","variable_kinds_data","variances_data","variant_resolution_for_expr","variant_resolution_for_pat","visit_with","visit_with","visit_with","visit_with","visit_with","visit_with","walk","walk","walk","walk","walk","walk","walk","walk","walk","walk","walk","walk","walk","with_debruijn","with_impl_trait_mode","with_shifted_in","with_type_param_mode","within","zip_with","zip_with","zip_with","zip_with","expr","expr","ConstExt","eval_usize","is_unknown","usize_const","AdtVarianceQuery","AssociatedTyDataQuery","AssociatedTyValueQuery","CallableItemSignatureQuery","ConstParamTyQuery","FieldTypesQuery","FnDefDatumQuery","FnDefVarianceQuery","GenericDefaultsQuery","GenericPredicatesForParamQuery","GenericPredicatesQuery","HirDatabase","HirDatabaseGroupStorage__","HirDatabaseStorage","ImplDatumQuery","ImplSelfTyQuery","ImplTraitQuery","InferQueryQuery","InherentImplsInCrateQuery","InternCallableDefLookupQuery","InternCallableDefQuery","InternClosureLookupQuery","InternClosureQuery","InternConstParamIdLookupQuery","InternConstParamIdQuery","InternImplTraitIdLookupQuery","InternImplTraitIdQuery","InternLifetimeParamIdLookupQuery","InternLifetimeParamIdQuery","InternTypeParamIdLookupQuery","InternTypeParamIdQuery","InternedCallableDefId","InternedClosureId","InternedConstParamId","InternedLifetimeParamId","InternedOpaqueTyId","InternedTypeParamId","ProgramClausesForChalkEnvQuery","ReturnTypeImplTraitsQuery","StructDatumQuery","TraitDatumQuery","TraitEnvironmentQuery","TraitImplsInBlockQuery","TraitImplsInCrateQuery","TraitImplsInDepsQuery","TraitSolveQueryQuery","TyQuery","ValueTyQuery","adt_variance","adt_variance","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","associated_ty_data","associated_ty_data","associated_ty_value","associated_ty_value","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callable_item_signature","callable_item_signature","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","const_param_ty","const_param_ty","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","field_types","field_types","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_index","fn_def_datum","fn_def_datum","fn_def_variance","fn_def_variance","for_each_query","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","generic_defaults","generic_defaults","generic_predicates","generic_predicates","generic_predicates_for_param","generic_predicates_for_param","hash","hash","hash","hash","hash","hash","impl_datum","impl_datum","impl_self_ty","impl_self_ty","impl_trait","impl_trait","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","infer","infer_query","infer_query","inherent_impls_in_crate","inherent_impls_in_crate","intern_callable_def","intern_callable_def","intern_closure","intern_closure","intern_const_param_id","intern_const_param_id","intern_impl_trait_id","intern_impl_trait_id","intern_lifetime_param_id","intern_lifetime_param_id","intern_type_param_id","intern_type_param_id","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","lookup_intern_callable_def","lookup_intern_callable_def","lookup_intern_closure","lookup_intern_closure","lookup_intern_const_param_id","lookup_intern_const_param_id","lookup_intern_impl_trait_id","lookup_intern_impl_trait_id","lookup_intern_lifetime_param_id","lookup_intern_lifetime_param_id","lookup_intern_type_param_id","lookup_intern_type_param_id","maybe_changed_since","ne","ne","ne","ne","ne","ne","new","partial_cmp","program_clauses_for_chalk_env","program_clauses_for_chalk_env","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","recover","recover","recover","recover","return_type_impl_traits","return_type_impl_traits","struct_datum","struct_datum","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trait_datum","trait_datum","trait_environment","trait_environment","trait_impls_in_block","trait_impls_in_block","trait_impls_in_crate","trait_impls_in_crate","trait_impls_in_deps","trait_impls_in_deps","trait_solve","trait_solve_query","trait_solve_query","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value_ty","value_ty","BodyValidationDiagnostic","CaseType","Constant","Enum","Field","Function","IdentType","IncorrectCase","LowerSnakeCase","MismatchedArgCount","MissingMatchArms","MissingOkOrSomeInTailExpr","Parameter","RecordMissingFields","RemoveThisSemicolon","ReplaceFilterMapNextWithFindMap","StaticVariable","Structure","UpperCamelCase","UpperSnakeCase","Variable","Variant","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","collect","expected_case","file","fmt","fmt","fmt","fmt","fmt","from","from","from","from","ident","ident_text","ident_type","into","into","into","into","missing_unsafe","record_literal_missing_fields","record_pattern_missing_fields","suggested_text","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validate_module_item","call_expr","expected","expr","expr","found","match_expr","method_call_expr","missed_fields","record","required","variant","Closure","Diagnostics","DisplaySourceCodeError","DisplaySourceCodeError","DisplayTarget","FmtError","HirDisplay","HirDisplayError","HirDisplayWrapper","HirFormatter","PathNotFound","SourceCode","Test","UnknownType","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","db","display","display_source_code","display_test","display_truncated","fmt","fmt","from","from","from","from","from","from","hir_fmt","into","into","into","into","into","into_displayable","omit_verbose_types","should_truncate","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","write_bounds_like_dyn_trait_with_prefix","write_fmt","write_joined","write_visibility","module_id","Adt","Array","Dyn","ForeignType","Function","InherentImpls","LookupMode","MethodCall","Never","Path","RawPtr","Scalar","Slice","Str","TraitImpls","TyFingerprint","Unit","Unnameable","all_impls","all_impls","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","def_crates","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","for_inherent_impl","for_self_ty","for_self_ty_without_blanket_impls","for_trait","for_trait_and_self_ty","for_trait_impl","from","from","from","from","hash","implements_trait","implements_trait_unique","into","into","into","into","iterate_method_candidates","ne","ne","ne","resolve_indexing_op","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","BuiltinFloat","BuiltinInt","BuiltinUint","F32","F32","F64","F64","FloatTy","I128","I128","I16","I16","I32","I32","I64","I64","I8","I8","IntTy","Isize","Isize","U128","U128","U16","U16","U32","U32","U64","U64","U8","U8","UintTy","Usize","Usize","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","float_ty_to_string","fmt","fmt","fmt","fmt","fmt","fmt","fold_with","fold_with","fold_with","from","from","from","from","from","from","from_suffix","from_suffix","from_suffix","hash","hash","hash","hash","hash","hash","int_ty_to_string","into","into","into","into","into","into","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","shifted_in","shifted_in","shifted_in","shifted_in_from","shifted_in_from","shifted_in_from","shifted_out","shifted_out","shifted_out","shifted_out_to","shifted_out_to","shifted_out_to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","uint_ty_to_string","visit_with","visit_with","visit_with","Fn","FnMut","FnOnce","FnTrait","TraitEnvironment","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","empty","env","eq","eq","equivalent","equivalent","fmt","fmt","from","from","get_id","hash","hash","into","into","krate","ne","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["hir_tyhir_ty::InferenceDiagnostic","","hir_ty::consteval","","","","hir_ty::dbhir_ty::diagnostics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_ty::diagnostics::BodyValidationDiagnostic","","","","","","","","","","","hir_ty::display","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_ty::display::DisplayTarget","hir_ty::method_resolution","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_ty::primitive","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_ty::traits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","The id for an Abstract Data Type (i.e. structs, unions …","","","","","","","","Identifies a particular bound variable within a binder. …","","","","A function signature as seen by type inference: Several …","","","The <code>Cast</code> trait is used to make annoying upcasts between …","","","","","","","","","","References the binder at the given depth. The index is a …","<code>impl Trait</code> is disallowed and will be an error.","","","","","","","","","","","A wrapper for the substs on a Fn.","","","","","","","","","Innermost index.","","","","","The result of type inference: A mapping from expressions …","","","","","","","","Mutable","Whether a type is mutable or not.","","Immutable","One level higher than the innermost index.","<code>impl Trait</code> gets lowered into an opaque type that doesn’…","","","<code>impl Trait</code> gets lowered into a type variable. Used for …","","A polymorphic function signature.","","","","","","","Safe","Whether a function is safe or not.","Types of scalar values.","","","","","","","","","This is a builder for <code>Ty</code> or anything that needs a …","","","","","Represents some extra knowledge we may have about the …","","This allows walking structures that contain types to do …","","","Unsafe","","<code>impl Trait</code> gets lowered into a variable that can unify …","","","","","Returns an iterator over the whole super trait hierarchy …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","True if this variable is bound within the <code>amount</code> …","","","","","","","","","","Build the signature of a callable item (function, struct …","","","","Cast a value to type <code>U</code> using <code>CastTo</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constant evaluation details","","","","The home of <code>HirDatabase</code>, which is the Salsa database …","","Debruijn index, which identifies the binder.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Depth of the De Bruijn index, counting from 0 starting …","Type inference-based diagnostics.","","The <code>HirDisplay</code> trait, which serves two purposes: Turning …","","If this is a <code>dyn Trait</code>, returns that trait.","","","","","","","","","","","","","","","","","","","","FIXME: Get rid of this, it’s not a good abstraction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index within the binder.","Return the index of the bound variable, but only if it is …","Return the index of the bound variable, but only if it is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module is concerned with finding methods that a …","","","","","","","","","","","","","","","","Creates a new bound variable.","Creates a new de Bruijn index with a given depth.","Return an index of a parameter in the generic type …","","","","","","","","","Stores the types which were implicitly dereferenced in …","","A few helper functions for dealing with primitives.","","","","","","‘Canonicalizes’ the <code>t</code> by replacing any errors with …","","","Update this index in place by shifting it “in” through…","Update in place by shifting out from <code>amount</code> binders.","","","","","","Adjusts the debruijn index (see [<code>DebruijnIndex::shifted_in</code>…","","Returns the resulting index when this value is moved into …","","","","","","","Adjusts the debruijn index (see [<code>DebruijnIndex::shifted_in</code>…","","Adds <code>outer_binder</code> levels to the <code>self</code> index. Intuitively, …","","","","","","","Adjusts the debruijn index (see [<code>DebruijnIndex::shifted_in</code>…","","Returns the resulting index when this value is moved out …","","","","","","","Adjusts the debruijn index (see [<code>DebruijnIndex::shifted_in</code>…","","Subtracts <code>outer_binder</code> levels from the <code>self</code> index. …","","","","","","","","","","Wraps the bound variable in a constant.","","","Wrap the bound variable in a lifetime.","","","","","","","","","","","","","","","","","","","","Casts the bound variable to a type.","","","","","","Trait solving using Chalk.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","For each pattern record the type it resolves to.","Note: Conceptually, it’s thinkable that we could be in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","True if the binder identified by this index is within the …","","","","","","","Extension trait for [<code>Const</code>]","","Is a [<code>Const</code>] unknown?","Interns a possibly-unknown target usize","","","","","","","","","","","","","","Representative struct for the query group.","","","","","","","","","","","","","","","","","","This exists just for Chalk, because Chalk just has a …et access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …isplay types for inlays, doc popups, autocompletion, etc…","","Errors that can occur when generating source code","","<code>FmtError</code> is required to be compatible with …","","","","","","Display types for inserting them in source files. The …","Only for test purpose to keep real types","","","","","","","","","","","","","","","Returns a <code>Display</code>able type that is human-readable. Use …","Returns a String representation of <code>self</code> that can be …","Returns a String representation of <code>self</code> for test purposes","Returns a <code>Display</code>able type that is human-readable and …","","","","","","","","","","","","","","","Returns a <code>Display</code>able type that is human-readable.","","","","","","","","","","","","","","","","","","","","","This allows using the <code>write!</code> macro directly with a …","","","","","","","","","Inherent impls defined in some crate.","Whether we’re looking up a dotted method call (like …","Looking up a method call like <code>v.len()</code>: We only consider …","","Looking up a path like <code>Vec::new</code> or <code>Vec::default</code>: We …","","","","","Trait impls defined or available in some crate.","This is used as a key for indexing impls.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a TyFingerprint for looking up an inherent impl. …","","Queries all trait impls for the given type.","Queries all impls of the given trait.","Queries all impls of <code>trait_</code> that may apply to <code>self_ty</code>.","Creates a TyFingerprint for looking up a trait impl.","","","","","","","","","","","","","","","","Returns the self type for the index trait call.","","","","","","","","","","","","","","","","Different signed int types.","Different unsigned int types.","","","","","Different kinds of float types.","","","","","","","","","","","Different signed int types.","","","","","","","","","","","","","Different unsigned int types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A set of clauses that we assume to be true. E.g. if we …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,0,3,0,0,0,4,0,5,0,6,3,0,0,0,0,0,0,5,0,0,0,0,7,0,0,0,8,0,0,9,7,0,5,10,0,0,0,0,0,9,7,10,0,0,0,0,11,0,0,0,0,0,0,5,10,0,0,0,0,12,0,6,12,11,8,0,0,8,0,0,0,0,0,0,4,0,13,0,0,0,7,9,7,0,0,0,0,0,0,0,0,0,0,3,0,5,7,13,0,8,0,0,0,14,0,15,16,15,16,15,16,15,16,15,16,15,16,15,16,17,17,14,15,16,0,0,14,6,17,18,19,8,9,3,7,20,4,21,5,13,12,1,22,11,2,10,14,6,17,18,19,8,9,3,7,20,4,21,5,13,12,1,22,11,2,10,22,14,14,14,14,14,14,14,15,16,0,15,16,18,23,6,17,18,8,9,3,7,20,4,21,5,13,12,1,22,11,2,10,6,17,18,8,9,3,7,20,4,21,5,13,12,1,22,11,2,10,18,5,13,12,1,22,11,18,18,0,0,18,2,0,0,19,22,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,14,17,11,0,17,0,0,15,16,6,17,18,8,9,3,7,20,4,21,5,13,12,1,22,11,2,10,15,16,6,17,18,8,9,3,7,20,4,21,5,13,12,1,22,11,2,10,17,17,17,14,14,14,14,6,17,18,19,8,9,3,7,20,4,21,5,13,12,1,22,11,2,10,14,20,5,13,12,1,11,2,14,24,25,6,17,18,19,8,9,9,9,9,3,3,3,3,3,3,3,7,7,7,7,7,7,7,20,4,21,5,13,12,1,22,11,2,10,0,0,20,0,20,0,18,18,18,0,18,9,3,7,4,21,5,13,12,1,22,11,2,10,26,16,27,28,29,30,31,32,33,34,35,20,22,36,33,14,15,16,19,17,17,22,22,22,18,18,18,18,18,18,18,18,18,18,18,18,18,18,14,6,17,18,19,8,9,3,7,20,4,21,5,13,12,1,22,11,2,10,15,16,15,16,15,16,15,16,32,9,18,19,19,0,0,0,17,6,17,9,3,7,20,4,21,5,1,22,11,2,19,22,11,0,20,18,5,13,12,1,22,11,17,17,0,18,18,14,18,14,0,19,20,11,11,20,5,13,12,1,22,11,11,2,20,5,13,12,1,22,11,11,2,20,5,13,12,1,22,11,11,2,20,5,13,12,1,22,11,11,2,0,15,16,14,0,18,0,0,22,20,0,22,6,17,18,8,9,3,7,20,4,21,5,13,12,1,22,11,2,10,0,22,37,27,37,14,27,0,14,6,17,18,19,8,9,3,7,20,4,21,5,13,12,1,22,11,2,10,14,6,17,18,19,8,9,3,7,20,4,21,5,13,12,1,22,11,2,10,14,18,14,6,17,18,19,8,9,3,7,20,4,21,5,13,12,1,22,11,2,10,17,17,17,17,19,14,14,14,14,18,18,17,17,5,13,12,1,11,2,38,39,40,26,16,27,41,28,33,42,35,20,2,19,19,19,19,11,5,12,1,2,43,44,0,0,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,47,48,49,50,51,52,53,46,47,46,47,54,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,48,49,50,51,52,53,54,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,48,49,50,51,52,53,46,47,48,49,50,51,52,53,48,49,50,51,52,53,53,46,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,48,49,50,51,52,53,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,84,85,86,87,88,89,90,91,92,93,46,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,48,49,50,51,52,53,47,46,47,46,47,47,54,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,48,49,50,51,51,52,52,53,53,48,49,50,51,52,53,46,47,46,47,46,47,48,49,50,51,52,53,46,47,46,47,46,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,46,46,47,46,47,46,47,46,47,46,47,46,47,46,47,46,47,54,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,48,49,50,51,52,53,46,47,46,47,46,47,46,47,46,47,46,47,47,48,49,50,51,52,53,47,53,46,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,56,58,64,67,46,47,46,47,48,49,50,51,52,53,46,47,46,47,46,47,46,47,46,47,46,46,47,54,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,48,49,50,51,52,53,54,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,48,49,50,51,52,53,46,47,54,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,48,49,50,51,52,53,46,47,0,0,94,94,94,94,0,0,95,96,96,96,94,96,96,96,94,94,95,95,94,94,96,95,94,97,96,95,94,97,96,97,97,95,95,94,94,97,96,95,94,97,97,97,97,96,95,94,97,0,0,0,97,95,94,96,95,94,97,96,95,94,97,96,95,94,97,0,98,98,99,100,98,101,102,103,103,100,103,104,105,0,106,0,106,0,0,0,0,104,105,105,104,107,106,108,105,104,107,106,108,105,104,105,105,107,109,109,109,109,108,104,107,106,106,108,105,104,109,107,106,108,105,104,109,107,107,105,108,107,106,108,105,104,107,106,108,105,104,107,106,108,105,104,0,107,107,0,110,111,111,111,111,111,0,0,112,111,112,111,111,111,111,0,0,111,111,113,114,111,113,114,112,111,113,114,112,111,112,111,112,0,111,113,114,112,111,113,114,112,111,113,114,112,111,114,113,113,113,111,111,113,114,112,111,0,0,111,113,114,112,0,111,113,114,0,111,112,111,113,114,112,111,113,114,112,111,113,114,112,0,0,0,115,116,115,116,0,117,118,117,118,117,118,117,118,117,118,0,117,118,119,120,119,120,119,120,119,120,119,120,0,119,120,117,119,115,118,120,116,117,119,115,118,120,116,117,119,115,118,120,116,117,119,115,118,120,116,117,119,115,118,120,116,117,119,115,118,120,116,117,119,115,118,120,116,0,117,119,115,118,120,116,117,119,115,117,119,115,118,120,116,118,120,116,117,119,115,118,120,116,0,117,119,115,118,120,116,117,119,115,118,120,116,117,119,115,117,119,115,117,119,115,117,119,115,117,119,115,118,120,116,117,119,115,118,120,116,117,119,115,118,120,116,117,119,115,118,120,116,0,117,119,115,121,121,121,0,0,122,121,122,121,122,121,122,121,122,122,122,121,122,121,122,121,122,121,121,122,121,122,121,122,122,122,121,122,121,122,121,122,121],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["adtid",4],["hirdatabase",8]],[["adtid",4],["tybuilder",3]]],[[["defdatabase",8],["traitid",3]],[["traitid",3],["vec",3]]],[[],["option",4]],[[],["option",4]],[[],[["option",4],["builtintype",4]]],[[],[["option",4],["builtintype",4]]],[[["hirdatabase",8]],[["functionid",3],["option",4]]],[[["hirdatabase",8]],[["functionid",3],["option",4]]],[[["hirdatabase",8]],[["genericdefid",4],["option",4]]],[[["hirdatabase",8]],[["genericdefid",4],["option",4]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],[["option",4],["substitution",6]]],[[],[["option",4],["substitution",6]]],[[["exprid",6]],[["associtemid",4],["option",4]]],[[["patid",6]],[["associtemid",4],["option",4]]],[[["typealiasid",3],["hirdatabase",8]],[["typealiasid",3],["tybuilder",3]]],[[["hirdatabase",8]],[["option",4],["traitid",3]]],[[["hirdatabase",8]],[["option",4],["traitid",3]]],[[["typens",4],["hirdatabase",8]],["option",4]],[[["crateid",3],["option",4],["inenvironment",6],["hirdatabase",8],["canonical",6]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["debruijnindex",3]],["bool",15]],[[],["ty",6]],[[],["projectionty",6]],[[],["traitref",6]],[[],["substitution",6]],[[]],[[],["ty",6]],[[["builtintype",4]],["ty",6]],[[["hirdatabase",8]],[["option",4],["callabledefid",4]]],[[["hirdatabase",8]],[["option",4],["callabledefid",4]]],[[["callabledefid",4],["hirdatabase",8]],["polyfnsig",6]],[[["hirdatabase",8]],[["callablesig",3],["option",4]]],[[["hirdatabase",8]],[["callablesig",3],["option",4]]],[[]],[[]],[[],["inferencediagnostic",4]],[[],["inferenceresult",3]],[[],["interner",3]],[[],["impltraitloweringmode",4]],[[],["callabledefid",4]],[[],["tydefid",4]],[[],["valuetydefid",4]],[[],["callablesig",3]],[[],["impltraitid",4]],[[],["returntypeimpltraits",3]],[[],["scalar",4]],[[],["safety",4]],[[],["mutability",4]],[[],["adtid",3]],[[],["boundvar",3]],[[],["debruijnindex",3]],[[],["fnsubst",3]],[[],["tyvariablekind",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["interner",3]],["ordering",4]],[[["scalar",4]],["ordering",4]],[[["safety",4]],["ordering",4]],[[["mutability",4]],["ordering",4]],[[["adtid",3]],["ordering",4]],[[["boundvar",3]],["ordering",4]],[[["debruijnindex",3]],["ordering",4]],[[],["constdata",3]],[[],["bool",15]],[[["placeholderindex",6],["hirdatabase",8]],["constparamid",3]],null,[[]],[[["unificationdatabase",8]],["bool",15]],[[["canonical",6],["traitenvironment",3],["arc",3],["hirdatabase",8]],["bool",15]],null,null,null,[[["formatter",3],["interner",3],["adtid",3]],[["result",6],["option",4]]],[[["formatter",3],["aliasty",4]],[["result",6],["option",4]]],[[["formatter",3],["interner",3],["assoctypeid",3]],[["result",6],["option",4]]],[[["canonicalvarkinds",3],["formatter",3]],[["result",6],["option",4]]],[[["formatter",3],["closureid",3]],[["result",6],["option",4]]],[[["const",3],["formatter",3]],[["result",6],["option",4]]],[[["formatter",3],["constraints",3]],[["result",6],["option",4]]],[[["formatter",3],["fndefid",3]],[["result",6],["option",4]]],[[["formatter",3],["genericarg",6]],[["result",6],["option",4]]],[[["formatter",3],["goal",3]],[["result",6],["option",4]]],[[["formatter",3],["goals",3]],[["result",6],["option",4]]],[[["formatter",3],["lifetime",3]],[["result",6],["option",4]]],[[["opaquety",3],["formatter",3]],[["result",6],["option",4]]],[[["formatter",3],["opaquetyid",3]],[["result",6],["option",4]]],[[["formatter",3],["programclause",3]],[["result",6],["option",4]]],[[["formatter",3],["programclauseimplication",3]],[["result",6],["option",4]]],[[["formatter",3],["programclauses",3]],[["result",6],["option",4]]],[[["formatter",3],["projectionty",3]],[["result",6],["option",4]]],[[["formatter",3],["quantifiedwhereclauses",3]],[["result",6],["option",4]]],[[["separatortraitref",3],["formatter",3]],[["result",6],["option",4]]],[[["formatter",3],["substitution",3]],[["result",6],["option",4]]],[[["traitid",3],["interner",3],["formatter",3]],[["result",6],["option",4]]],[[["formatter",3],["ty",3]],[["result",6],["option",4]]],[[["variablekinds",3],["formatter",3]],[["result",6],["option",4]]],[[["variablekinds",3],["formatter",3]],[["result",6],["option",4]]],[[["tydefid",4],["hirdatabase",8]],[["binders",6],["tybuilder",3]]],[[],["inferenceresult",3]],[[],["u32",15]],null,null,null,[[],["const",6]],[[],[["option",4],["traitid",3]]],[[],[["option",4],["traitid",3]]],[[["inferencediagnostic",4]],["bool",15]],[[["inferenceresult",3]],["bool",15]],[[["interner",3]],["bool",15]],[[["impltraitloweringmode",4]],["bool",15]],[[["callabledefid",4]],["bool",15]],[[["tydefid",4]],["bool",15]],[[["valuetydefid",4]],["bool",15]],[[["callablesig",3]],["bool",15]],[[["impltraitid",4]],["bool",15]],[[["returntypeimpltraits",3]],["bool",15]],[[["scalar",4]],["bool",15]],[[["safety",4]],["bool",15]],[[["mutability",4]],["bool",15]],[[["adtid",3]],["bool",15]],[[["boundvar",3]],["bool",15]],[[["debruijnindex",3]],["bool",15]],[[["fnsubst",3]],["bool",15]],[[["tyvariablekind",4]],["bool",15]],[[["ty",6]],["bool",15]],[[["ty",6]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[]],[[["exprid",6]],[["fieldid",3],["option",4]]],[[]],[[["debruijnindex",3],["usize",15]]],[[["hirdatabase",8]]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["callablesig",3]],["ty",6]],[[["debruijnindex",3],["folder",8]],["fallible",6]],[[["folder",8],["debruijnindex",3]],[["nosolution",3],["result",4]]],[[["folder",8],["debruijnindex",3]],[["result",4],["nosolution",3]]],[[["folder",8],["debruijnindex",3]],[["nosolution",3],["result",4]]],[[["folder",8],["debruijnindex",3]],[["nosolution",3],["result",4]]],[[["folder",8],["debruijnindex",3]],[["result",4],["nosolution",3]]],[[["folder",8],["debruijnindex",3]],[["result",4],["nosolution",3]]],[[]],[[["internedcallabledefid",3]]],[[["internedopaquetyid",3]]],[[]],[[]],[[]],[[]],[[]],[[["functionid",3]],["callabledefid",4]],[[["structid",3]],["callabledefid",4]],[[]],[[["enumvariantid",3]],["callabledefid",4]],[[]],[[["adtid",4]],["tydefid",4]],[[["builtintype",4]],["tydefid",4]],[[["structid",3]],["tydefid",4]],[[["enumid",3]],["tydefid",4]],[[["unionid",3]],["tydefid",4]],[[["typealiasid",3]],["tydefid",4]],[[["functionid",3]],["valuetydefid",4]],[[["unionid",3]],["valuetydefid",4]],[[["enumvariantid",3]],["valuetydefid",4]],[[["constid",3]],["valuetydefid",4]],[[["staticid",3]],["valuetydefid",4]],[[]],[[["structid",3]],["valuetydefid",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["assoctypeid",6]],["typealiasid",3]],[[["chalktraitid",6]],["traitid",3]],[[["fnpointer",6]],["callablesig",3]],[[["foreigndefid",6]],["typealiasid",3]],[[["ty",6],["vec",3],["bool",15]],["callablesig",3]],[[["placeholderindex",6],["hirdatabase",8]],["typeparamid",3]],[[],["genericargdata",4]],[[],["goaldata",4]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[],["traitid",3]],[[],["traitid",3]],[[["implid",3],["hirdatabase",8]],[["binders",6],["tybuilder",3]]],[[["hirdatabase",8]],[["vec",3],["option",4]]],[[["hirdatabase",8]],[["vec",3],["option",4]]],null,[[["patid",6]],["ty",6]],[[["exprid",6]],["ty",6]],null,[[["debruijnindex",3]],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],["result",4]],[[["constdata",3]]],[[],["result",4]],[[["genericargdata",4]]],[[],["result",4]],[[["goaldata",4]]],[[],["result",4]],[[["lifetimedata",4]]],[[["programclausedata",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["tykind",4]]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["hirdatabase",8]],["crateid",3]],[[],["lifetimedata",4]],[[["typeref",4]],["ty",6]],[[["typeref",4]]],[[["placeholderindex",6],["hirdatabase",8]],["lifetimeparamid",3]],[[["hasinterner",8]],[["hasinterner",8],["canonical",6]]],null,[[["exprid",6]],["option",4]],[[["inferencediagnostic",4]],["bool",15]],[[["inferenceresult",3]],["bool",15]],[[["callabledefid",4]],["bool",15]],[[["tydefid",4]],["bool",15]],[[["valuetydefid",4]],["bool",15]],[[["callablesig",3]],["bool",15]],[[["impltraitid",4]],["bool",15]],[[["returntypeimpltraits",3]],["bool",15]],[[["scalar",4]],["bool",15]],[[["adtid",3]],["bool",15]],[[["boundvar",3]],["bool",15]],[[["debruijnindex",3]],["bool",15]],[[["fnsubst",3]],["bool",15]],[[["hirdatabase",8],["resolver",3]]],[[["debruijnindex",3],["usize",15]],["boundvar",3]],[[["u32",15]],["debruijnindex",3]],[[["typeparamid",3],["hirdatabase",8]],[["usize",15],["option",4]]],[[]],[[["interner",3]],[["option",4],["ordering",4]]],[[["scalar",4]],[["option",4],["ordering",4]]],[[["safety",4]],[["option",4],["ordering",4]]],[[["mutability",4]],[["option",4],["ordering",4]]],[[["adtid",3]],[["option",4],["ordering",4]]],[[["boundvar",3]],[["option",4],["ordering",4]]],[[["debruijnindex",3]],[["option",4],["ordering",4]]],null,[[]],null,[[],["programclausedata",3]],[[]],[[]],[[]],[[],["usize",15]],[[],["canonical",6]],null,[[],["ty",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["boundvar",3]],[[]],[[],["debruijnindex",3]],[[]],[[["debruijnindex",3]]],[[["debruijnindex",3]]],[[["debruijnindex",3]]],[[["debruijnindex",3]]],[[["debruijnindex",3]]],[[["debruijnindex",3]],["boundvar",3]],[[["debruijnindex",3]]],[[["debruijnindex",3]],["debruijnindex",3]],[[["debruijnindex",3]]],[[],[["nosolution",3],["result",4]]],[[],[["nosolution",3],["result",4]]],[[],[["nosolution",3],["result",4]]],[[],[["nosolution",3],["result",4]]],[[],[["nosolution",3],["result",4]]],[[],[["option",4],["boundvar",3]]],[[],[["nosolution",3],["result",4]]],[[],[["debruijnindex",3],["option",4]]],[[],[["nosolution",3],["result",4]]],[[["debruijnindex",3]],[["nosolution",3],["result",4]]],[[["debruijnindex",3]],[["nosolution",3],["result",4]]],[[["debruijnindex",3]],[["nosolution",3],["result",4]]],[[["debruijnindex",3]],[["nosolution",3],["result",4]]],[[["debruijnindex",3]],[["nosolution",3],["result",4]]],[[["debruijnindex",3]],[["option",4],["boundvar",3]]],[[["debruijnindex",3]],[["nosolution",3],["result",4]]],[[["debruijnindex",3]],[["debruijnindex",3],["option",4]]],[[["debruijnindex",3]],[["nosolution",3],["result",4]]],[[],["lifetime",6]],[[],["ty",6]],[[],["ty",6]],[[["hirdatabase",8]],["tybuilder",3]],[[["substitution",6],["usize",15]],["substitution",6]],[[]],[[["typealiasid",3]],["assoctypeid",6]],[[["traitid",3]],["chalktraitid",6]],[[["ty",3]],["const",3]],[[],["fnpointer",6]],[[["typealiasid",3]],["foreigndefid",6]],[[],["lifetime",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["typeparamid",3],["hirdatabase",8]],["placeholderindex",6]],[[],["ty",3]],[[["hirdatabase",8]],["traitid",3]],[[["hirdatabase",8]],["traitid",3]],[[["hirdatabase",8]],["traitref",6]],[[["traitid",3],["hirdatabase",8]],[["traitid",3],["tybuilder",3]]],[[["hirdatabase",8]],["traitref",6]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]],[["tybuilder",3],["tuple",3]]],[[],["tydata",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["exprid",6]],[["typemismatch",3],["option",4]]],[[["patid",6]],[["typemismatch",3],["option",4]]],null,null,null,[[["hirdatabase",8]],["substitution",6]],[[],["ty",6]],[[["substitution",6]]],[[["valuetydefid",4],["hirdatabase",8]],[["binders",6],["tybuilder",3]]],[[]],[[]],[[["exprid",6]],[["option",4],["variantid",4]]],[[["patid",6]],[["option",4],["variantid",4]]],[[["visitor",8],["debruijnindex",3]],["controlflow",4]],[[["visitor",8],["debruijnindex",3]],["controlflow",4]],[[["visitor",8],["debruijnindex",3]],["controlflow",4]],[[["visitor",8],["debruijnindex",3]],["controlflow",4]],[[["visitor",8],["debruijnindex",3]],["controlflow",4]],[[["visitor",8],["debruijnindex",3]],["controlflow",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["debruijnindex",3]]],[[["impltraitloweringmode",4]]],[[["debruijnindex",3]]],[[["typeparamloweringmode",4]]],[[["debruijnindex",3]],["bool",15]],[[["variance",4],["scalar",4]],[["nosolution",3],["result",4]]],[[["variance",4],["mutability",4]],[["nosolution",3],["result",4]]],[[["variance",4],["adtid",3]],[["nosolution",3],["result",4]]],[[["variance",4],["fnsubst",3]],[["nosolution",3],["result",4]]],null,null,null,[[["expr",4]],[["option",4],["u64",15]]],[[],["bool",15]],[[["option",4],["u64",15]],["const",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["interner",3],["adtid",3]],[["variances",3],["interner",3]]],null,[[],["internid",3]],[[],["internid",3]],[[],["internid",3]],[[],["internid",3]],[[],["internid",3]],[[],["internid",3]],[[["interner",3],["assoctypeid",3]],[["associatedtydatum",3],["arc",3]]],null,[[["associatedtyvalueid",3],["interner",3],["crateid",3]],[["arc",3],["associatedtyvalue",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["callabledefid",4]],["polyfnsig",6]],null,[[],["internedtypeparamid",3]],[[],["internedlifetimeparamid",3]],[[],["internedconstparamid",3]],[[],["internedopaquetyid",3]],[[],["internedclosureid",3]],[[],["internedcallabledefid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["internedcallabledefid",3]],["ordering",4]],[[["constparamid",3]],["ty",6]],null,[[],["inferqueryquery",3]],[[],["tyquery",3]],[[],["valuetyquery",3]],[[],["implselftyquery",3]],[[],["constparamtyquery",3]],[[],["impltraitquery",3]],[[],["fieldtypesquery",3]],[[],["callableitemsignaturequery",3]],[[],["returntypeimpltraitsquery",3]],[[],["genericpredicatesforparamquery",3]],[[],["genericpredicatesquery",3]],[[],["traitenvironmentquery",3]],[[],["genericdefaultsquery",3]],[[],["inherentimplsincratequery",3]],[[],["traitimplsincratequery",3]],[[],["traitimplsinblockquery",3]],[[],["traitimplsindepsquery",3]],[[],["interncallabledefquery",3]],[[],["interncallabledeflookupquery",3]],[[],["interntypeparamidquery",3]],[[],["interntypeparamidlookupquery",3]],[[],["internlifetimeparamidquery",3]],[[],["internlifetimeparamidlookupquery",3]],[[],["internconstparamidquery",3]],[[],["internconstparamidlookupquery",3]],[[],["internimpltraitidquery",3]],[[],["internimpltraitidlookupquery",3]],[[],["internclosurequery",3]],[[],["internclosurelookupquery",3]],[[],["associatedtydataquery",3]],[[],["traitdatumquery",3]],[[],["structdatumquery",3]],[[],["impldatumquery",3]],[[],["fndefdatumquery",3]],[[],["fndefvariancequery",3]],[[],["adtvariancequery",3]],[[],["associatedtyvaluequery",3]],[[],["traitsolvequeryquery",3]],[[],["programclausesforchalkenvquery",3]],[[["internedtypeparamid",3]],["bool",15]],[[["internedlifetimeparamid",3]],["bool",15]],[[["internedconstparamid",3]],["bool",15]],[[["internedopaquetyid",3]],["bool",15]],[[["internedclosureid",3]],["bool",15]],[[["internedcallabledefid",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["variantid",4]],[["arenamap",3],["arc",3]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["databasekeyindex",3],["formatter",3],["hirdatabase",8]],["result",6]],[[["fndefid",6],["crateid",3]],[["arc",3],["fndefdatum",3]]],null,[[["fndefid",6]],[["variances",3],["interner",3]]],null,[[["runtime",3],["fnmut",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["opaquetyid",6]]],[[["closureid",3],["interner",3]]],[[]],[[]],[[["fndefid",6]]],[[["internid",3]]],[[["internid",3]]],[[["internid",3]]],[[["internid",3]]],[[["internid",3]]],[[["internid",3]]],[[["genericdefid",4]],["arc",3]],null,[[["genericdefid",4]],["arc",3]],null,[[["typeparamid",3]],["arc",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[["interner",3],["implid",3],["crateid",3]],[["impldatum",3],["arc",3]]],null,[[["implid",3]],[["ty",6],["binders",6]]],null,[[["implid",3]],[["option",4],["binders",6]]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["defwithbodyid",4]],[["arc",3],["inferenceresult",3]]],[[["defwithbodyid",4]],[["arc",3],["inferenceresult",3]]],null,[[["crateid",3]],[["arc",3],["inherentimpls",3]]],null,[[["callabledefid",4]],["internedcallabledefid",3]],null,[[],["internedclosureid",3]],null,[[["constparamid",3]],["internedconstparamid",3]],null,[[["impltraitid",4]],["internedopaquetyid",3]],null,[[["lifetimeparamid",3]],["internedlifetimeparamid",3]],null,[[["typeparamid",3]],["internedtypeparamid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["internedcallabledefid",3]],["callabledefid",4]],null,[[["internedclosureid",3]]],null,[[["internedconstparamid",3]],["constparamid",3]],null,[[["internedopaquetyid",3]],["impltraitid",4]],null,[[["internedlifetimeparamid",3]],["lifetimeparamid",3]],null,[[["internedtypeparamid",3]],["typeparamid",3]],null,[[["databasekeyindex",3],["revision",3],["hirdatabase",8]],["bool",15]],[[["internedtypeparamid",3]],["bool",15]],[[["internedlifetimeparamid",3]],["bool",15]],[[["internedconstparamid",3]],["bool",15]],[[["internedopaquetyid",3]],["bool",15]],[[["internedclosureid",3]],["bool",15]],[[["internedcallabledefid",3]],["bool",15]],[[["u16",15]]],[[["internedcallabledefid",3]],[["option",4],["ordering",4]]],[[["environment",3],["interner",3],["crateid",3]],[["interner",3],["programclauses",3]]],null,[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["functionid",3]],[["arc",3],["option",4]]],null,[[["adtid",3],["interner",3],["crateid",3]],[["arc",3],["adtdatum",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[["traitid",3],["interner",3],["crateid",3]],[["arc",3],["traitdatum",3]]],null,[[["genericdefid",4]],[["arc",3],["traitenvironment",3]]],null,[[["blockid",3]],[["option",4],["arc",3]]],null,[[["crateid",3]],[["arc",3],["traitimpls",3]]],null,[[["crateid",3]],[["arc",3],["traitimpls",3]]],null,[[["canonical",6],["inenvironment",6],["crateid",3]],[["option",4],["solution",6]]],[[["canonical",6],["inenvironment",6],["crateid",3]],[["option",4],["solution",6]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["tydefid",4]],[["ty",6],["binders",6]]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["valuetydefid",4]],[["ty",6],["binders",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["defwithbodyid",4],["hirdatabase",8]],[["vec",3],["bodyvalidationdiagnostic",4]]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[["defwithbodyid",4],["hirdatabase",8]],[["exprid",6],["vec",3]]],[[["expr",4],["exprid",6],["inferenceresult",3],["hirdatabase",8]],["option",4]],[[["pat",4],["inferenceresult",3],["patid",6],["hirdatabase",8]],["option",4]],null,[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["crateid",3],["moduledefid",4],["hirdatabase",8]],[["vec",3],["incorrectcase",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["displaytarget",4]],[[]],null,[[["hirdatabase",8]],["hirdisplaywrapper",3]],[[["moduleid",3],["hirdatabase",8]],[["result",4],["displaysourcecodeerror",4],["string",3]]],[[["hirdatabase",8]],["hirdisplaywrapper",3]],[[["usize",15],["hirdatabase",8],["option",4]],["hirdisplaywrapper",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["error",3]]],[[]],[[]],[[]],[[["hirformatter",3]],[["result",4],["hirdisplayerror",4]]],[[]],[[]],[[]],[[]],[[]],[[["bool",15],["displaytarget",4],["usize",15],["hirdatabase",8],["option",4]],["hirdisplaywrapper",3]],[[],["bool",15]],[[],["bool",15]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["hirformatter",3],["str",15]],[["result",4],["hirdisplayerror",4]]],[[["arguments",3]],[["result",4],["hirdisplayerror",4]]],[[["str",15]],[["result",4],["hirdisplayerror",4]]],[[["moduleid",3],["hirformatter",3],["visibility",4]],[["result",4],["hirdisplayerror",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["tyfingerprint",4]],[[],["lookupmode",4]],[[]],[[]],[[["ty",6],["crateid",3],["hirdatabase",8]],[["arrayvec",3],["option",4]]],[[["tyfingerprint",4]],["bool",15]],[[["traitimpls",3]],["bool",15]],[[["inherentimpls",3]],["bool",15]],[[["lookupmode",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["ty",6]],[["option",4],["tyfingerprint",4]]],[[["ty",6]]],[[["tyfingerprint",4]]],[[["traitid",3]]],[[["traitid",3],["tyfingerprint",4]]],[[["ty",6]],[["option",4],["tyfingerprint",4]]],[[]],[[]],[[]],[[]],[[]],[[["canonical",6],["crateid",3],["traitenvironment",3],["traitid",3],["arc",3],["hirdatabase",8]],["bool",15]],[[["canonical",6],["crateid",3],["traitenvironment",3],["traitid",3],["arc",3],["hirdatabase",8]],["bool",15]],[[]],[[]],[[]],[[]],[[["hirdatabase",8],["option",4],["name",3],["lookupmode",4],["arc",3],["moduleid",3],["fxhashset",6],["crateid",3],["traitenvironment",3],["option",4],["canonical",6]],["option",4]],[[["tyfingerprint",4]],["bool",15]],[[["traitimpls",3]],["bool",15]],[[["inherentimpls",3]],["bool",15]],[[["hirdatabase",8],["crateid",3],["traitenvironment",3],["traitid",3],["arc",3],["canonical",6]],[["option",4],["canonical",6]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["intty",4]],[[],["uintty",4]],[[],["floatty",4]],[[],["builtinint",4]],[[],["builtinuint",4]],[[],["builtinfloat",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intty",4]],["ordering",4]],[[["uintty",4]],["ordering",4]],[[["floatty",4]],["ordering",4]],[[["builtinint",4]],["ordering",4]],[[["builtinuint",4]],["ordering",4]],[[["builtinfloat",4]],["ordering",4]],[[["intty",4]],["bool",15]],[[["uintty",4]],["bool",15]],[[["floatty",4]],["bool",15]],[[["builtinint",4]],["bool",15]],[[["builtinuint",4]],["bool",15]],[[["builtinfloat",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["floatty",4]],["str",15]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["folder",8],["debruijnindex",3]],[["result",4],["nosolution",3]]],[[["folder",8],["debruijnindex",3]],[["result",4],["nosolution",3]]],[[["folder",8],["debruijnindex",3]],[["nosolution",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],[["option",4],["builtinint",4]]],[[["str",15]],[["option",4],["builtinuint",4]]],[[["str",15]],[["builtinfloat",4],["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intty",4]],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intty",4]],[["option",4],["ordering",4]]],[[["uintty",4]],[["option",4],["ordering",4]]],[[["floatty",4]],[["option",4],["ordering",4]]],[[["builtinint",4]],[["option",4],["ordering",4]]],[[["builtinuint",4]],[["option",4],["ordering",4]]],[[["builtinfloat",4]],[["option",4],["ordering",4]]],[[]],[[]],[[]],[[["debruijnindex",3]]],[[["debruijnindex",3]]],[[["debruijnindex",3]]],[[],[["nosolution",3],["result",4]]],[[],[["nosolution",3],["result",4]]],[[],[["nosolution",3],["result",4]]],[[["debruijnindex",3]],[["nosolution",3],["result",4]]],[[["debruijnindex",3]],[["nosolution",3],["result",4]]],[[["debruijnindex",3]],[["nosolution",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["uintty",4]],["str",15]],[[["visitor",8],["debruijnindex",3]],["controlflow",4]],[[["visitor",8],["debruijnindex",3]],["controlflow",4]],[[["visitor",8],["debruijnindex",3]],["controlflow",4]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["traitenvironment",3]],[[],["fntrait",4]],[[]],[[]],[[["crateid",3]]],null,[[["traitenvironment",3]],["bool",15]],[[["fntrait",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["crateid",3],["hirdatabase",8]],[["option",4],["traitid",3]]],[[]],[[]],[[]],[[]],null,[[["traitenvironment",3]],["bool",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"AdtId"],[3,"FnSubst"],[4,"TyDefId"],[4,"ImplTraitId"],[4,"Scalar"],[4,"InferenceDiagnostic"],[4,"ValueTyDefId"],[4,"ImplTraitLoweringMode"],[4,"CallableDefId"],[4,"TyVariableKind"],[3,"DebruijnIndex"],[4,"Mutability"],[4,"Safety"],[3,"TyBuilder"],[8,"TyExt"],[6,"Ty"],[3,"InferenceResult"],[3,"Interner"],[3,"TyLoweringContext"],[3,"CallableSig"],[3,"ReturnTypeImplTraits"],[3,"BoundVar"],[8,"Cast"],[6,"FnDefId"],[6,"OpaqueTyId"],[6,"GenericArg"],[6,"ProjectionTy"],[6,"OpaqueTy"],[6,"Lifetime"],[6,"LifetimeData"],[6,"LifetimeOutlives"],[6,"Const"],[6,"TraitRef"],[6,"DomainGoal"],[6,"WhereClause"],[8,"TraitRefExt"],[8,"ProjectionTyExt"],[8,"TypeWalk"],[6,"Binders"],[6,"Substitution"],[6,"AliasTy"],[6,"AliasEq"],[13,"NoSuchField"],[13,"BreakOutsideOfLoop"],[8,"ConstExt"],[8,"HirDatabase"],[3,"HirDatabaseGroupStorage__"],[3,"InternedTypeParamId"],[3,"InternedLifetimeParamId"],[3,"InternedConstParamId"],[3,"InternedOpaqueTyId"],[3,"InternedClosureId"],[3,"InternedCallableDefId"],[3,"HirDatabaseStorage"],[3,"InferQueryQuery"],[3,"TyQuery"],[3,"ValueTyQuery"],[3,"ImplSelfTyQuery"],[3,"ConstParamTyQuery"],[3,"ImplTraitQuery"],[3,"FieldTypesQuery"],[3,"CallableItemSignatureQuery"],[3,"ReturnTypeImplTraitsQuery"],[3,"GenericPredicatesForParamQuery"],[3,"GenericPredicatesQuery"],[3,"TraitEnvironmentQuery"],[3,"GenericDefaultsQuery"],[3,"InherentImplsInCrateQuery"],[3,"TraitImplsInCrateQuery"],[3,"TraitImplsInBlockQuery"],[3,"TraitImplsInDepsQuery"],[3,"InternCallableDefQuery"],[3,"InternCallableDefLookupQuery"],[3,"InternTypeParamIdQuery"],[3,"InternTypeParamIdLookupQuery"],[3,"InternLifetimeParamIdQuery"],[3,"InternLifetimeParamIdLookupQuery"],[3,"InternConstParamIdQuery"],[3,"InternConstParamIdLookupQuery"],[3,"InternImplTraitIdQuery"],[3,"InternImplTraitIdLookupQuery"],[3,"InternClosureQuery"],[3,"InternClosureLookupQuery"],[3,"AssociatedTyDataQuery"],[3,"TraitDatumQuery"],[3,"StructDatumQuery"],[3,"ImplDatumQuery"],[3,"FnDefDatumQuery"],[3,"FnDefVarianceQuery"],[3,"AdtVarianceQuery"],[3,"AssociatedTyValueQuery"],[3,"TraitSolveQueryQuery"],[3,"ProgramClausesForChalkEnvQuery"],[4,"IdentType"],[4,"CaseType"],[4,"BodyValidationDiagnostic"],[3,"IncorrectCase"],[13,"MismatchedArgCount"],[13,"RemoveThisSemicolon"],[13,"MissingOkOrSomeInTailExpr"],[13,"MissingMatchArms"],[13,"ReplaceFilterMapNextWithFindMap"],[13,"RecordMissingFields"],[4,"DisplaySourceCodeError"],[4,"DisplayTarget"],[4,"HirDisplayError"],[3,"HirFormatter"],[3,"HirDisplayWrapper"],[8,"HirDisplay"],[13,"SourceCode"],[4,"TyFingerprint"],[4,"LookupMode"],[3,"TraitImpls"],[3,"InherentImpls"],[4,"FloatTy"],[4,"BuiltinFloat"],[4,"IntTy"],[4,"BuiltinInt"],[4,"UintTy"],[4,"BuiltinUint"],[4,"FnTrait"],[3,"TraitEnvironment"]]},\
"ide":{"doc":"ide crate provides “ide-centric” APIs for the …","tn":["0","0","0","0","0","1","All","Analysis","AnalysisHost","Angle","Annotation","AnnotationConfig","AnnotationKind","ArgList","Arithmetic","Array","Assist","AssistConfig","AssistId","AssistKind","AssistResolveStrategy","Associated","Async","Attribute","Attribute","Attribute","Bench","Bin","Binding","Bitwise","Block","BoolLiteral","Brace","Bracket","BuiltinAttr","BuiltinType","BuiltinType","ByteLiteral","CURRENT","CallInfo","CallItem","Callable","Cancellable","Cancelled","ChainingHint","Change","CharLiteral","Colon","Comma","Comment","Comment","Comparison","CompletionConfig","CompletionItem","CompletionItemKind","CompletionRelevance","Const","ConstParam","Consts","Consuming","ControlFlow","CrateGraph","CrateId","CreateFile","Definition","Diagnostic","DiagnosticsConfig","Direction","DocTest","Documentation","Documentation","Dot","Down","Edition","Edition2015","Edition2018","Edition2021","Enum","Error","EscapeSequence","ExpandedMacro","Field","FileId","FilePosition","FileRange","FileSystemEdit","Finished","Fold","FoldKind","FormatSpecifier","Function","Generate","GoToType","HasImpls","HasReferences","Highlight","HighlightRelatedConfig","HighlightedRange","HlMod","HlMods","HlOperator","HlPunct","HlRange","HlTag","HoverAction","HoverConfig","HoverDocFormat","HoverGotoTypeData","HoverResult","Impl","Implementation","ImportEdit","Imports","Indel","Injected","InlayHint","InlayHintsConfig","InlayKind","IntraDocLink","JoinLinesConfig","Keyword","Keyword","Label","Label","Library","LifetimeParam","LineCol","LineColUtf16","LineIndex","Local","Logical","Macro","Markdown","Markup","Method","Mods","Module","MoveFile","Mutable","Name","NavigationTarget","None","None","None","NumericLiteral","Operator","Other","Other","ParameterHint","Parenthesis","Path","PlainText","PrimeCachesProgress","Public","Punctuation","Query","QuickFix","RangeInfo","Read","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Reference","Reference","ReferenceAccess","ReferenceSearchResult","Region","Region","RenameError","ReturnType","RootDatabase","Runnable","Runnable","Runnable","RunnableKind","SearchScope","SelfParam","Semantics","Semi","Severity","Single","SingleResolve","Snippet","SourceChange","SourceRoot","SourceRootId","SsrError","Started","StartedOnCrate","Static","Static","Statics","StringLiteral","Struct","StructureNode","StructureNodeKind","Symbol","SymbolKind","SymbolKind","SymbolKind","Test","TestId","TestMod","TextEdit","TextRange","TextSize","Trait","Trait","TypeAlias","TypeHint","TypeParam","Union","UnresolvedReference","UnresolvedReference","Unsafe","Up","ValueParam","Variant","WeakWarning","WhereClause","Write","access","actions","active_parameter","add","add","add","add","add_assign","add_assign","add_assign","add_call_argument_snippets","add_call_parenthesis","add_crate_root","add_dep","adt_variance","allowed","analysis","ancestors_at_offset_with_macros","ancestors_with_macros","annotate_impls","annotate_method_references","annotate_references","annotate_runnables","annotations","apply","apply","apply","apply_change","apply_change","apply_to_offset","as_str","as_str","assert_contains_node","assist_id","assist_kind","assists","assists_with_fixes","associated_ty_data","associated_ty_value","ast_id_map","at","attrs","binary_target","binding_hash","bitor","bitor","bitor_assign","bitor_assign","block_def_map","body","body_with_source_map","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","break_points","builder","call_hierarchy","call_info","callable_item_signature","case_sensitive","catch","cfg","chaining_hints","change_file","checked_add","checked_add","checked_sub","checked_sub","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","code","col","col","collect_garbage","collect_garbage","completions","const_data","const_param_ty","container_name","contains","contains","contains","contains_inclusive","contains_range","cover","cover_offset","crate_def_map","crate_def_map_query","crate_edition","crate_for","crate_graph","crate_graph","crate_id_for_crate_root","crate_lang_items","crate_root","crates_in_topological_order","db","declaration","default","default","default","default","default","default","default","default","default","default","default","default","default","default","delete","delete","delete","deprecated","deprecated","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descend_into_macros","descend_node_at_offset","description","detail","detail","diagnostics","diagnostics_display_range","disable_experimental","disabled","doc","docs","documentation","documentation","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","empty","empty","enable_imports_on_the_fly","enable_postfix_completions","enable_proc_attr_macros","enable_self_on_the_fly","end","end_bound","enum_data","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exact","exact_name_match","exact_postfix_snippet_match","exit_points","expand","expand_attr_macro","expand_macro","expand_proc_macro","expansion","experimental","expr_scopes","extend","extend","extend_selection","external_docs","fenced_block","field_types","field_visibilities","fields_attrs","fields_attrs_source_map","file_for_path","file_id","file_id","file_id","file_item_tree","file_line_index","file_range","file_source_root","file_structure","file_symbols","file_system_edits","file_text","file_text","file_text","files","files_changed","find_all_methods","find_all_refs","find_node_at_offset_with_descend","find_node_at_offset_with_macros","fixes","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_def_datum","fn_def_variance","focus_or_full_range","focus_range","folding_ranges","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_edits","from_single_file","from_str","from_str","from_text_edit","full_range","function_data","function_visibility","generic_defaults","generic_params","generic_predicates","generic_predicates_for_param","get_source_edit","goto_declaration","goto_definition","goto_implementation","goto_type_definition","group","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","highlight","highlight","highlight_as_html","highlight_range","highlight_related","hover","hygiene_frame","id","impl_data","impl_datum","impl_self_ty","impl_trait","import","import_map","import_to_add","incoming_calls","index","infer","infer_query","info","inherent_impls_in_crate","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inlay_hints","insert","insert","insert","insert_source_edit","insert_use","insert_use","intern_block","intern_callable_def","intern_closure","intern_const","intern_const_param_id","intern_enum","intern_function","intern_impl","intern_impl_trait_id","intern_lifetime_param_id","intern_macro","intern_static","intern_struct","intern_trait","intern_type_alias","intern_type_param_id","intern_union","intersect","intersection","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_attr_macro_call","is_empty","is_empty","is_empty","is_empty","is_library","is_library_file","is_local","is_relevant","is_snippet","is_snippet","is_unsafe_ident_pat","is_unsafe_method_call","is_unsafe_ref_expr","iter","iter","iter","iter","join_else_if","join_lines","kind","kind","kind","kind","kind","kind","kind","label","label","label","label","label","lang_item","len","len","library_roots","library_symbols","libs","limit","line","line","line_col","line_index","lines","links_in_hover","local_roots","lookup","lookup_intern_block","lookup_intern_callable_def","lookup_intern_closure","lookup_intern_const","lookup_intern_const_param_id","lookup_intern_enum","lookup_intern_function","lookup_intern_impl","lookup_intern_impl_trait_id","lookup_intern_lifetime_param_id","lookup_intern_macro","lookup_intern_static","lookup_intern_struct","lookup_intern_trait","lookup_intern_type_alias","lookup_intern_type_param_id","lookup_intern_union","macro_arg","macro_arg_text","macro_def","macro_expand","macro_expand_error","markup","matching_brace","max_length","message","mod_path","mods","move_item","name","name","name","nav","nav","navigation_range","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new","new","new","new_library","new_local","node_range","of","offset","offset","on_char_typed","on_enter","only_types","ordering","original_range","outgoing_calls","parameter_hints","parameter_labels","parameter_ranges","parent","parent_module","parse","parse","parse","parse_macro_expansion","parse_or_expand","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","patch_cfg_if","path_for_file","per_query_memory_usage","per_query_memory_usage","prepare_rename","prime_caches","program_clauses_for_chalk_env","push_file_system_edit","range","range","range","range","range","range","range","range","ranges","raw_database","raw_database_mut","record_literal_missing_fields","record_pattern_missing_fields","ref_match","references","references","related_tests","relevance","relevant_crates","remove_trailing_comma","rename","replace","replace","request_cancellation","request_cancellation","resolve_annotation","resolve_bind_pat_to_const","resolve_completion_edits","resolve_extern_crate","resolve_field","resolve_label","resolve_lifetime_param","resolve_macro_call","resolve_method_call","resolve_method_call_as_callable","resolve_path","resolve_path","resolve_record_field","resolve_record_pat_field","resolve_type","resolve_variant","return_type_impl_traits","roots","runnables","scope","scope","scope_at_offset","scope_for_def","score","set_crate_graph","set_crate_graph","set_crate_graph_with_durability","set_enable_proc_attr_macros","set_enable_proc_attr_macros_with_durability","set_file_source_root","set_file_source_root_with_durability","set_file_text","set_file_text_with_durability","set_library_roots","set_library_roots_with_durability","set_local_roots","set_local_roots_with_durability","set_roots","set_source_root","set_source_root_with_durability","severity","should_resolve","signature","single_file","snapshot","snippet_cap","snippet_cap","source_change","source_file_edits","source_range","source_root","source_root_crates","speculative_expand","start","start_bound","static_data","status","struct_data","struct_datum","structural_search_replace","sub","sub","sub","sub","sub_assign","sub_assign","sum","symbol_search","syntax_tree","tag","target","target","text_edit","title","to_def","to_module_def","to_module_defs","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_text_edit","to_utf16","to_utf8","token_ancestors_with_macros","trait_data","trait_datum","trait_environment","trait_impls_in_block","trait_impls_in_crate","trait_impls_in_deps","trait_solve","trait_solve_query","transitive_deps","transitive_rev_deps","trigger_call_info","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_alias_data","type_hints","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_match","type_of_expr","type_of_pat","type_of_self","union","union_data","unused","unwrap_trivial_blocks","up_to","upcast","upcast","upcast","update_lru_capacity","update_lru_capacity","use_name_in_title","value_ty","variants_attrs","variants_attrs_source_map","view_crate_graph","view_hir","view_item_tree","will_rename_file","yield_points","data","data","position","position","dst","dst","initial_contents","src","n_done","n_total","on_crate","attr","path","test_id","test_id","test_id"],"q":["ideide::AnnotationKind","","","","ide::FileSystemEdit","","","","ide::PrimeCachesProgress","","","ide::RunnableKind","","","",""],"d":["","","","","","","All assists should be resolved.","Analysis is a snapshot of a world state at a moment in …","<code>AnalysisHost</code> stores the current state of the world.","<>","","","","","+, -, *, /, +=, -=, *=, /=","","","","Unique identifier of the assist, should not be shown to …","","A way to control how many asssist to resolve during the …","Used for items in traits and impls.","Used with keywords like <code>async</code> and <code>await</code>.","","Used to differentiate individual elements within …","","","","","|, &, !, ^, |=, &=, ^=","","","{}","[]","","","","","","Contains information about a call site. Specifically the …","","Callable item or value.","","A panic payload indicating that a salsa revision was …","","Encapsulate a bunch of raw <code>.set</code> calls on the database.","",":",",","","",", <, ==, >=, <=, !=","","<code>CompletionItem</code> describes a single completion variant in …","","","","","","Value that is being consumed in a function call","Used with keywords like <code>if</code> and <code>break</code>.","<code>CrateGraph</code> is a bit of information which turns a set of …","","","<code>foo</code> in <code>fn foo(x: i32)</code> is a definition, <code>foo</code> in <code>foo(90 + 2)</code> …","","","","","Holds documentation","Doc-strings like this one.",".","","","","","","","","","","","Handle to a file in [<code>Vfs</code>]","","","","We finished indexing all crates.","","","","","","","","","","","","","","","","","","","","","","Contains the results when hovering over an item","","","An extra import to add after the completion is applied.","","<code>InsertDelete</code> – a single “atomic” change to text","Highlighting injection like rust code in doc strings or …","","","","Used for intra doc links in doc injection.","","","","A type to specify UI label, like an entry in the list of …","","Used for items from other crates.","","","","","","&&, ||, !","","","","","","","","Mutable binding.","","<code>NavigationTarget</code> represents an element in the editor’s …","","","No assists should be resolved.","","","","","","()","","","","Used for public items.","","","","Info associated with a text range.","","","","","","","Immutable reference.","","","","","","","","","","","","Generally, <code>search_scope</code> returns files that might contain …","","Primary API to get semantic information, like types, from …",";","","Only a certain assist should be resolved.","Hold the [<code>AssistId</code>] data of a certain assist to resolve. …","","","","Files are grouped into source roots. A source root is a …","","","We started indexing a crate.","Used for associated functions.","","","","","","","","","","","","","","","A range in text, represented as a pair of [<code>TextSize</code>][…","A measure of text length. Also, equivalently, an index …","Used for items in traits and trait impls.","","","","","","","","Used for unsafe functions, unsafe traits, mutable …","","","","","","","","","","","","","","","","","","","","","","","Returns a snapshot of the current state, which you can …","","","","","","","","","","","Applies changes to the current state of the world. If …","","","","","","The id of the assist.","","Computes assists (aka code actions aka intentions) for …","Convenience function to return assists + quick fixes for …","","","","Create a new <code>TextRange</code> with the given <code>offset</code> and <code>len</code> (…omputes call hierarchy candidates for the given file …","Computes parameter information for the given call …","","","Runs <code>f</code>, and catches any salsa cancellation.","","","","Add an offset to this range.","Checked addition. Returns <code>None</code> if overflow occurred.","Subtract an offset from this range.","Checked subtraction. Returns <code>None</code> if overflow occurred.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Zero-based","Zero-based utf8 offset","","","Computes completions at the given position.","","","","","Check if this range contains an offset.","","Check if this range contains an offset.","Check if this range completely contains another range.","Extends the range to cover <code>other</code> as well.","Extends the range to cover <code>other</code> offsets as well.","","","Returns the edition of the given crate.","Returns crates this file belongs too.","","","","","Returns the root file of the given crate.","Returns all crates in the graph, sorted in topological …","","","","","","","","","","","","","","","","","","","Refers to offsets in the original texthort one-line additional information, like a type","","Computes the set of diagnostics for the given file.","","","","","","A doc-comment","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a zero-length range at the specified offset (…","","","","","","The end point of this range.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is set in cases like these:","This is set in cases like these:","","","If <code>item</code> has an attribute macro attached to it, expands it.","","","","","","Extends this crate graph by adding a complete disjoint …","","Selects the next syntactic nodes encompassing the range.","Return URL(s) for the documentation of the symbol under …","","","","","","","","","","","Gets the file’s <code>LineIndex</code>: data structure to convert …","","","Returns a tree representation of symbols in the file. …","","","Gets the text of the source file.","","","","","Finds all methods and free functions for the file. Does …","Finds all usages of the reference at point.","Find a AstNode by offset inside SyntaxNode, if it is …","Find a AstNode by offset inside SyntaxNode, if it is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A “most interesting” range within the <code>full_range</code>.","Returns the set of folding ranges.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new SourceChange with the given label from the …","","","","","Range which encompasses the whole element.","","","","","","","","Returns the declaration from the symbol at <code>position</code>.","Returns the definitions from the symbol at <code>position</code>.","Returns the impls from the symbol at <code>position</code>.","Returns the type definitions for the symbol at <code>position</code>.","","","","","","","","","","","","","","","","","","","","","","","","Computes syntax highlighting for the given file","","Computes syntax highlighting for the given file.","Computes syntax highlighting for the given file range.","Computes all ranges to highlight for a given item in a …","Returns a short text describing element at position.","","","","","","","","","","Computes incoming calls for the given file position.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a list of the places in the file where type hints …","","","","Inserts a [<code>TextEdit</code>] for the given [<code>FileId</code>]. This …","","","","","","","","","","","","","","","","","","","","The range covered by both ranges, if it exists. If the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check if this range is empty.","","Sysroot or crates.io library.","Returns true if this file belongs to an immutable library.","This is set in cases like these:","Returns true when the score for this threshold is above …","Whether <code>text_edit</code> is a snippet (contains <code>$0</code> markers).","","","","","","","","","","Returns an edit to remove all newlines in the range, …","","","","","","","","","What user sees in pop-up in the UI.","","","Short description of the assist, as shown in the UI.","","The size of this range.","","","","","","Zero-based","Zero-based","","","","","","What string is used for filtering.","","","","","","","","","","","","","","","","","","","","","","","","Returns position of the matching brace (all types of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>TextRange</code> with the given <code>start</code> and <code>end</code> (…","","","","","","","","","The text size of some primitive text-like object.","","","Returns an edit which should be applied after a character …","Returns an edit which should be applied when opening a …","","Relative order of the two ranges (overlapping ranges are …","","Computes outgoing calls for the given file position.","","","","","Returns a <code>mod name;</code> declaration which created the current …","Gets the syntax tree of the file.","","","","","","","","","","","","","","","","","","","","NB: this clears the database","","","","","","","","","","","","","","","","","","","","","","Returns the set of tests for the given file position.","","","","Returns the edit required to rename reference at the …","","","","","","","Resolves additional completion data at the position given.","","","","","","","","","","","","","","","","Returns the set of possible targets to run for the …","","","","","Provides a relevance score. Higher values are more …","","","","","","","","","","","","","","","","","","","","","","","","Computing source change sometimes is much more costly …","","","","","","The start point of this range.","","","Debug info about the current state of the analysis.","","","","","","","","","","","Fuzzy searches for a symbol.","Returns a syntax tree represented as <code>String</code>, for debug …","","","Target ranges are used to sort assists: the smaller the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to insert the import to the given scope, …","","","","","","","","","","","","Returns an iterator over all transitive dependencies of …","Returns all transitive reverse dependencies of the given …ee CompletionRelevanceTypeMatch doc comments for cases …","","","","","","","","Create a range up to the given end (<code>..end</code>).","","","","","","","","","","Renders the crate graph to GraphViz “dot” syntax.","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,3,4,5,4,6,0,0,7,0,0,0,8,9,8,0,0,0,0,0,10,10,11,10,12,13,13,12,9,8,11,7,7,11,11,12,11,14,0,0,10,0,0,15,0,11,7,7,8,11,9,0,0,0,0,16,16,8,10,10,0,0,17,10,0,0,0,13,0,10,7,18,0,14,14,14,16,19,11,0,16,0,0,0,0,20,0,0,11,16,21,22,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,22,0,8,0,10,0,0,0,10,0,11,12,0,16,10,16,0,0,0,16,9,16,24,0,12,8,16,17,10,25,0,11,21,6,11,11,7,9,15,7,25,24,0,10,11,0,21,0,26,21,21,21,21,22,10,0,0,27,8,0,8,0,0,23,22,0,0,16,0,7,0,6,0,12,0,0,0,0,20,20,10,16,8,11,16,0,0,11,0,27,12,13,0,13,0,0,0,10,16,16,15,16,16,11,12,10,18,16,16,19,8,26,28,29,30,31,31,32,32,31,32,32,33,33,34,34,35,36,37,38,38,39,39,39,39,40,41,42,43,37,35,43,44,45,38,46,46,40,40,35,35,35,31,35,39,47,48,11,48,49,35,35,35,39,28,50,51,44,20,52,53,23,54,55,56,27,8,57,58,24,22,59,29,60,15,61,18,62,63,25,13,48,49,11,10,7,9,47,64,37,40,38,1,65,34,2,14,41,66,67,31,32,42,43,3,68,45,69,70,21,4,6,46,71,72,73,74,75,76,17,30,26,5,35,16,36,33,77,78,12,79,80,19,81,82,39,28,50,51,44,20,52,53,23,54,55,56,27,8,57,58,24,22,59,29,60,15,61,18,62,63,25,13,48,49,11,10,7,9,47,64,37,40,38,1,65,34,2,14,41,66,67,31,32,42,43,3,68,45,69,70,21,4,6,46,71,72,73,74,75,76,17,30,26,5,35,16,36,33,77,78,12,79,80,19,81,82,55,43,40,40,35,75,68,63,60,41,31,32,31,32,52,54,55,56,27,58,24,22,59,60,15,18,62,63,25,13,48,49,11,10,7,9,47,1,65,34,2,14,66,67,31,32,42,43,3,45,70,21,4,71,72,73,74,76,17,26,16,36,33,77,78,12,79,19,81,52,54,55,56,27,58,24,22,59,60,15,18,62,63,25,13,48,49,11,10,7,9,47,1,65,34,2,14,66,67,31,32,42,43,3,45,70,21,4,71,72,73,74,76,17,26,16,36,33,77,78,12,79,19,81,27,48,49,11,10,7,9,1,2,14,32,3,16,80,73,74,37,35,40,35,35,52,49,31,21,31,31,31,31,35,35,40,40,35,41,34,35,40,34,38,62,44,55,29,49,37,34,41,31,32,43,76,35,78,81,42,43,42,77,56,39,28,50,51,44,20,52,53,23,54,55,56,27,8,57,58,24,22,59,29,60,15,61,18,62,63,25,13,48,49,11,10,7,9,47,64,37,40,38,1,65,34,2,14,41,66,67,31,32,42,43,3,68,45,69,70,21,4,6,46,71,72,73,74,75,76,17,30,26,5,35,16,36,33,77,78,12,79,80,19,81,82,39,28,50,51,44,20,52,53,23,54,55,56,27,8,57,58,24,22,59,29,60,15,61,18,62,63,25,13,48,49,11,10,7,9,47,64,37,40,38,1,65,34,2,14,41,66,67,31,32,42,43,3,68,45,69,70,21,4,6,46,71,72,73,74,75,76,17,30,26,5,35,16,36,33,77,78,12,79,80,19,81,82,38,38,52,77,56,40,38,81,81,30,52,77,58,39,28,50,51,44,20,52,53,23,54,55,56,27,8,57,58,24,22,59,29,60,15,61,18,62,63,25,13,48,49,11,10,7,9,47,64,37,40,38,1,65,34,2,14,41,66,67,31,32,42,43,3,68,45,69,70,21,4,6,46,71,72,73,74,75,76,17,30,26,5,35,16,36,33,77,78,12,79,80,19,81,82,31,69,33,33,35,33,31,31,35,52,27,8,58,24,59,60,15,63,25,13,48,49,11,10,7,9,1,65,2,14,67,31,32,3,45,21,4,71,71,72,73,74,26,16,36,33,78,12,82,52,27,8,58,24,59,60,15,63,25,13,48,49,11,10,7,9,1,65,2,14,67,31,32,3,45,21,4,72,73,74,16,36,33,78,12,75,78,78,55,38,38,40,35,50,80,35,34,76,40,40,44,35,35,35,35,65,52,66,67,35,40,69,35,40,35,76,40,35,35,69,41,40,40,38,38,80,44,44,20,52,53,23,54,56,27,8,57,58,24,22,59,29,60,15,61,18,62,63,25,25,13,48,48,49,11,11,10,10,7,9,47,64,37,40,38,1,65,34,2,14,14,41,66,67,31,32,42,43,3,68,68,45,70,21,4,6,46,71,71,72,73,74,75,76,17,30,26,5,5,35,16,36,33,77,78,12,79,80,19,81,82,82,35,35,52,52,40,39,28,50,51,44,44,20,52,53,23,54,55,56,27,8,57,58,24,22,59,29,60,15,61,18,62,63,25,13,48,48,48,48,48,49,11,10,7,9,47,64,37,40,38,1,65,34,2,2,14,41,66,67,31,31,32,32,42,43,3,68,45,69,70,21,4,6,46,71,72,73,74,75,76,76,76,17,30,26,5,35,16,36,33,77,78,12,12,79,80,19,81,82,76,40,14,21,76,52,35,35,35,35,35,35,76,40,40,40,40,70,52,27,63,25,13,48,49,11,10,7,9,1,2,14,67,31,32,3,45,73,74,16,40,47,40,40,40,40,35,70,35,35,35,35,79,35,77,40,34,35,35,64,35,39,28,50,51,44,20,52,53,23,54,55,56,27,8,57,58,24,22,59,29,60,15,61,18,62,63,25,13,48,49,11,10,7,9,47,64,37,40,38,1,65,34,2,14,41,66,67,31,32,42,43,3,68,45,69,70,21,4,6,46,71,72,73,74,75,76,17,30,26,5,35,16,36,33,77,78,12,79,80,19,81,82,40,42,43,42,76,36,33,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,31,69,39,28,50,51,44,20,52,53,23,54,55,56,27,8,57,58,24,22,59,29,60,15,61,18,62,63,25,13,48,49,11,10,7,9,47,64,37,40,38,1,65,34,2,14,41,66,67,31,32,42,43,3,68,45,69,70,21,4,6,46,71,72,73,74,75,76,17,30,26,5,35,16,36,33,77,78,12,79,80,19,81,82,43,69,38,48,34,31,43,65,40,78,78,77,76,38,38,38,49,65,34,43,51,40,77,52,53,56,57,61,63,63,77,56,61,70,35,31,43,35,35,75,75,73,74,72,35,72,58,35,77,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,29,40,60,80,59,48,40,21,50,52,59,63,56,52,27,58,59,60,63,25,13,48,49,11,1,65,2,67,31,32,3,45,4,72,73,74,36,33,78,12,82,64,37,38,41,31,45,71,72,75,35,65,65,56,32,72,66,40,40,75,31,38,40,60,30,30,56,40,40,38,35,35,35,27,48,49,11,10,7,9,1,2,14,32,3,16,34,65,37,35,40,40,35,76,28,53,57,61,47,64,67,80,54,37,37,38,38,77,55,62,40,77,35,51,40,42,43,37,35,40,38,40,38,38,38,38,38,38,38,38,35,38,38,38,38,35,41,40,38,79,38,38,78,41,35,35,35,35,35,35,35,35,35,35,35,35,41,35,35,80,6,30,69,35,36,33,70,76,77,35,35,38,31,31,35,40,35,35,40,31,31,32,32,31,32,32,40,40,48,54,70,77,63,38,38,38,52,54,55,56,27,58,24,22,59,60,15,18,62,63,25,13,48,49,11,10,7,9,47,1,65,34,2,14,66,67,31,32,42,43,3,45,70,21,4,71,72,73,74,76,17,26,16,36,33,77,78,12,79,19,81,44,25,48,11,10,14,68,71,5,82,79,72,72,38,35,35,35,35,35,35,35,35,34,34,77,39,28,50,51,44,20,52,53,23,54,55,56,27,8,57,58,24,22,59,29,60,15,61,18,62,63,25,13,48,49,11,10,7,9,47,64,37,40,38,1,65,34,2,14,41,66,67,31,32,32,42,43,3,68,45,69,70,21,4,6,46,71,72,73,74,75,76,17,30,26,5,35,16,36,33,77,78,12,79,80,19,81,82,39,28,50,51,44,20,52,53,23,54,55,56,27,8,57,58,24,22,59,29,60,15,61,18,62,63,25,13,48,49,11,10,7,9,47,64,37,40,38,1,65,34,2,14,41,66,67,31,32,42,43,3,68,45,69,70,21,4,6,46,71,72,73,74,75,76,17,30,26,5,35,16,36,33,77,78,12,79,80,19,81,82,35,35,60,39,28,50,51,44,20,52,53,23,54,55,56,27,8,57,58,24,22,59,29,60,15,61,18,62,63,25,13,48,49,11,10,7,9,47,64,37,40,38,1,65,34,2,14,41,66,67,31,32,42,43,3,68,45,69,70,21,4,6,46,71,72,73,74,75,76,17,30,26,5,35,16,36,33,77,78,12,79,80,19,81,82,78,38,38,38,43,35,80,51,31,35,35,35,37,35,63,35,35,35,40,40,40,40,55,83,84,83,84,85,86,85,86,87,87,87,88,89,88,90,91],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textsize",3]],[[["textsize",3]],["textsize",3]],[[]],[[["textsize",3],["delta",4]]],[[]],null,null,[[["edition",4],["vec",3],["option",4],["cratedisplayname",3],["global",3],["procmacro",3],["fileid",3],["env",3],["cfgoptions",3]],["crateid",3]],[[["crateid",3],["cratename",3]],[["cyclicdependencieserror",3],["result",4]]],[[["adtid",3],["interner",3]],[["interner",3],["variances",3]]],null,[[],["analysis",3]],[[["textsize",3],["syntaxnode",3]]],[[["rustlanguage",4],["syntaxnode",3]]],null,null,null,null,[[["annotationconfig",3],["fileid",3]],[["cancellable",6],["vec",3]]],[[["sourcedatabaseext",8]]],[[["string",3]]],[[["string",3]]],[[["change",3]]],[[["change",3]]],[[["textsize",3]],[["option",4],["textsize",3]]],[[],["str",15]],[[],["str",15]],[[["syntaxnode",3]]],null,null,[[["assistresolvestrategy",4],["filerange",3],["assistconfig",3]],[["cancellable",6],["vec",3]]],[[["diagnosticsconfig",3],["filerange",3],["assistresolvestrategy",4],["assistconfig",3]],[["cancellable",6],["vec",3]]],[[["interner",3],["assoctypeid",3]],[["arc",3],["associatedtydatum",3]]],[[["crateid",3],["interner",3],["associatedtyvalueid",3]],[["associatedtyvalue",3],["arc",3]]],[[["hirfileid",3]],[["arc",3],["astidmap",3]]],[[["textsize",3]],["textrange",3]],[[["attrdefid",4]],["attrswithowner",3]],null,null,[[["hlmod",4]],["highlight",3]],[[["hlmod",4]],["highlight",3]],[[["hlmod",4]]],[[["hlmod",4]]],[[["blockid",3]],[["arc",3],["option",4]]],[[["defwithbodyid",4]],[["arc",3],["body",3]]],[[["defwithbodyidnull,[[],["texteditbuilder",3]],[[["fileposition",3]],[["option",4],["cancellable",6]]],[[["fileposition",3]],[["cancellable",6],["option",4]]],[[["callabledefid",4]],[["binders",3],["callablesig",3]]],[[]],[[],[["result",4],["cancelled",3]]],null,null,[[["option",4],["fileid",3],["arc",3]]],[[["textsize",3]],[["option",4],["textrange",3]]],[[["textsize",3]],[["option",4],["textsize",3]]],[[["textsize",3]],[["option",4],["textrange",3]]],[[["textsize",3]],[["option",4],["textsize",3]]],[[],["navigationtarget",3]],[[],["callitem",3]],[[],["highlightrelatedconfig",3]],[[],["structurenode",3]],[[],["structurenodekind",4]],[[],["hoverconfig",3]],[[],["hoverdocformat",4]],[[],["hoveraction",4]],[[],["hovergototypedata",3]],[[],["inlayhintsconfig",3]],[[],["inlaykind",4]],[[],["direction",4]],[[],["referencesearchresult",3]],[[],["runnable",3]],[[],["testid",4]],[[],["runnablekind",4]],[[],["highlight",3]],[[],["hlmods",3]],[[],["hltag",4]],[[],["hlmod",4]],[[],["hlpunct",4]],[[],["hloperator",4]],[[],["hlrange",3]],[[],["sourcerootid",3]],[[],["sourceroot",3]],[[],["crategraph",3]],[[],["crateid",3]],[[],["edition",4]],[[],["fileposition",3]],[[],["filerange",3]],[[],["textrange",3]],[[],["textsize",3]],[[],["indel",3]],[[],["textedit",3]],[[],["fileid",3]],[[],["documentation",3]],[[],["assist",3]],[[],["assistkind",4]],[[],["assistid",3]],[[],["label",3]],[[],["lineindex",3]],[[],["linecolutf16",3]],[[],["linecol",3]],[[],["sourcechange",3]],[[],["filesystemedit",4]],[[],["referenceaccess",4]],[[],["symbolkind",4]],[[],["assistconfig",3]],[[],["completionconfig",3]],[[],["completionitem",3]],[[],["completionrelevance",3]],[[],["completionitemkind",4]],[[],["importedit",3]],[[],["severity",4]],[[],["diagnosticsconfig",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["structurenodekind",4]],["ordering",4]],[[["highlight",3]],["ordering",4]],[[["hlmods",3]],["ordering",4]],[[["hltag",4]],["ordering",4]],[[["hlmod",4]],["ordering",4]],[[["hlpunct",4]],["ordering",4]],[[["hloperator",4]],["ordering",4]],[[["sourcerootid",3]],["ordering",4]],[[["crateid",3]],["ordering",4]],[[["edition",4]],["ordering",4]],[[["textsize",3]],["ordering",4]],[[["fileid",3]],["ordering",4]],[[["symbolkind",4]],["ordering",4]],null,null,null,[[]],[[]],[[["fileposition",3],["completionconfig",3]],[["option",4],["cancellable",6]]],[[["constid",3]],[["arc",3],["constdata",3]]],[[["constparamid",3]],[["interner",3],["ty",3]]],null,[[["hlmod",4]],["bool",15]],[[["textsize",3]],["bool",15]],[[["assistkind",4]],["bool",15]],[[["textsize",3]],["bool",15]],[[["textrange",3]],["bool",15]],[[["textrange",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["crateid",3]],[["arc",3],["defmap",3]]],[[["crateid",3]],[["arc",3],["defmap",3]]],[[["crateid",3]],[["edition",4],["cancellable",6]]],[[["fileid",3]],[["vec",3],["cancellable",6]]],[[],[["arc",3],["crategraph",3]]],null,[[["fileid",3]],[["option",4],["crateid",3]]],[[["crateid",3]],[["langitems",3],["arc",3]]],[[["crateid",3]],[["cancellable",6],["fileid",3]]],[[],[["crateid",3],["global",3],["vec",3]]],null,null,[[],["markup",3]],[[],["highlightrelatedconfig",3]],[[],["hoverresult",3]],[[],["hlmods",3]],[[],["analysishost",3]],[[],["crategraph",3]],[[],["change",3]],[[],["textrange",3]],[[],["textsize",3]],[[],["textedit",3]],[[],["sourcechange",3]],[[],["rootdatabase",3]],[[],["completionrelevance",3]],[[],["diagnosticsconfig",3]],[[["textrange",3]],["indel",3]],[[["textrange",3]],["textedit",3]],null,[[],["bool",15]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["syntaxtoken",3],["rustlanguage",4]],[["syntaxtoken",3],["rustlanguage",4]]],[[["textsize",3],["syntaxnode",3]],["option",4]],null,[[],[["option",4],["str",15]]],null,[[["diagnosticsconfig",3],["assistresolvestrategy",4],["fileid",3]],[["cancellable",6],["vec",3]]],[[["infile",3],["syntaxnodeptr",3]],["filerange",3]],null,null,null,null,[[],[["option",4],["documentation",3]]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["textsize",3]],["textrange",3]],[[],["searchscope",3]],null,null,[[],["bool",15]],null,[[],["textsize",3]],[[],[["bound",4],["textsize",3]]],[[["enumid",3]],[["enumdata",3],["arc",3]]],[[["navigationtarget",3]],["bool",15]],[[["structurenodekind",4]],["bool",15]],[[["foldkind",4]],["bool",15]],[[["hoverconfig",3]],["bool",15]],[[["hoverdocformat",4]],["bool",15]],[[["hovergototypedata",3]],["bool",15]],[[["inlayhintsconfig",3]],["bool",15]],[[["inlaykind",4]],["bool",15]],[[["runnable",3]],["bool",15]],[[["testid",4]],["bool",15]],[[["runnablekind",4]],["bool",15]],[[["highlight",3]],["bool",15]],[[["hlmods",3]],["bool",15]],[[["hltag",4]],["bool",15]],[[["hlmod",4]],["bool",15]],[[["hlpunct",4]],["bool",15]],[[["hloperator",4]],["bool",15]],[[["sourcerootid",3]],["bool",15]],[[["sourceroot",3]],["bool",15]],[[["crateid",3]],["bool",15]],[[["edition",4]],["bool",15]],[[["filerange",3]],["bool",15]],[[["textrange",3]],["bool",15]],[[["textsize",3]],["bool",15]],[[["fileid",3]],["bool",15]],[[["documentation",3]],["bool",15]],[[["assistkind",4]],["bool",15]],[[["assistid",3]],["bool",15]],[[],["bool",15]],[[["str",15]],["bool",15]],[[["lineindex",3]],["bool",15]],[[["linecolutf16",3]],["bool",15]],[[["linecol",3]],["bool",15]],[[["referenceaccess",4]],["bool",15]],[[["symbolkind",4]],["bool",15]],[[["assistconfig",3]],["bool",15]],[[["completionconfig",3]],["bool",15]],[[["completionrelevance",3]],["bool",15]],[[["completionitemkind",4]],["bool",15]],[[["ssrerror",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],null,null,null,[[["macrocall",3]],[["syntaxnode",3],["option",4]]],[[["item",4]],[["syntaxnode",3],["option",4]]],[[["fileposition",3]],[["option",4],["cancellable",6]]],[[["macrocallid",3]],[["result",4],["subtree",3],["expanderror",4]]],null,null,[[["defwithbodyid",4]],[["arc",3],["exprscopes",3]]],[[["crategraph",3]],["u32",15]],[[]],[[["filerange",3]],[["textrange",3],["cancellable",6]]],[[["fileposition",3]],[["option",4],["cancellable",6]]],[[],["markup",3]],[[["variantid",4]],[["arc",3],["arenamap",3]]],[[["variantid",4]],[["arc",3],["arenamap",3]]],[[["variantid",4]],[["arc",3],["arenamap",3]]],[[["variantid",4]],[["arc",3],["arenamap",3]]],[[["vfspath",3]],[["fileid",3],["option",4]]],null,null,null,[[["hirfileid",3]],[["arc",3],["itemtree",3]]],[[["fileid",3]],[["arc",3],["cancellable",6]]],[[["filerange",3]],["searchscope",3]],[[["fileid",3]],["sourcerootid",3]],[[["fileid",3]],[["cancellable",6],["vec",3]]],[[["fileid",3]],[["symbolindex",3],["arc",3]]],null,[[["fileid",3]],[["cancellable",6],["arc",3]]],[[["fileid",3]],[["string",3],["arc",3]]],[[["fileid",3]],[["string",3],["arc",3]]],[[],["searchscope",3]],null,[[["fileid",3]],[["vec",3],["cancellable",6]]],[[["fileposition",3],["option",4],["searchscope",3]],[["cancellable",6],["option",4]]],[[["textsize",3],["syntaxnode",3]],["option",4]],[[["textsize",3],["syntaxnode",3]],["option",4]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["crateid",3],["fndefid",3],["interner",3]],[["fndefdatum",3],["arc",3]]],[[["fndefid",3],["interner",3]],[["interner",3],["variances",3]]],[[],["textrange",3]],null,[[["fileid",3]],[["cancellable",6],["vec",3]]],[[]],[[]],[[]],[[]],[[]],[[["string",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["hloperator",4]],["highlight",3]],[[["hlpunct",4]],["highlight",3]],[[["symbolkind",4]],["highlight",3]],[[["hltag",4]],["highlight",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["crate",3]],["crateid",3]],[[]],[[]],[[]],[[]],[[]],[[["rangeoroffset",4]],["textrange",3]],[[]],[[]],[[["u32",15]],["textsize",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["filesystemedit",4]],["sourcechange",3]],[[["buildhasherdefault",3],["hashmap",3],["fileid",3],["textedit",3]],["sourcechange",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["symbolkind",4]],["completionitemkind",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["buildhasherdefault",3],["hashmap",3],["fileid",3],["global",3],["vec",3],["textedit",3],["filesystemedit",4]],["sourcechange",3]],[[["string",3]]],[[["str",15]],[["edition",4],["result",4]]],[[["str",15]],[["result",4],["assistkind",4]]],[[["textedit",3],["fileid",3]],["sourcechange",3]],null,[[["functionid",3]],[["arc",3],["functiondata",3]]],[[["functionid",3]],["visibility",4]],[[["genericdefid",4]],["arc",3]],[[["genericdefid",4]],[["genericparams",3],["interned",3]]],[[["genericdefid",4]],["arc",3]],[[["typeparamid",3]],["arc",3]],[[["fileid",3]],[["textedit",3],["option",4]]],[[["fileposition",3]],[["option",4],["cancellable",6]]],[[["fileposition",3]],[["option",4],["cancellable",6]]],[[["fileposition",3]],[["option",4],["cancellable",6]]],[[["fileposition",3]],[["option",4],["cancellable",6]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["fileid",3]],[["cancellable",6],["vec",3]]],null,[[["bool",15],["fileid",3]],[["string",3],["cancellable",6]]],[[["filerange",3]],[["cancellable",6],["vec",3]]],[[["highlightrelatedconfig",3],["fileposition",3]],[["option",4],["cancellable",6]]],[[["filerange",3],["hoverconfig",3]],[["option",4],["cancellable",6]]],[[["hirfileid",3]],[["hygieneframe",3],["arc",3]]],null,[[["implid",3]],[["arc",3],["impldata",3]]],[[["crateid",3],["interner",3],["implid",3]],[["arc",3],["impldatum",3]]],[[["implid",3]],[["binders",3],["ty",3]]],[[["implid",3]],[["option",4],["binders",3]]],null,[[["crateid",3]],[["arc",3],["importmap",3]]],[[],[["importedit",3],["option",4]]],[[["fileposition",3]],[["cancellable",6],["option",4]]],[[["crateid",3]],["cratedata",3]],[[["defwithbodyid",4]],[["inferenceresult",3],["arc",3]]],[[["defwithbodyid",4]],[["inferenceresult",3],["arc",3]]],null,[[["crateid",3]],[["inherentimpls",3],["arc",3]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["inlayhintsconfig",3],["fileid",3]],[["vec",3],["cancellable",6]]],[[["textsize",3],["string",3]],["indel",3]],[[["textsize",3],["string",3]],["textedit",3]],null,[[["textedit",3],["fileid",3]]],null,null,[[["blockloc",3]],["blockid",3]],[[["callabledefid",4]],["internedcallabledefid",3]],[[],["internedclosureid",3]],[[["associtemloc",3],["const",3]],["constid",3]],[[["constparamid",3]],["internedconstparamid",3]],[[["enum",3],["itemloc",3]],["enumid",3]],[[["associtemloc",3],["function",3]],["functionid",3]],[[["itemloc",3],["impl",3]],["implid",3]],[[["impltraitid",4]],["internedopaquetyid",3]],[[["lifetimeparamid",3]],["internedlifetimeparamid",3]],[[["macrocallloc",3]],["macrocallid",3]],[[["static",3],["itemloc",3]],["staticid",3]],[[["struct",3],["itemloc",3]],["structid",3]],[[["itemloc",3],["trait",3]],["traitid",3]],[[["typealias",3],["associtemloc",3]],["typealiasid",3]],[[["typeparamid",3]],["internedtypeparamid",3]],[[["union",3],["itemloc",3]],["unionid",3]],[[["textrange",3]],[["option",4],["textrange",3]]],[[["searchscope",3]],["searchscope",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["item",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[["fileid",3]],[["cancellable",6],["bool",15]]],null,[[],["bool",15]],[[],["bool",15]],null,[[["identpat",3]],["bool",15]],[[["methodcallexpr",3]],["bool",15]],[[["refexpr",3]],["bool",15]],[[]],[[]],[[]],[[],[["iter",3],["indel",3]]],null,[[["joinlinesconfig",3],["filerange",3]],[["cancellable",6],["textedit",3]]],[[],[["option",4],["completionitemkind",4]]],null,null,null,null,null,null,[[["option",4],["string",3]],["string",3]],[[],["str",15]],null,null,null,[[["crateid",3],["smolstr",3]],[["option",4],["langitemtarget",4]]],[[],["textsize",3]],[[],["usize",15]],[[],[["arc",3],["hashset",3]]],[[],[["arc",3],["hashmap",3]]],[[]],[[["usize",15]]],null,null,[[["textsize",3]],["linecol",3]],[[["fileid",3]],[["lineindex",3],["arc",3]]],[[["textrange",3]]],null,[[],[["arc",3],["hashset",3]]],[[],["str",15]],[[["blockid",3]],["blockloc",3]],[[["internedcallabledefid",3]],["callabledefid",4]],[[["internedclosureid",3]]],[[["constid",3]],[["associtemloc",3],["const",3]]],[[["internedconstparamid",3]],["constparamid",3]],[[["enumid",3]],[["enum",3],["itemloc",3]]],[[["functionid",3]],[["associtemloc",3],["function",3]]],[[["implid",3]],[["itemloc",3],["impl",3]]],[[["internedopaquetyid",3]],["impltraitid",4]],[[["internedlifetimeparamid",3]],["lifetimeparamid",3]],[[["macrocallid",3]],["macrocallloc",3]],[[["staticid",3]],[["static",3],["itemloc",3]]],[[["structid",3]],[["struct",3],["itemloc",3]]],[[["traitid",3]],[["itemloc",3],["trait",3]]],[[["typealiasid",3]],[["typealias",3],["associtemloc",3]]],[[["internedtypeparamid",3]],["typeparamid",3]],[[["unionid",3]],[["union",3],["itemloc",3]]],[[["macrocallid",3]],[["option",4],["arc",3]]],[[["macrocallid",3]],[["greennode",3],["option",4]]],[[["macrodefid",3]],[["option",4],["arc",3]]],[[["macrocallid",3]],[["option",4],["expandresult",3]]],[[["macrocallid",3]],[["option",4],["expanderror",4]]],null,[[["fileposition",3]],[["cancellable",6],["option",4]]],null,null,null,null,[[["filerange",3],["direction",4]],[["option",4],["cancellable",6]]],[[],["str",15]],null,null,null,null,null,[[["navigationtarget",3]],["bool",15]],[[["structurenodekind",4]],["bool",15]],[[["hoverconfig",3]],["bool",15]],[[["hovergototypedata",3]],["bool",15]],[[["inlayhintsconfig",3]],["bool",15]],[[["runnable",3]],["bool",15]],[[["testid",4]],["bool",15]],[[["runnablekind",4]],["bool",15]],[[["highlight",3]],["bool",15]],[[["hlmods",3]],["bool",15]],[[["hltag",4]],["bool",15]],[[["sourcerootid",3]],["bool",15]],[[["sourceroot",3]],["bool",15]],[[["crateid",3]],["bool",15]],[[["filerange",3]],["bool",15]],[[["textrange",3]],["bool",15]],[[["textsize",3]],["bool",15]],[[["fileid",3]],["bool",15]],[[["documentation",3]],["bool",15]],[[["assistid",3]],["bool",15]],[[["lineindex",3]],["bool",15]],[[["linecolutf16",3]],["bool",15]],[[["linecol",3]],["bool",15]],[[["assistconfig",3]],["bool",15]],[[["completionconfig",3]],["bool",15]],[[["completionrelevance",3]],["bool",15]],[[["completionitemkind",4]],["bool",15]],[[["ssrerror",3]],["bool",15]],[[["textrange",3]],["rangeinfo",3]],[[["usize",15],["option",4]],["analysishost",3]],[[],["semantics",3]],[[],["change",3]],[[["textsize",3]],["textrange",3]],[[["string",3]],["documentation",3]],[[],["label",3]],[[["str",15]],["lineindex",3]],[[["string",3]],["query",3]],[[["usize",15],["option",4]],["rootdatabase",3]],[[["fileset",3]],["sourceroot",3]],[[["fileset",3]],["sourceroot",3]],null,[[],["textsize",3]],[[["linecol",3]],["textsize",3]],null,[[["fileposition",3],["char",15]],[["option",4],["cancellable",6]]],[[["fileposition",3]],[["option",4],["cancellable",6]]],[[]],[[["textrange",3]],["ordering",4]],[[["syntaxnode",3]],["filerange",3]],[[["fileposition",3]],[["cancellable",6],["option",4]]],null,[[]],[[]],null,[[["fileposition",3]],[["vec",3],["cancellable",6]]],[[["fileid",3]],[["sourcefile",3],["cancellable",6]]],[[["fileid",3]],["sourcefile",3]],[[["fileid",3]],[["parse",3],["sourcefile",3]]],[[["macrofile",3]],[["option",4],["expandresult",3]]],[[["hirfileid",3]],[["syntaxnode",3],["option",4]]],[[["structurenodekind",4]],[["option",4],["ordering",4]]],[[["highlight",3]],[["option",4],["ordering",4]]],[[["hlmods",3]],[["option",4],["ordering",4]]],[[["hltag",4]],[["option",4],["ordering",4]]],[[["hlmod",4]],[["option",4],["ordering",4]]],[[["hlpunct",4]],[["option",4],["ordering",4]]],[[["hloperator",4]],[["option",4],["ordering",4]]],[[["sourcerootid",3]],[["option",4],["ordering",4]]],[[["crateid",3]],[["option",4],["ordering",4]]],[[["edition",4]],[["option",4],["ordering",4]]],[[["textsize",3]],[["option",4],["ordering",4]]],[[["fileid",3]],[["option",4],["ordering",4]]],[[["symbolkind",4]],[["option",4],["ordering",4]]],[[],["bool",15]],[[["fileid",3]],[["vfspath",3],["option",4]]],[[],["vec",3]],[[],[["global",3],["vec",3]]],[[["fileposition",3]],[["cancellable",6],["result",4]]],[[],["cancellable",6]],[[["crateid",3],["interner",3],["environment",3]],[["interner",3],["programclauses",3]]],[[["filesystemedit",4]]],null,null,null,null,null,null,null,null,null,[[],["rootdatabase",3]],[[],["rootdatabase",3]],[[["recordexpr",3]],[["global",3],["vec",3]]],[[["recordpat",3]],[["global",3],["vec",3]]],[[],["option",4]],null,null,[[["fileposition",3],["option",4],["searchscope",3]],[["cancellable",6],["vec",3]]],[[],["completionrelevance",3]],[[["fileid",3]],[["arc",3],["hashset",3]]],null,[[["fileposition",3],["str",15]],[["cancellable",6],["result",4]]],[[["string",3],["textrange",3]],["indel",3]],[[["string",3],["textrange",3]],["textedit",3]],[[]],[[]],[[["annotation",3]],[["cancellable",6],["annotation",3]]],[[["identpat",3]],[["moduledef",4],["option",4]]],[[["fileposition",3],["str",15],["completionconfig",3],["string",3]],[["cancellable",6],["vec",3]]],[[["externcrate",3]],[["option",4],["crate",3]]],[[["fieldexpr",3]],[["field",3],["option",4]]],[[["lifetime",3]],[["option",4],["label",3]]],[[["lifetime",3]],[["option",4],["lifetimeparam",3]]],[[["macrocall",3]],[["option",4],["macrodef",3]]],[[["methodcallexpr",3]],[["function",3],["option",4]]],[[["methodcallexpr",3]],[["callable",3],["option",4]]],[[["path",3]],[["pathresolution",4],["option",4]]],[[["anchoredpath",3]],[["fileid",3],["option",4]]],[[["recordexprfield",3]],["option",4]],[[["recordpatfield",3]],[["field",3],["option",4]]],[[["type",4]],[["option",4],["type",3]]],[[["recordexpr",3]],[["variantdef",4],["option",4]]],[[["functionid",3]],[["option",4],["arc",3]]],null,[[["fileid",3]],[["cancellable",6],["vec",3]]],[[["syntaxnode",3]],["semanticsscope",3]],null,[[["textsize",3],["syntaxtoken",3]],["semanticsscope",3]],[[["trait",3]],["semanticsscope",3]],[[],["u32",15]],[[["crategraph",3]]],[[["arc",3],["crategraph",3]]],[[["arc",3],["durability",3],["crategraph",3]]],[[["bool",15]]],[[["bool",15],["durability",3]]],[[["sourcerootid",3],["fileid",3]]],[[["sourcerootid",3],["fileid",3],["durability",3]]],[[["arc",3],["fileid",3],["string",3]]],[[["durability",3],["fileid",3],["string",3],["arc",3]]],[[["arc",3],["hashset",3]]],[[["durability",3],["arc",3],["hashset",3]]],[[["arc",3],["hashset",3]]],[[["durability",3],["arc",3],["hashset",3]]],[[["global",3],["vec",3],["sourceroot",3]]],[[["sourcerootid",3],["arc",3],["sourceroot",3]]],[[["durability",3],["sourcerootid",3],["arc",3],["sourceroot",3]]],null,[[["assistid",3]],["bool",15]],null,[[["fileid",3]],["searchscope",3]],[[],[["rootdatabase",3],["snapshot",3]]],null,null,null,null,[[],["textrange",3]],[[["sourcerootid",3]],[["arc",3],["sourceroot",3]]],[[["sourcerootid",3]],[["arc",3],["hashset",3]]],[[["macrocall",3],["tokentree",3],["rustlanguage",4],["syntaxtoken",3]],["option",4]],[[],["textsize",3]],[[],[["bound",4],["textsize",3]]],[[["staticid",3]],[["staticdata",3],["arc",3]]],[[["option",4],["fileid",3]],[["string",3],["cancellable",6]]],[[["structid",3]],[["structdata",3],["arc",3]]],[[["crateid",3],["adtid",3],["interner",3]],[["arc",3],["adtdatum",3]]],[[["fileposition",3],["bool",15],["str",15],["filerange",3],["vec",3]],[["cancellable",6],["result",4]]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textsize",3]],[[["textsize",3]],["textsize",3]],[[]],[[]],[[],["textsize",3]],[[["query",3]],[["vec",3],["cancellable",6]]],[[["textrange",3],["fileid",3],["option",4]],[["string",3],["cancellable",6]]],null,null,null,[[],["textedit",3]],[[],["string",3]],[[],["option",4]],[[["fileid",3]],[["module",3],["option",4]]],[[["fileid",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[["insertuseconfig",3]],[["textedit",3],["option",4]]],[[["linecol",3]],["linecolutf16",3]],[[["linecolutf16",3]],["linecol",3]],[[["syntaxtoken",3],["rustlanguage",4]]],[[["traitid",3]],[["arc",3],["traitdata",3]]],[[["crateid",3],["traitid",3],["interner",3]],[["traitdatum",3],["arc",3]]],[[["genericdefid",4]],[["arc",3],["traitenvironment",3]]],[[["blockid",3]],[["arc",3],["option",4]]],[[["crateid",3]],[["traitimpls",3],["arc",3]]],[[["crateid",3]],[["traitimpls",3],["arc",3]]],[[["crateid",3],["canonical",3],["inenvironment",3]],[["solution",4],["option",4]]],[[["crateid",3],["canonical",3],["inenvironment",3]],[["solution",4],["option",4]]],[[["crateid",3]]],[[["crateid",3]]],[[],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]],[["result",4],["textsize",3],["tryfrominterror",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["tydefid",4]],[["binders",3],["ty",3]]],[[["typealiasid",3]],[["arc",3],["typealiasdata",3]]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["expr",4]],[["option",4],["typeinfo",3]]],[[["pat",4]],[["option",4],["typeinfo",3]]],[[["selfparam",3]],[["option",4],["type",3]]],[[["textedit",3]],[["textedit",3],["result",4]]],[[["unionid",3]],[["structdata",3],["arc",3]]],null,null,[[["textsize",3]],["textrange",3]],[[],["astdatabase",8]],[[],["defdatabase",8]],[[],["hirdatabase",8]],[[["usize",15],["option",4]]],[[["usize",15],["option",4]]],null,[[["valuetydefid",4]],[["binders",3],["ty",3]]],[[["enumid",3]],[["arenamap",3],["arc",3]]],[[["enumid",3]],[["arc",3],["arenamap",3]]],[[["bool",15]],[["cancellable",6],["result",4]]],[[["fileposition",3]],[["string",3],["cancellable",6]]],[[["fileid",3]],[["string",3],["cancellable",6]]],[[["fileid",3],["str",15]],[["option",4],["cancellable",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"SourceRootId"],[3,"CrateId"],[3,"FileId"],[3,"AssistId"],[3,"RenameError"],[4,"AssistResolveStrategy"],[4,"HlPunct"],[4,"FoldKind"],[4,"HlOperator"],[4,"HlMod"],[4,"HlTag"],[4,"CompletionItemKind"],[4,"RunnableKind"],[4,"Edition"],[4,"InlayKind"],[4,"SymbolKind"],[4,"FileSystemEdit"],[4,"Direction"],[4,"Severity"],[4,"PrimeCachesProgress"],[4,"AssistKind"],[4,"HoverAction"],[4,"AnnotationKind"],[4,"HoverDocFormat"],[4,"TestId"],[4,"ReferenceAccess"],[4,"StructureNodeKind"],[3,"HighlightedRange"],[3,"HoverResult"],[3,"CallInfo"],[3,"TextRange"],[3,"TextSize"],[3,"CompletionConfig"],[3,"CrateGraph"],[3,"RootDatabase"],[3,"AssistConfig"],[3,"AnalysisHost"],[3,"Semantics"],[3,"AnnotationConfig"],[3,"Analysis"],[3,"Change"],[3,"Indel"],[3,"TextEdit"],[3,"Markup"],[3,"Documentation"],[3,"SingleResolve"],[3,"HlRange"],[3,"Highlight"],[3,"HlMods"],[3,"ExpandedMacro"],[3,"JoinLinesConfig"],[3,"NavigationTarget"],[3,"Annotation"],[3,"CallItem"],[3,"HighlightRelatedConfig"],[3,"StructureNode"],[3,"Fold"],[3,"HoverConfig"],[3,"HoverGotoTypeData"],[3,"InlayHintsConfig"],[3,"InlayHint"],[3,"ReferenceSearchResult"],[3,"Runnable"],[3,"RangeInfo"],[3,"SourceRoot"],[3,"FilePosition"],[3,"FileRange"],[3,"Cancelled"],[3,"SearchScope"],[3,"Assist"],[3,"Label"],[3,"LineIndex"],[3,"LineColUtf16"],[3,"LineCol"],[3,"Query"],[3,"SourceChange"],[3,"CompletionItem"],[3,"CompletionRelevance"],[3,"ImportEdit"],[3,"Diagnostic"],[3,"DiagnosticsConfig"],[3,"SsrError"],[13,"HasImpls"],[13,"HasReferences"],[13,"CreateFile"],[13,"MoveFile"],[13,"StartedOnCrate"],[13,"Test"],[13,"TestMod"],[13,"Bench"],[13,"DocTest"]]},\
"ide_assists":{"doc":"<code>assists</code> crate provides a bunch of code assists, also …","t":[12,12,12,13,3,3,3,4,4,13,3,13,13,13,13,13,13,13,13,3,12,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,4,13,13,5,11,11,11,11,11,11,11,11,5,5,11,11,11,5,11,11,11,11,5],"n":["0","0","1","All","Assist","AssistConfig","AssistId","AssistKind","AssistResolveStrategy","Generate","GroupLabel","None","None","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Single","SingleResolve","allowed","assist_id","assist_kind","assists","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","contains","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_str","group","id","init","init","init","init","init","init","init","insert_use","into","into","into","into","into","into","into","label","name","ne","ne","should_resolve","snippet_cap","source_change","target","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","utils","DefaultMethods","No","Only","add_trait_assoc_items_to_impl","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","extract_trivial_expression","filter_assoc_items","from","init","into","test_related_attribute","to_owned","try_from","try_into","type_id","useless_type_special_case"],"q":["ide_assists","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_assists::utils","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","All assists should be resolved.","","","Unique identifier of the assist, should not be shown to …","","A way to control how many asssist to resolve during the …","","","","No assists should be resolved.","","","","","","Only a certain assist should be resolved.","Hold the [<code>AssistId</code>] data of a certain assist to resolve. …","","The id of the assist.","","Return all the assists applicable at the given position.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Short description of the assist, as shown in the UI.","","","","","","Computing source change sometimes is much more costly …","Target ranges are used to sort assists: the smaller the …","","","","","","","","","","","","","","","","","","","","","","","","","","","Assorted functions shared by several assists.","","","","","","","","","","","","","","","","","","This is a method with a heuristics to support test …","","","","",""],"i":[1,2,1,3,0,0,0,0,0,4,0,4,3,4,4,4,4,4,3,0,5,6,6,0,5,7,4,1,3,6,2,5,7,4,1,3,6,2,5,7,4,1,2,5,7,4,1,2,4,5,7,4,1,3,6,2,5,7,4,1,3,6,2,5,7,4,1,3,6,2,5,4,1,5,4,1,5,7,4,1,3,6,2,5,7,4,1,3,6,2,4,7,7,5,7,4,1,3,6,2,5,5,7,4,1,3,6,2,7,4,5,1,3,5,7,7,5,7,4,1,2,5,7,4,1,3,6,2,5,7,4,1,3,6,2,5,7,4,1,3,6,2,0,0,8,8,0,8,8,8,8,8,8,8,8,0,0,8,8,8,0,8,8,8,8,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["assistresolvestrategy",4],["rootdatabase",3],["filerange",3],["assistconfig",3]],[["assist",3],["vec",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["assistconfig",3]],[[],["assist",3]],[[],["assistkind",4]],[[],["assistid",3]],[[],["grouplabel",3]],[[]],[[]],[[]],[[]],[[]],[[["assistkind",4]],["bool",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["assistconfig",3]],["bool",15]],[[["assistkind",4]],["bool",15]],[[["assistid",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],[["result",4],["assistkind",4]]],null,null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["str",15]],[[["assistconfig",3]],["bool",15]],[[["assistid",3]],["bool",15]],[[["assistid",3]],["bool",15]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,[[["semantics",3],["semanticsscope",3],["associtem",4],["impl",3],["vec",3],["trait",3]]],[[]],[[]],[[],["defaultmethods",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["defaultmethods",4]],["bool",15]],[[["blockexpr",3]],[["option",4],["expr",4]]],[[["defaultmethods",4],["rootdatabase",3]],[["vec",3],["associtem",4]]],[[]],[[],["usize",15]],[[]],[[["fn",3]],[["option",4],["attr",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["str",15],["string",3]],["option",4]]],"p":[[3,"AssistId"],[3,"GroupLabel"],[4,"AssistResolveStrategy"],[4,"AssistKind"],[3,"AssistConfig"],[3,"SingleResolve"],[3,"Assist"],[4,"DefaultMethods"]]},\
"ide_completion":{"doc":"<code>completions</code> crate provides utilities for generating …","t":[13,13,13,3,3,4,3,3,13,13,13,13,13,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,5,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["Attribute","Binding","BuiltinType","CompletionConfig","CompletionItem","CompletionItemKind","CompletionRelevance","ImportEdit","Keyword","Method","Snippet","SymbolKind","UnresolvedReference","add_call_argument_snippets","add_call_parenthesis","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","completions","default","deprecated","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","detail","documentation","drop","drop","drop","drop","drop","enable_imports_on_the_fly","enable_postfix_completions","enable_self_on_the_fly","eq","eq","eq","equivalent","equivalent","equivalent","exact_name_match","exact_postfix_snippet_match","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","import","import_to_add","init","init","init","init","init","insert_use","into","into","into","into","into","is_local","is_relevant","is_snippet","kind","label","lookup","ne","ne","ne","ref_match","relevance","resolve_completion_edits","scope","score","snippet_cap","source_range","text_edit","to_owned","to_owned","to_owned","to_owned","to_owned","to_text_edit","trigger_call_info","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_match"],"q":["ide_completion","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","<code>CompletionItem</code> describes a single completion variant in …","","","An extra import to add after the completion is applied.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Main entry point for completion. We run completion as a …","","","","","","","","","","","","","Short one-line additional information, like a type","A doc-comment","","","","","","","","","","","","","","","This is set in cases like these:","This is set in cases like these:","","","","","","","","","","","","","","","","","","","","","","","","","This is set in cases like these:","Returns true when the score for this threshold is above …","Whether <code>text_edit</code> is a snippet (contains <code>$0</code> markers).","","What user sees in pop-up in the UI.","What string is used for filtering.","","","","","","Resolves additional completion data at the position given.","","Provides a relevance score. Higher values are more …","","","","","","","","","Attempts to insert the import to the given scope, …","","","","","","","","","","","","","","","","","See CompletionRelevanceTypeMatch doc comments for cases …"],"i":[1,1,1,0,0,0,0,0,1,1,1,1,1,2,2,2,3,4,1,5,2,3,4,1,5,2,3,4,1,5,2,3,4,1,5,0,4,3,2,3,4,1,5,2,3,4,1,5,3,3,2,3,4,1,5,2,2,2,2,4,1,2,4,1,4,4,2,3,4,1,5,2,3,4,1,1,5,5,3,2,3,4,1,5,2,2,3,4,1,5,4,4,3,3,3,3,2,4,1,3,3,0,5,4,2,3,3,2,3,4,1,5,5,3,2,3,4,1,5,2,3,4,1,5,2,3,4,1,5,4],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["completionconfig",3]],[[],["completionitem",3]],[[],["completionrelevance",3]],[[],["completionitemkind",4]],[[],["importedit",3]],[[]],[[]],[[]],[[]],[[]],[[["rootdatabase",3],["fileposition",3],["completionconfig",3]],[["completions",3],["option",4]]],[[],["completionrelevance",3]],[[],["bool",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["str",15],["option",4]]],[[],[["documentation",3],["option",4]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,null,null,[[["completionconfig",3]],["bool",15]],[[["completionrelevance",3]],["bool",15]],[[["completionitemkind",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["symbolkind",4]],["completionitemkind",4]],[[]],null,[[],[["option",4],["importedit",3]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],null,[[]],[[]],[[]],[[]],[[]],null,[[],["bool",15]],[[],["bool",15]],[[],[["option",4],["completionitemkind",4]]],[[],["str",15]],[[],["str",15]],[[["completionconfig",3]],["bool",15]],[[["completionrelevance",3]],["bool",15]],[[["completionitemkind",4]],["bool",15]],[[],["option",4]],[[],["completionrelevance",3]],[[["rootdatabase",3],["str",15],["fileposition",3],["string",3],["completionconfig",3]],[["vec",3],["option",4]]],null,[[],["u32",15]],null,[[],["textrange",3]],[[],["textedit",3]],[[]],[[]],[[]],[[]],[[]],[[["insertuseconfig",3]],[["option",4],["textedit",3]]],[[],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null],"p":[[4,"CompletionItemKind"],[3,"CompletionConfig"],[3,"CompletionItem"],[3,"CompletionRelevance"],[3,"ImportEdit"]]},\
"ide_db":{"doc":"This crate defines the core datastructure representing …","t":[13,13,13,13,13,13,13,13,8,3,3,3,13,13,13,3,13,13,13,4,13,13,13,13,13,13,14,14,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,0,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,0,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,13,3,3,4,4,13,3,13,13,13,13,13,13,13,13,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,13,3,4,13,12,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,11,11,11,11,13,4,13,13,13,13,13,13,13,13,13,4,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,0,0,11,11,0,11,11,5,0,5,11,11,5,0,11,11,11,11,11,11,5,11,11,5,17,17,17,3,11,11,11,11,12,11,11,11,11,12,11,11,11,13,3,13,3,4,3,4,13,3,13,3,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,4,4,3,13,13,13,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,5,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,11,11,11,11,5,11,11,11,11,5,5,11,11,11,11,11,11,11,11,5,5,11,5,4,13,17,13,13,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,12,13,4,13,3,6,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,3,3,13,4,3,3,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,12,12,12,12,13,13,3,4,3,13,3,3,3,13,13,3,13,13,3,8,3,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,10,12,10,12,11,11,10,12,11,11,12,12,11,11,11,11,12,11,11,11,11,12,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Const","ConstParam","Enum","Field","Function","Impl","Label","LifetimeParam","LineIndexDatabase","LineIndexDatabaseGroupStorage__","LineIndexDatabaseStorage","LineIndexQuery","Local","Macro","Module","RootDatabase","SelfParam","Static","Struct","SymbolKind","Trait","TypeAlias","TypeParam","Union","ValueParam","Variant","_bail","_format_err","adt_variance","apply_change","assists","associated_ty_data","associated_ty_value","ast_id_map","attrs","block_def_map","body","body_with_source_map","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_info","callable_item_signature","clone","clone_into","cmp","collect_garbage","const_data","const_param_ty","crate_def_map","crate_def_map_query","crate_graph","crate_lang_items","default","default","defs","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","enable_proc_attr_macros","enum_data","eq","equivalent","execute","expand_proc_macro","expr_scopes","field_types","field_visibilities","fields_attrs","fields_attrs_source_map","file_item_tree","file_source_root","file_symbols","file_text","file_text","fmt","fmt","fmt","fmt_index","fmt_index","fn_def_datum","fn_def_variance","for_each_query","for_each_query","from","from","from","from","from","function_data","function_visibility","generic_defaults","generic_params","generic_predicates","generic_predicates_for_param","group_storage","group_storage","group_storage","group_storage","group_storage","group_storage","group_storage","group_storage","hash","helpers","hygiene_frame","impl_data","impl_datum","impl_self_ty","impl_trait","import_map","in_db","in_db_mut","infer","infer_query","inherent_impls_in_crate","init","init","init","init","init","intern_block","intern_callable_def","intern_closure","intern_const","intern_const_param_id","intern_enum","intern_function","intern_impl","intern_impl_trait_id","intern_lifetime_param_id","intern_macro","intern_static","intern_struct","intern_trait","intern_type_alias","intern_type_param_id","intern_union","into","into","into","into","into","items_locator","label","lang_item","library_roots","library_symbols","line_index","line_index","line_index","line_index","local_roots","lookup_intern_block","lookup_intern_callable_def","lookup_intern_closure","lookup_intern_const","lookup_intern_const_param_id","lookup_intern_enum","lookup_intern_function","lookup_intern_impl","lookup_intern_impl_trait_id","lookup_intern_lifetime_param_id","lookup_intern_macro","lookup_intern_static","lookup_intern_struct","lookup_intern_trait","lookup_intern_type_alias","lookup_intern_type_param_id","lookup_intern_union","macro_arg","macro_arg_text","macro_def","macro_expand","macro_expand_error","maybe_changed_since","maybe_changed_since","new","new","ops_database","ops_salsa_runtime","ops_salsa_runtime_mut","parse","parse_macro_expansion","parse_or_expand","partial_cmp","path_transform","per_query_memory_usage","program_clauses_for_chalk_env","query_storage","relevant_crates","rename","request_cancellation","resolve_path","return_type_impl_traits","search","set_crate_graph","set_crate_graph_with_durability","set_enable_proc_attr_macros","set_enable_proc_attr_macros_with_durability","set_file_source_root","set_file_source_root_with_durability","set_file_text","set_file_text_with_durability","set_library_roots","set_library_roots_with_durability","set_local_roots","set_local_roots_with_durability","set_source_root","set_source_root_with_durability","snapshot","source_change","source_root","source_root_crates","static_data","struct_data","struct_datum","symbol_index","to_owned","trait_data","trait_datum","trait_environment","trait_impls_in_block","trait_impls_in_crate","trait_impls_in_deps","trait_solve","trait_solve_query","traits","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","ty","ty_filter","type_alias_data","type_id","type_id","type_id","type_id","type_id","union_data","upcast","upcast","upcast","update_lru_capacity","value_ty","variants_attrs","variants_attrs_source_map","0","0","1","All","Assist","AssistId","AssistKind","AssistResolveStrategy","Generate","GroupLabel","None","None","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Single","SingleResolve","assist_id","assist_kind","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","contains","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_str","group","id","init","init","init","init","init","init","into","into","into","into","into","into","label","name","ne","should_resolve","source_change","target","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","ActiveParameter","CallExpr","CallInfo","FnCallNode","MethodCallExpr","active_parameter","at","at_token","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call_info","deref","deref","deref","deref_mut","deref_mut","deref_mut","doc","drop","drop","drop","fmt","fmt","fmt","from","from","from","ident","init","init","init","into","into","into","name_ref","parameter_labels","parameter_ranges","pat","signature","try_from","try_from","try_from","try_into","try_into","try_into","ty","type_id","type_id","type_id","with_node_exact","ConstReference","Definition","Definition","Definition","Field","FieldShorthand","GenericParam","Label","Local","Macro","ModuleDef","NameClass","NameRefClass","PatFieldShorthand","SelfType","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","classify","classify","classify_lifetime","classify_lifetime","clone","clone_into","defined","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","from","from","from","from","init","init","init","into","into","into","module","name","ne","range_for_rename","rename","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","usages","visibility","field_ref","local_def","field_ref","local_ref","0","1","FamousDefs","SnippetCap","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","core","core_cmp_Ord","core_convert_From","core_convert_Into","core_default_Default","core_iter","core_iter_IntoIterator","core_iter_Iterator","core_ops_Deref","core_option_Option","core_result_Result","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","fmt","for_each_break_expr","for_each_tail_expr","from","from","generated_lints","import_assets","init","init","insert_use","into","into","item_name","merge_imports","mod_path_to_ast","ne","new","pick_best_token","rust_doc","std","to_owned","try_from","try_from","try_into","try_into","try_resolve_derive_input_at","type_id","type_id","visit_file_defs","CLIPPY_LINTS","DEFAULT_LINTS","FEATURES","Lint","borrow","borrow_mut","deref","deref_mut","description","drop","from","init","into","label","try_from","try_into","type_id","Exact","FirstSegmentUnresolved","Fuzzy","ImportAssets","ImportCandidate","LocatedImport","NameToImport","Path","PathImportCandidate","TraitAssocItem","TraitImportCandidate","TraitMethod","assoc_item_name","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_exact_path","for_fuzzy_method_call","for_fuzzy_path","for_ident_pat","for_method_call","from","from","from","from","from","from","from","hash","import_candidate","import_path","init","init","init","init","init","init","init","into","into","into","into","into","into","into","item_to_import","name","ne","new","original_item","original_path","qualifier","receiver_ty","search_for_imports","search_for_relative_paths","text","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Block","ByCrate","BySelf","Crate","File","ImportGranularity","ImportScope","InsertUseConfig","Item","Module","Module","Plain","PrefixKind","Preserve","as_syntax_node","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_for_update","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","enforce_granularity","eq","eq","eq","equivalent","equivalent","equivalent","find_insert_use_container","find_insert_use_container_with_macros","fmt","fmt","fmt","fmt","from","from","from","from","granularity","group","init","init","init","init","insert_use","into","into","into","into","ne","prefix_kind","skip_glob_imports","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Crate","MergeBehavior","Module","borrow","borrow_mut","clone","clone_into","common_prefix","deref","deref_mut","drop","eq","eq_attrs","eq_visibility","equivalent","fmt","from","init","into","to_owned","try_from","try_into","try_merge_imports","try_merge_trees","type_id","is_rust_fence","AssocItemSearch","AssocItemsOnly","DEFAULT_QUERY_SEARCH_LIMIT","Exclude","Include","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","items_with_name","to_owned","try_from","try_into","type_id","Label","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","eq","fmt","fmt","from","init","into","new","to_owned","to_string","try_from","try_into","type_id","LineCol","LineColUtf16","LineIndex","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","col","col","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","hash","hash","init","init","init","into","into","into","line","line","line_col","lines","ne","ne","ne","new","offset","to_owned","to_owned","to_owned","to_utf16","to_utf8","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","PathTransform","apply","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","source_scope","subst","target_scope","try_from","try_into","type_id","0","Ident","IdentifierKind","Lifetime","RenameError","Result","Underscore","borrow","borrow","borrow_mut","borrow_mut","classify","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","fmt","fmt","fmt","from","from","init","init","into","into","source_edit_from_references","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","FileReference","FindUsages","Read","ReferenceAccess","SearchScope","UsageSearchResult","Write","access","all","at_least_one","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","empty","eq","file_range","file_ranges","files","fmt","fmt","fmt","from","from","from","from","from","in_scope","include_self_refs","init","init","init","init","init","intersection","into","into","into","into","into","into_iter","into_iter","is_empty","iter","len","name","range","references","set_scope","single_file","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","CreateFile","FileSystemEdit","MoveFile","SourceChange","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","extend","file_system_edits","fmt","fmt","from","from","from","from","from_edits","from_text_edit","get_source_edit","init","init","insert_source_edit","into","into","is_snippet","push_file_system_edit","source_file_edits","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","dst","dst","initial_contents","src","Const","Enum","FileSymbol","FileSymbolKind","FileSymbolsQuery","Function","LibraryRootsQuery","LibrarySymbolsQuery","LocalRootsQuery","Macro","Module","Query","Static","Struct","SymbolIndex","SymbolsDatabase","SymbolsDatabaseGroupStorage__","SymbolsDatabaseStorage","Trait","TypeAlias","Union","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","case_sensitive","clone","clone","clone_into","clone_into","container_name","crate_symbols","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","exact","execute","execute","file_id","file_symbols","file_symbols","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_index","for_each_query","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","in_db","in_db","in_db","in_db","in_db_mut","in_db_mut","in_db_mut","in_db_mut","index_resolve","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","kind","len","library_roots","library_roots","library_symbols","library_symbols","libs","limit","local_roots","local_roots","maybe_changed_since","memory_size","name","name_range","ne","new","new","only_types","ptr","query_storage","query_storage","query_storage","query_storage","range","set_library_roots","set_library_roots_with_durability","set_local_roots","set_local_roots_with_durability","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","world_symbols","get_missing_assoc_items","resolve_target_trait","Option","Result","TryEnum","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","from_ty","happy_case","happy_pattern","init","into","sad_pattern","to_owned","try_from","try_into","type_id"],"q":["ide_dbide_db::assists","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::call_info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::defs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::defs::NameClass","","ide_db::defs::NameRefClass","","ide_db::helpers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::helpers::generated_lints","","","","","","","","","","","","","","","","","ide_db::helpers::import_assets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::helpers::insert_use","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::helpers::merge_imports","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::helpers::rust_doc","ide_db::items_locator","","","","","","","","","","","","","","","","","","","","","ide_db::label","","","","","","","","","","","","","","","","","","","","","ide_db::line_index","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::path_transform","","","","","","","","","","","","","","","","ide_db::rename","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::search","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::source_change","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::source_change::FileSystemEdit","","","","ide_db::symbol_indexide_db::traits","","ide_db::ty_filter","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","Representative struct for the query group.","","","","","","","","","","","","","","","","","","","","This module defines the <code>Assist</code> data structure. The actual …","","","","","","","","","","","","","","","","","","This crate provides primitives for tracking the …","","","","","","","","","","","","","","<code>NameDefinition</code> keeps information about the element we …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A module with ide helpers for high-level ide features.","","","","","","","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module has the functionality to search the project …","See [<code>Label</code>]","","","","<code>LineIndex</code> maps flat <code>TextSize</code> offsets into <code>(Line, Column)</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See [<code>PathTransform</code>].","","","","","Rename infrastructure for rust-analyzer. It is used …","","","","Implementation of find-usages functionality.","","","","","","","","","","","","","","","","This modules defines type to represent changes to the …","","","","","","This module handles fuzzy-searching of functions, structs …","","","","","","","","","","Functionality for obtaining data related to traits from …","","","","","","","","","","","","This module contains structures for filtering the …","","","","","","","","","","","","","","","","","","All assists should be resolved.","","Unique identifier of the assist, should not be shown to …","","A way to control how many asssist to resolve during the …","","","","No assists should be resolved.","","","","","","Only a certain assist should be resolved.","Hold the [<code>AssistId</code>] data of a certain assist to resolve. …","The id of the assist.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Short description of the assist, as shown in the UI.","","","","Computing source change sometimes is much more costly …","Target ranges are used to sort assists: the smaller the …","","","","","","","","","","","","","","","","","","","","","","","","","Contains information about a call site. Specifically the …","","","","","","","","","","","","Computes parameter information for the given call …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>None</code> in <code>if let None = Some(82) {}</code>. Syntactically, it is a …","","","","","","","","","","","On a first blush, a single <code>ast::Name</code> defines a single …","This is similar to [<code>NameClass</code>], but works for […","<code>field</code> in <code>if let Foo { field } = foo</code>. Here, <code>ast::Name</code> both …","","","","","","","","","","","","","","<code>Definition</code> defined by this name.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Textual range of the identifier which will change when …","","","","","","","","","","","","","","","","","","","","Helps with finding well-know things inside the standard …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>cb</code> on each break expr inside of <code>body</code> that is …","Calls <code>cb</code> on each expression inside <code>expr</code> that is at “…","","","Generated by <code>sourcegen_lint_completions</code>, do not edit by …","Look up accessible paths for items.","","","Handle syntactic aspects of inserting a new <code>use</code>.","","","","Handle syntactic aspects of merging UseTrees.","Converts the mod path struct into its ast representation.","","","Picks the token with the highest rank returned by the …","Rustdoc specific doc comment handling","","","","","","","Resolves the path at the cursor token as a derive macro …","","","Iterates all <code>ModuleDef</code>s and <code>Impl</code> blocks of the given file.","","","","","","","","","","","","","","","","","","Requires items with names that exactly match the given …","A qualifier that has a first segment and it’s …","Requires items with names that case-insensitively contain …","A struct to find imports in the project, given a certain …","A candidate for import, derived during various IDE …","An import (not necessary the only one) that corresponds a …","A name that will be used during item lookups.","A path, qualified (<code>std::collections::HashMap</code>) or not (…","Path import for a given name, qualified or not.","A trait associated function (with no self parameter) or …","A trait import needed for a given associated item access. …","A trait method with self parameter. For ‘…","The associated item name that the trait to import should …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The path to use in the <code>use</code> statement for a given …","","","","","","","","","","","","","","","An item that will be imported with the import path given.","The name the item (struct, trait, enum, etc.) should have.","","","The path import candidate, resolved.","A path of the original item.","Optional qualifier before name.","A type of the item that has the associated item accessed …","","This may return non-absolute paths if a part of the …","","","","","","","","","","","","","","","","","","","","","","","","","","Causes paths to start with <code>crate</code> where applicable, …","Causes paths to always start with either <code>self</code>, <code>super</code>, …","Merge imports from the same crate into a single use …","","How imports should be grouped into use statements.","","","Flatten imports so that each has its own use statement.","Merge imports from the same module into a single use …","","Causes paths to ignore imports in the local module.","","Do not change the granularity of any imports and preserve …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Determines the containing syntax node in which to insert …","Determines the containing syntax node in which to insert …","","","","","","","","","","","","","","","Insert an import path into the given file/node. A <code>merge</code> …","","","","","","","","","","","","","","","","","","","","","","","","Merge imports from the same crate into a single use …","What type of merges are allowed.","Merge imports from the same module into a single use …","","","","","Traverses both paths until they differ, returning the …","","","","","","","","","","","","","","","","","","","Three possible ways to search for the name in associated …","Search for the name in the associated items only.","A value to use, when uncertain which limit to pick.","Search for the name in other items only.","Search for the name in both associated and other items.","","","","","","","","","","","","Searches for importable items with the given name in the …","","","","","A type to specify UI label, like an entry in the list of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Zero-based","Zero-based utf8 offset","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Zero-based","Zero-based","","","","","","","","","","","","","","","","","","","","","","<code>PathTransform</code> substitutes path in SyntaxNodes in bulk.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generally, <code>search_scope</code> returns files that might contain …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enable searching for <code>Self</code> when the definition is a type …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new SourceChange with the given label from the …","","","","","Inserts a [<code>TextEdit</code>] for the given [<code>FileId</code>]. This …","","","","","","","","","","","","","","","","","","","","The actual data that is stored in the index. It should be …","","","","","","","","","","","","","","","Representative struct for the query group.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Get access to extra methods pertaining to this query. For …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","","","","","","","","","","","","","","","","","","","","","","","","The set of roots for crates.io libraries. Files in …","","","","","","The set of “local” (that is, from the current …","","","","","","","","","","","","","","","","Set the value of the <code>library_roots</code> input.","Set the value of the <code>library_roots</code> input and promise that …","Set the value of the <code>local_roots</code> input.","Set the value of the <code>local_roots</code> input and promise that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Given the <code>impl</code> block, returns the list of associated …","Given the <code>impl</code> block, attempts to find the trait this <code>impl</code>…","","","Enum types that implement <code>std::ops::Try</code> trait.","","","","","","","","","Returns <code>Some(..)</code> if the provided type is an enum that …","","","","","","","","",""],"if":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["adtid",3],["interner",3]],[["variances",3],["interner",3]]],[[["change",3]]],null,[[["assoctypeid",3],["interner",3]],[["arc",3],["associatedtydatum",3]]],[[["interner",3],["associatedtyvalueid",3],["crateid",3]],[["arc",3],["associatedtyvalue",3]]],[[["hirfileid",3]],[["astidmap",3],["arc",3]]],[[["attrdefid",4]],["attrswithowner",3]],[[["blockid",3]],[["option",4],["arc",3]]],[[["defwithbodyid",4]],[["arc",3],["body",3]]],[[["defwithbodyid",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["callabledefid",4]],[["callablesig",3],["binders",3]]],[[],["symbolkind",4]],[[]],[[["symbolkind",4]],["ordering",4]],[[]],[[["constid",3]],[["arc",3],["constdata",3]]],[[["constparamid",3]],[["ty",3],["interner",3]]],[[["crateid",3]],[["defmap",3],["arc",3]]],[[["crateid",3]],[["defmap",3],["arc",3]]],[[],[["arc",3],["crategraph",3]]],[[["crateid",3]],[["langitems",3],["arc",3]]],[[],["rootdatabase",3]],[[],["lineindexquery",3]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["bool",15]],[[["enumid",3]],[["enumdata",3],["arc",3]]],[[["symbolkind",4]],["bool",15]],[[],["bool",15]],[[]],[[["macrocallid",3]],[["subtree",3],["result",4],["expanderror",4]]],[[["defwithbodyid",4]],[["arc",3],["exprscopes",3]]],[[["variantid",4]],[["arc",3],["arenamap",3]]],[[["variantid",4]],[["arc",3],["arenamap",3]]],[[["variantid",4]],[["arc",3],["arenamap",3]]],[[["variantid",4]],[["arenamap",3],["arc",3]]],[[["hirfileid",3]],[["arc",3],["itemtree",3]]],[[["fileid",3]],["sourcerootid",3]],[[["fileid",3]],[["arc",3],["symbolindex",3]]],[[["fileid",3]],[["arc",3],["string",3]]],[[["fileid",3]],[["arc",3],["string",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3],["databasekeyindex",3]],["result",6]],[[["formatter",3],["lineindexdatabase",8],["databasekeyindex",3]],["result",6]],[[["interner",3],["fndefid",3],["crateid",3]],[["fndefdatum",3],["arc",3]]],[[["fndefid",3],["interner",3]],[["variances",3],["interner",3]]],[[["fnmut",8]]],[[["fnmut",8],["runtime",3]]],[[]],[[]],[[]],[[]],[[]],[[["functionid",3]],[["functiondata",3],["arc",3]]],[[["functionid",3]],["visibility",4]],[[["genericdefid",4]],["arc",3]],[[["genericdefid",4]],[["interned",3],["genericparams",3]]],[[["genericdefid",4]],["arc",3]],[[["typeparamid",3]],["arc",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["hirfileid",3]],[["arc",3],["hygieneframe",3]]],[[["implid",3]],[["impldata",3],["arc",3]]],[[["interner",3],["implid",3],["crateid",3]],[["arc",3],["impldatum",3]]],[[["implid",3]],[["ty",3],["binders",3]]],[[["implid",3]],[["binders",3],["option",4]]],[[["crateid",3]],[["arc",3],["importmap",3]]],[[["lineindexdatabase",8]],["querytable",3]],[[["lineindexdatabase",8]],["querytablemut",3]],[[["defwithbodyid",4]],[["arc",3],["inferenceresult",3]]],[[["defwithbodyid",4]],[["arc",3],["inferenceresult",3]]],[[["crateid",3]],[["arc",3],["inherentimpls",3]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["blockloc",3]],["blockid",3]],[[["callabledefid",4]],["internedcallabledefid",3]],[[],["internedclosureid",3]],[[["associtemloc",3],["const",3]],["constid",3]],[[["constparamid",3]],["internedconstparamid",3]],[[["itemloc",3],["enum",3]],["enumid",3]],[[["associtemloc",3],["function",3]],["functionid",3]],[[["itemloc",3],["impl",3]],["implid",3]],[[["impltraitid",4]],["internedopaquetyid",3]],[[["lifetimeparamid",3]],["internedlifetimeparamid",3]],[[["macrocallloc",3]],["macrocallid",3]],[[["itemloc",3],["static",3]],["staticid",3]],[[["itemloc",3],["struct",3]],["structid",3]],[[["itemloc",3],["trait",3]],["traitid",3]],[[["typealias",3],["associtemloc",3]],["typealiasid",3]],[[["typeparamid",3]],["internedtypeparamid",3]],[[["itemloc",3],["union",3]],["unionid",3]],[[]],[[]],[[]],[[]],[[]],null,null,[[["smolstr",3],["crateid",3]],[["langitemtarget",4],["option",4]]],[[],[["hashset",3],["arc",3]]],[[],[["hashmap",3],["arc",3]]],null,[[["fileid",3]],[["arc",3],["lineindex",3]]],[[["fileid",3]],[["arc",3],["lineindex",3]]],null,[[],[["hashset",3],["arc",3]]],[[["blockid",3]],["blockloc",3]],[[["internedcallabledefid",3]],["callabledefid",4]],[[["internedclosureid",3]]],[[["constid",3]],[["associtemloc",3],["const",3]]],[[["internedconstparamid",3]],["constparamid",3]],[[["enumid",3]],[["itemloc",3],["enum",3]]],[[["functionid",3]],[["function",3],["associtemloc",3]]],[[["implid",3]],[["itemloc",3],["impl",3]]],[[["internedopaquetyid",3]],["impltraitid",4]],[[["internedlifetimeparamid",3]],["lifetimeparamid",3]],[[["macrocallid",3]],["macrocallloc",3]],[[["staticid",3]],[["itemloc",3],["static",3]]],[[["structid",3]],[["itemloc",3],["struct",3]]],[[["traitid",3]],[["itemloc",3],["trait",3]]],[[["typealiasid",3]],[["typealias",3],["associtemloc",3]]],[[["internedtypeparamid",3]],["typeparamid",3]],[[["unionid",3]],[["itemloc",3],["union",3]]],[[["macrocallid",3]],[["arc",3],["option",4]]],[[["macrocallid",3]],[["option",4],["greennode",3]]],[[["macrodefid",3]],[["option",4],["arc",3]]],[[["macrocallid",3]],[["option",4],["expandresult",3]]],[[["macrocallid",3]],[["expanderror",4],["option",4]]],[[["revision",3],["databasekeyindex",3]],["bool",15]],[[["revision",3],["lineindexdatabase",8],["databasekeyindex",3]],["bool",15]],[[["usize",15],["option",4]],["rootdatabase",3]],[[["u16",15]]],[[],["database",8]],[[],["runtime",3]],[[],["runtime",3]],[[["fileid",3]],[["sourcefile",3],["parse",3]]],[[["macrofile",3]],[["option",4],["expandresult",3]]],[[["hirfileid",3]],[["option",4],["syntaxnode",3]]],[[["symbolkind",4]],[["option",4],["ordering",4]]],null,[[],["vec",3]],[[["interner",3],["environment",3],["crateid",3]],[["programclauses",3],["interner",3]]],[[],["arc",3]],[[["fileid",3]],[["arc",3],["fxhashset",6]]],null,[[]],[[["anchoredpath",3]],[["fileid",3],["option",4]]],[[["functionid",3]],[["option",4],["arc",3]]],null,[[["arc",3],["crategraph",3]]],[[["durability",3],["arc",3],["crategraph",3]]],[[["bool",15]]],[[["bool",15],["durability",3]]],[[["fileid",3],["sourcerootid",3]]],[[["fileid",3],["durability",3],["sourcerootid",3]]],[[["fileid",3],["arc",3],["string",3]]],[[["arc",3],["string",3],["fileid",3],["durability",3]]],[[["hashset",3],["arc",3]]],[[["hashset",3],["arc",3],["durability",3]]],[[["hashset",3],["arc",3]]],[[["hashset",3],["arc",3],["durability",3]]],[[["sourceroot",3],["arc",3],["sourcerootid",3]]],[[["durability",3],["arc",3],["sourceroot",3],["sourcerootid",3]]],[[],[["snapshot",3],["rootdatabase",3]]],null,[[["sourcerootid",3]],[["sourceroot",3],["arc",3]]],[[["sourcerootid",3]],[["arc",3],["hashset",3]]],[[["staticid",3]],[["arc",3],["staticdata",3]]],[[["structid",3]],[["structdata",3],["arc",3]]],[[["interner",3],["adtid",3],["crateid",3]],[["adtdatum",3],["arc",3]]],null,[[]],[[["traitid",3]],[["traitdata",3],["arc",3]]],[[["interner",3],["traitid",3],["crateid",3]],[["arc",3],["traitdatum",3]]],[[["genericdefid",4]],[["arc",3],["traitenvironment",3]]],[[["blockid",3]],[["option",4],["arc",3]]],[[["crateid",3]],[["arc",3],["traitimpls",3]]],[[["crateid",3]],[["arc",3],["traitimpls",3]]],[[["inenvironment",3],["canonical",3],["crateid",3]],[["solution",4],["option",4]]],[[["inenvironment",3],["canonical",3],["crateid",3]],[["solution",4],["option",4]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["tydefid",4]],[["ty",3],["binders",3]]],null,[[["typealiasid",3]],[["arc",3],["typealiasdata",3]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["unionid",3]],[["structdata",3],["arc",3]]],[[],["astdatabase",8]],[[],["defdatabase",8]],[[],["hirdatabase",8]],[[["usize",15],["option",4]]],[[["valuetydefid",4]],[["ty",3],["binders",3]]],[[["enumid",3]],[["arenamap",3],["arc",3]]],[[["enumid",3]],[["arenamap",3],["arc",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["assist",3]],[[],["assistkind",4]],[[],["assistid",3]],[[],["grouplabel",3]],[[]],[[]],[[]],[[]],[[["assistkind",4]],["bool",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["assistkind",4]],["bool",15]],[[["assistid",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["result",4]],null,null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["str",15]],[[["assistid",3]],["bool",15]],[[["assistid",3]],["bool",15]],null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,[[["rootdatabase",3],["fileposition",3]],["option",4]],[[["syntaxtoken",6],["semantics",3]],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rootdatabase",3],["fileposition",3]],[["option",4],["callinfo",3]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],[["option",4],["name",3]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[],[["option",4],["nameref",3]]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["syntaxnode",6]],[["option",4],["fncallnode",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["semantics",3],["name",3]],[["nameclass",4],["option",4]]],[[["semantics",3],["nameref",3]],[["option",4],["namerefclass",4]]],[[["lifetime",3],["semantics",3]],[["nameclass",4],["option",4]]],[[["lifetime",3],["semantics",3]],[["option",4],["namerefclass",4]]],[[],["definition",4]],[[]],[[],[["option",4],["definition",4]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["definition",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["pathresolution",4]]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[["rootdatabase",3]],[["option",4],["module",3]]],[[["rootdatabase",3]],[["option",4],["name",3]]],[[["definition",4]],["bool",15]],[[["semantics",3]],[["option",4],["filerange",3]]],[[["semantics",3],["str",15]],[["sourcechange",3],["result",6]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["semantics",3]],["findusages",3]],[[["rootdatabase",3]],[["option",4],["visibility",4]]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["snippetcap",3]],[[]],[[],[["crate",3],["option",4]]],[[],[["option",4],["trait",3]]],[[],[["option",4],["trait",3]]],[[],[["option",4],["trait",3]]],[[],[["option",4],["trait",3]]],[[],[["option",4],["module",3]]],[[],[["option",4],["trait",3]]],[[],[["option",4],["trait",3]]],[[],[["option",4],["trait",3]]],[[],[["enum",3],["option",4]]],[[],[["enum",3],["option",4]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["snippetcap",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["label",3],["option",4],["option",4],["blockexpr",3],["fnmut",8]]],[[["expr",4],["fnmut",8]]],[[]],[[]],null,null,[[],["usize",15]],[[],["usize",15]],null,[[]],[[]],[[["rootdatabase",3],["iteminns",4]],[["option",4],["name",3]]],null,[[["modpath",3]],["path",3]],[[["snippetcap",3]],["bool",15]],[[["bool",15]],[["option",4],["snippetcap",3]]],[[["tokenatoffset",4],["syntaxtoken",6]],[["syntaxtoken",6],["option",4]]],null,[[],[["crate",3],["option",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["syntaxtoken",6],["semantics",3],["attr",3]],[["macrodef",3],["option",4]]],[[],["typeid",3]],[[],["typeid",3]],[[["fileid",3],["semantics",3],["fnmut",8]]],null,null,null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],null,[[["usize",15]]],[[]],[[],["usize",15]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["nametoimport",4]],[[],["locatedimport",3]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["locatedimport",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["semantics",3],["path",3]],["option",4]],[[["syntaxnode",6],["module",3],["string",3],["type",3]],["option",4]],[[["path",3],["module",3],["option",4],["string",3],["syntaxnode",6],["semantics",3]],["option",4]],[[["semantics",3],["identpat",3]],["option",4]],[[["methodcallexpr",3],["semantics",3]],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["importcandidate",4]],null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["locatedimport",3]],["bool",15]],[[["option",4],["modpath",3],["iteminns",4]]],null,null,null,null,[[["prefixkind",4],["semantics",3]],[["vec",3],["locatedimport",3]]],[[["semantics",3]],[["vec",3],["locatedimport",3]]],[[],["str",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["syntaxnode",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["importgranularity",4]],[[],["insertuseconfig",3]],[[],["importscope",4]],[[],["prefixkind",4]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[["importgranularity",4]],["bool",15]],[[["insertuseconfig",3]],["bool",15]],[[["prefixkind",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6],["semantics",3]],["option",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],null,null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["path",3],["importscope",4],["insertuseconfig",3]]],[[]],[[]],[[]],[[]],[[["insertuseconfig",3]],["bool",15]],null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[],["mergebehavior",4]],[[]],[[["path",3]],["option",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["mergebehavior",4]],["bool",15]],[[],["bool",15]],[[["option",4],["visibility",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["mergebehavior",4],["use",3]],[["option",4],["use",3]]],[[["mergebehavior",4],["usetree",3]],[["option",4],["usetree",3]]],[[],["typeid",3]],[[["str",15]],["bool",15]],null,null,null,null,null,[[]],[[]],[[],["associtemsearch",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[["nametoimport",4],["semantics",3],["crate",3],["associtemsearch",4],["usize",15],["option",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],[[],["label",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["bool",15]],[[["str",15]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[],["label",3]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["lineindex",3]],[[],["linecolutf16",3]],[[],["linecol",3]],[[]],[[]],[[]],null,null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["lineindex",3]],["bool",15]],[[["linecolutf16",3]],["bool",15]],[[["linecol",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],null,null,[[["textsize",3]],["linecol",3]],[[["textrange",3]]],[[["lineindex",3]],["bool",15]],[[["linecolutf16",3]],["bool",15]],[[["linecol",3]],["bool",15]],[[["str",15]],["lineindex",3]],[[["linecol",3]],["textsize",3]],[[]],[[]],[[]],[[["linecol",3]],["linecolutf16",3]],[[["linecolutf16",3]],["linecol",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["associtem",4]]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["str",15]],[["identifierkind",4],["result",6]]],[[],["identifierkind",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["identifierkind",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["str",15],["definition",4]],["textedit",3]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[],["usagesearchresult",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usagesearchresult",3]],[[],["filereference",3]],[[],["referenceaccess",4]],[[]],[[]],[[]],[[],["usagesearchresult",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["searchscope",3]],[[["referenceaccess",4]],["bool",15]],[[["filerange",3]],["searchscope",3]],[[]],[[],["searchscope",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["searchscope",3]],["findusages",3]],[[],["findusages",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["searchscope",3]],["searchscope",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[],["usize",15]],null,null,null,[[["option",4],["searchscope",3]],["findusages",3]],[[["fileid",3]],["searchscope",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,[[]],[[]],[[]],[[]],[[],["sourcechange",3]],[[],["filesystemedit",4]],[[]],[[]],[[],["sourcechange",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["intoiterator",8]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["filesystemedit",4]],["sourcechange",3]],[[]],[[["textedit",3],["fileid",3],["fxhashmap",6]],["sourcechange",3]],[[]],[[["fxhashmap",6],["vec",3],["textedit",3],["fileid",3],["filesystemedit",4]]],[[["textedit",3],["fileid",3]]],[[["fileid",3]],[["option",4],["textedit",3]]],[[],["usize",15]],[[],["usize",15]],[[["textedit",3],["fileid",3]]],[[]],[[]],null,[[["filesystemedit",4]]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["filesymbol",3]],[[],["filesymbolkind",4]],[[]],[[]],null,[[["rootdatabase",3],["query",3],["crateid",3]],[["vec",3],["filesymbol",3]]],[[],["filesymbolsquery",3]],[[],["librarysymbolsquery",3]],[[],["localrootsquery",3]],[[],["libraryrootsquery",3]],[[],["symbolindex",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["symbolindex",3]],["bool",15]],[[["filesymbol",3]],["bool",15]],[[["filesymbolkind",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],null,[[["fileid",3]],[["symbolindex",3],["arc",3]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3],["databasekeyindex",3],["symbolsdatabase",8]],["result",6]],[[["fnmut",8],["runtime",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["symbolsdatabase",8]],["querytable",3]],[[["symbolsdatabase",8]],["querytable",3]],[[["symbolsdatabase",8]],["querytable",3]],[[["symbolsdatabase",8]],["querytable",3]],[[["symbolsdatabase",8]],["querytablemut",3]],[[["symbolsdatabase",8]],["querytablemut",3]],[[["symbolsdatabase",8]],["querytablemut",3]],[[["symbolsdatabase",8]],["querytablemut",3]],[[["rootdatabase",3],["str",15]],[["vec",3],["filesymbol",3]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["usize",15]],[[],[["arc",3],["fxhashset",6]]],null,[[],[["arc",3],["fxhashmap",6]]],null,[[]],[[["usize",15]]],[[],[["arc",3],["fxhashset",6]]],null,[[["revision",3],["databasekeyindex",3],["symbolsdatabase",8]],["bool",15]],[[],["usize",15]],null,null,[[["filesymbol",3]],["bool",15]],[[["string",3]],["query",3]],[[["u16",15]]],[[]],null,[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],null,[[["arc",3],["fxhashset",6]]],[[["arc",3],["fxhashset",6],["durability",3]]],[[["arc",3],["fxhashset",6]]],[[["arc",3],["fxhashset",6],["durability",3]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["rootdatabase",3],["query",3]],[["vec",3],["filesymbol",3]]],[[["impl",3],["semantics",3]],[["vec",3],["associtem",4]]],[[["impl",3],["semantics",3]],[["option",4],["trait",3]]],null,null,null,[[]],[[]],[[],["tryenum",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["type",3],["semantics",3]],[["option",4],["tryenum",4]]],[[],["str",15]],[[],["pat",4]],[[],["usize",15]],[[]],[[],["pat",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[4,"SymbolKind"],[3,"RootDatabase"],[3,"LineIndexDatabaseStorage"],[3,"LineIndexDatabaseGroupStorage__"],[3,"LineIndexQuery"],[8,"LineIndexDatabase"],[3,"AssistId"],[3,"GroupLabel"],[4,"AssistResolveStrategy"],[4,"AssistKind"],[3,"SingleResolve"],[3,"Assist"],[4,"FnCallNode"],[3,"CallInfo"],[3,"ActiveParameter"],[4,"NameClass"],[4,"NameRefClass"],[4,"Definition"],[13,"PatFieldShorthand"],[13,"FieldShorthand"],[3,"FamousDefs"],[3,"SnippetCap"],[3,"Lint"],[4,"NameToImport"],[4,"ImportCandidate"],[3,"TraitImportCandidate"],[3,"PathImportCandidate"],[3,"FirstSegmentUnresolved"],[3,"ImportAssets"],[3,"LocatedImport"],[4,"ImportScope"],[4,"PrefixKind"],[4,"ImportGranularity"],[3,"InsertUseConfig"],[4,"MergeBehavior"],[4,"AssocItemSearch"],[3,"Label"],[3,"LineIndex"],[3,"LineColUtf16"],[3,"LineCol"],[3,"PathTransform"],[3,"RenameError"],[4,"IdentifierKind"],[4,"ReferenceAccess"],[3,"FileReference"],[3,"FindUsages"],[3,"SearchScope"],[3,"UsageSearchResult"],[4,"FileSystemEdit"],[3,"SourceChange"],[13,"CreateFile"],[13,"MoveFile"],[4,"FileSymbolKind"],[3,"Query"],[3,"SymbolsDatabaseStorage"],[3,"SymbolsDatabaseGroupStorage__"],[3,"FileSymbolsQuery"],[3,"LibrarySymbolsQuery"],[3,"LocalRootsQuery"],[3,"LibraryRootsQuery"],[3,"SymbolIndex"],[3,"FileSymbol"],[8,"SymbolsDatabase"],[4,"TryEnum"]]},\
"ide_diagnostics":{"doc":"Diagnostics rendering and fixits.","t":[12,3,3,3,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,5,12,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["0","Diagnostic","DiagnosticCode","DiagnosticsConfig","Error","Severity","WeakWarning","as_str","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","code","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","diagnostics","disable_experimental","disabled","drop","drop","drop","drop","eq","experimental","fixes","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","message","ne","range","severity","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unused"],"q":["ide_diagnostics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,0,0,2,0,2,1,1,3,2,4,1,3,2,4,1,2,4,1,2,4,3,4,1,3,2,4,1,3,2,4,0,4,4,1,3,2,4,1,3,3,1,3,2,4,1,3,2,4,1,3,2,4,1,3,2,4,3,1,3,3,1,2,4,1,3,2,4,1,3,2,4,1,3,2,4,3],"f":[null,null,null,null,null,null,null,[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["diagnosticcode",3]],[[],["severity",4]],[[],["diagnosticsconfig",3]],[[]],[[]],[[]],null,[[],["diagnosticsconfig",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["assistresolvestrategy",4],["diagnosticsconfig",3],["rootdatabase",3],["fileid",3]],[["vec",3],["diagnostic",3]]],null,null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["diagnosticcode",3]],["bool",15]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],null,[[["diagnosticcode",3]],["bool",15]],null,null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null],"p":[[3,"DiagnosticCode"],[4,"Severity"],[3,"Diagnostic"],[3,"DiagnosticsConfig"]]},\
"ide_ssr":{"doc":"Structural Search Replace","t":[3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Match","MatchDebugInfo","MatchFinder","SsrError","SsrMatches","SsrPattern","SsrRule","add_rule","add_search_pattern","at_first_file","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","debug_where_text_equal","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","edits","eq","flattened","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_str","from_str","in_context","init","init","init","init","init","init","init","into","into","into","into","into","into","into","matched_text","matches","matches","ne","ssr_from_comment","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["ide_ssr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Information about a match that was found.","","Searches a crate for pattern matches and possibly …","","","","","Adds a rule to be applied. The order in which rules are …","Adds a search pattern. For use if you intend to only call …","Constructs an instance using the start of the first file …","","","","","","","","","","","","","","","Finds all nodes in <code>file_id</code> whose text is exactly equal to …","","","","","","","","","","","","","","","","","","","","","","","Finds matches for all added rules and returns edits for …","","Returns <code>self</code> with any nested matches removed and made …","","","","","","","","","","","","","","","","","Constructs a new instance where names will be looked up …","","","","","","","","","","","","","","","","Returns matches for all added rules.","","","Attempts to build an SSR MatchFinder from a comment at …","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,1,1,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,4,7,2,3,4,4,5,6,7,1,2,3,4,5,6,7,5,6,1,1,2,3,4,5,6,7,1,2,3,4,5,6,7,3,1,7,4,0,4,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7],"f":[null,null,null,null,null,null,null,[[["ssrrule",3]],[["ssrerror",3],["result",4]]],[[["ssrpattern",3]],[["ssrerror",3],["result",4]]],[[["rootdatabase",3]],[["ssrerror",3],["result",4],["matchfinder",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["fileid",3],["str",15]],[["matchdebuginfo",3],["vec",3]]],[[],["ssrmatches",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["fileid",3],["textedit",3],["fxhashmap",6]]],[[["ssrerror",3]],["bool",15]],[[],["ssrmatches",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],[["ssrrule",3],["ssrerror",3],["result",4]]],[[["str",15]],[["ssrpattern",3],["result",4],["ssrerror",3]]],[[["filerange",3],["rootdatabase",3],["vec",3],["fileposition",3]],["matchfinder",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["ssrmatches",3]],null,[[["ssrerror",3]],["bool",15]],[[["rootdatabase",3],["filerange",3]],["option",4]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"MatchFinder"],[3,"MatchDebugInfo"],[3,"Match"],[3,"SsrError"],[3,"SsrRule"],[3,"SsrPattern"],[3,"SsrMatches"]]},\
"la_arena":{"doc":"Yet another index-based arena.","t":[3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Arena","ArenaMap","Idx","RawIdx","alloc","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","default","default","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_iter","from_raw","get","get_mut","hash","hash","hash","hash","index","index","index_mut","index_mut","insert","into","into","into","into","into_raw","is_empty","iter","iter","iter_mut","len","ne","ne","ne","new","partial_cmp","partial_cmp","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","values","values_mut"],"q":["la_arena","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Yet another index-based arena.","A map from arena indexes to some other type. Space …","The index of a value allocated in an arena that holds <code>T</code>s.","The raw index of a value in an arena.","Allocates a new value on the arena, returning the …","","","","","","","","","Empties the arena, removing all contained values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new index from a [<code>RawIdx</code>].","Returns a reference to the value associated with the …","Returns a mutable reference to the value associated with …","","","","","","","","","Inserts a value associated with a given arena index into …","","","","","Converts this index into the underlying [<code>RawIdx</code>].","Returns whether the arena contains no elements.","Returns an iterator over the arena indexes and values in …","Returns an iterator over the arena’s elements.","Returns an iterator over the arena’s mutable elements.","Returns the length of the arena.","","","","Creates a new empty arena.","","","Reallocates the arena to make it take up as little space …","","","","","","","","","","","","","","","","","","Returns an iterator over the values in the map.","Returns an iterator over mutable references to the values …"],"i":[0,0,0,0,1,2,3,4,1,2,3,4,1,1,2,3,4,1,2,3,4,1,3,4,3,1,2,3,4,1,2,3,4,4,1,2,3,4,4,1,1,2,3,3,2,3,4,1,3,1,3,1,3,2,3,4,1,2,1,3,1,1,1,3,4,1,1,3,4,1,2,3,4,1,4,2,3,4,1,2,3,4,1,2,3,4,1,3,3],"f":[null,null,null,null,[[],["idx",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["arenamap",3]],[[],["rawidx",3]],[[],["arena",3]],[[]],[[]],[[]],[[]],[[["arenamap",3]],["ordering",4]],[[["rawidx",3]],["ordering",4]],[[]],[[],["arena",3]],[[["idx",3]],["bool",15]],[[["arenamap",3]],["bool",15]],[[["rawidx",3]],["bool",15]],[[["arena",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["u32",15]],["rawidx",3]],[[]],[[]],[[]],[[["rawidx",3]]],[[["idx",3]],["option",4]],[[["idx",3]],["option",4]],[[]],[[]],[[]],[[]],[[["idx",3]]],[[["idx",3]]],[[["idx",3]]],[[["idx",3]]],[[["idx",3]]],[[]],[[]],[[]],[[]],[[],["rawidx",3]],[[],["bool",15]],[[]],[[]],[[]],[[],["usize",15]],[[["arenamap",3]],["bool",15]],[[["rawidx",3]],["bool",15]],[[["arena",3]],["bool",15]],[[],["arena",3]],[[["arenamap",3]],[["option",4],["ordering",4]]],[[["rawidx",3]],[["option",4],["ordering",4]]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[3,"Arena"],[3,"Idx"],[3,"ArenaMap"],[3,"RawIdx"]]},\
"limit":{"doc":"limit defines a struct to enforce limits.","t":[3,11,11,11,11,11,11,11,11,11,11,11],"n":["Limit","borrow","borrow_mut","check","from","inner","into","new","new_tracking","try_from","try_into","type_id"],"q":["limit","","","","","","","","","","",""],"d":["Represents a struct used to enforce a numerical limit.","","","Checks whether the given value is below the limit. …","","Gets the underlying numeric limit.","","Creates a new limit.","Creates a new limit.","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[]],[[]],[[["usize",15]],["result",4]],[[]],[[],["usize",15]],[[]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"Limit"]]},\
"mbe":{"doc":"<code>mbe</code> (short for Macro By Example) crate contains code for …","t":[13,13,13,13,13,13,3,4,4,3,13,13,3,3,13,4,13,13,4,13,3,13,3,13,13,13,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,12,11,5,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["BindingError","Brace","Bracket","Call","ConversionError","Def","Delimiter","DelimiterKind","ExpandError","ExpandResult","Expected","InvalidRepeat","MacroDef","MacroRules","NoMatchingRule","Origin","Other","Parenthesis","ParseError","ProcMacroError","Punct","RepetitionEmptyTokenTree","TokenMap","UnexpectedToken","UnexpectedToken","UnresolvedProcMacro","ast_to_token_tree","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","char","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","err","expand","expand","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","id","id","into","into","into","into","into","into","into","into","into","into","kind","map","map_id_down","map_id_down","map_id_up","map_id_up","ne","ne","ne","ne","ne","ne","ne","ne","ok","only_err","parse","parse","parse_exprs_with_sep","parse_to_token_tree","range_by_token","result","spacing","str_err","syntax_node_to_token_tree","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","token_by_range","token_tree_to_syntax_node","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value"],"q":["mbed":["","","","","","","","","","","","","For Macro 2.0","This struct contains AST for a single <code>macro_rules</code> …","","","","","","","","","Maps <code>tt::TokenId</code> to the relative range of the original …","","","","Convert the syntax tree (what user has written) to a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Split token tree with seperate expr: $($e:expr)SEP*","Convert a string to a <code>TokenTree</code>","","","","","Convert the syntax node to a <code>TokenTree</code> (what macro will …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,2,3,1,3,0,0,0,0,4,4,0,0,1,0,1,2,0,1,0,4,0,4,1,1,0,5,4,1,6,7,3,8,9,2,10,5,4,1,6,7,3,8,9,2,10,10,5,1,6,7,8,9,2,10,5,1,6,7,8,9,2,10,5,5,4,1,6,7,3,8,9,2,10,5,4,1,6,7,3,8,9,2,10,8,6,7,5,4,1,1,6,7,3,8,9,2,10,10,5,4,1,1,6,7,3,8,8,9,2,10,9,2,10,9,10,5,4,1,6,7,3,8,9,2,10,9,8,6,7,6,7,5,4,1,6,7,8,9,10,8,8,6,7,0,0,5,8,10,8,0,5,1,6,7,8,9,2,10,1,10,5,0,5,4,1,6,7,3,8,9,2,10,5,4,1,6,7,3,8,9,2,10,5,4,1,6,7,3,8,9,2,10,8],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["tokenmap",3]],[[],["expanderror",4]],[[],["macrorules",3]],[[],["macrodef",3]],[[],["expandresult",3]],[[],["delimiter",3]],[[],["delimiterkind",4]],[[],["punct",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["tokenmap",3]],[[["tokenmap",3]],["bool",15]],[[["parseerror",4]],["bool",15]],[[["expanderror",4]],["bool",15]],[[["macrorules",3]],["bool",15]],[[["macrodef",3]],["bool",15]],[[["origin",4]],["bool",15]],[[["expandresult",3]],["bool",15]],[[["delimiter",3]],["bool",15]],[[["delimiterkind",4]],["bool",15]],[[["punct",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[["subtree",3]],[["subtree",3],["expandresult",3]]],[[["subtree",3]],[["subtree",3],["expandresult",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[["expansionerror",4]]],[[]],[[]],[[]],[[]],[[["result",4],["expanderror",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["expandresult",3]],[[["tokenid",3]],["tokenid",3]],[[["tokenid",3]],["tokenid",3]],[[["tokenid",3]]],[[["tokenid",3]]],[[["tokenmap",3]],["bool",15]],[[["parseerror",4]],["bool",15]],[[["expanderror",4]],["bool",15]],[[["macrorules",3]],["bool",15]],[[["macrodef",3]],["bool",15]],[[["expandresult",3]],["bool",15]],[[["delimiter",3]],["bool",15]],[[["punct",3]],["bool",15]],[[]],[[["expanderror",4]]],[[["subtree",3]],[["macrorules",3],["parseerror",4],["result",4]]],[[["subtree",3]],[["macrodef",3],["parseerror",4],["result",4]]],[[["subtree",3],["char",15]],[["subtree",3],["vec",3]]],[[["str",15]],["option",4]],[[["tokenid",3],["syntaxkind",4]],[["option",4],["textrange",3]]],[[],[["result",4],["expanderror",4]]],null,[[["string",3]]],[[["syntaxnode",6]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[["textrange",3]],[["option",4],["tokenid",3]]],[[["fragmentkind",4],["subtree",3]],[["result",4],["expanderror",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null],"p":[[4,"ExpandError"],[4,"DelimiterKind"],[4,"Origin"],[4,"ParseError"],[3,"TokenMap"],[3,"MacroRules"],[3,"MacroDef"],[3,"ExpandResult"],[3,"Delimiter"],[3,"Punct"]]},\
"parser":{"doc":"The Rust parser.","tn":["0","ABI","AMP","AMP2","AMPEQ","ARG_LIST","ARRAY_EXPR","ARRAY_TYPE","ASSOC_ITEM_LIST","ASSOC_TYPE_ARG","ASYNC_KW","AS_KW","AT","ATTR","AUTO_KW","AWAIT_EXPR","AWAIT_KW","Attr","BANG","BIN_EXPR","BLOCK_EXPR","BOX_EXPR","BOX_KW","BOX_PAT","BREAK_EXPR","BREAK_KW","BYTE","BYTE_STRING","Block","CALL_EXPR","CARET","CARETEQ","CAST_EXPR","CHAR","CLOSURE_EXPR","COLON","COLON2","COMMA","COMMENT","CONDITION","CONST","CONST_ARG","CONST_BLOCK_PAT","CONST_KW","CONST_PARAM","CONTINUE_EXPR","CONTINUE_KW","CRATE_KW","DEFAULT_KW","DOLLAR","DOT","DOT2","DOT2EQ","DOT3","DYN_KW","DYN_TRAIT_TYPE","EFFECT_EXPR","ELSE_KW","ENUM","ENUM_KW","EQ","EQ2","ERROR","EXISTENTIAL_KW","EXPR_STMT","EXTERN_BLOCK","EXTERN_CRATE","EXTERN_ITEM_LIST","EXTERN_KW","Expr","FALSE_KW","FAT_ARROW","FIELD_EXPR","FLOAT_NUMBER","FN","FN_KW","FN_PTR_TYPE","FOR_EXPR","FOR_KW","FOR_TYPE","FragmentKind","GENERIC_ARG_LIST","GENERIC_PARAM","GENERIC_PARAM_LIST","GTEQ","IDENT","IDENT_PAT","IF_EXPR","IF_KW","IMPL","IMPL_KW","IMPL_TRAIT_TYPE","INDEX_EXPR","INFER_TYPE","INT_NUMBER","IN_KW","ITEM_LIST","Item","Items","LABEL","LET_KW","LET_STMT","LIFETIME","LIFETIME_ARG","LIFETIME_IDENT","LIFETIME_PARAM","LITERAL","LITERAL_PAT","LOOP_EXPR","LOOP_KW","LTEQ","L_ANGLE","L_BRACK","L_CURLY","L_DOLLAR","L_PAREN","MACRO_ARM","MACRO_CALL","MACRO_DEF","MACRO_ITEMS","MACRO_KW","MACRO_PAT","MACRO_RULES","MACRO_RULES_KW","MACRO_STMTS","MACRO_TYPE","MATCH_ARM","MATCH_ARM_LIST","MATCH_EXPR","MATCH_GUARD","MATCH_KW","META","METHOD_CALL_EXPR","MINUS","MINUSEQ","MODULE","MOD_KW","MOVE_KW","MUT_KW","MetaItem","NAME","NAME_REF","NEQ","NEVER_TYPE","OR_PAT","PARAM","PARAM_LIST","PAREN_EXPR","PAREN_PAT","PAREN_TYPE","PATH","PATH_EXPR","PATH_PAT","PATH_SEGMENT","PATH_TYPE","PERCENT","PERCENTEQ","PIPE","PIPE2","PIPEEQ","PLUS","PLUSEQ","POUND","PREFIX_EXPR","PTR_TYPE","PUB_KW","ParseError","Path","Pattern","QUESTION","RANGE_EXPR","RANGE_PAT","RAW_KW","RECORD_EXPR","RECORD_EXPR_FIELD","RECORD_EXPR_FIELD_LIST","RECORD_FIELD","RECORD_FIELD_LIST","RECORD_PAT","RECORD_PAT_FIELD","RECORD_PAT_FIELD_LIST","REF_EXPR","REF_KW","REF_PAT","REF_TYPE","RENAME","REST_PAT","RETURN_EXPR","RETURN_KW","RET_TYPE","R_ANGLE","R_BRACK","R_CURLY","R_DOLLAR","R_PAREN","Reparser","SELF_KW","SELF_PARAM","SEMICOLON","SHEBANG","SHL","SHLEQ","SHR","SHREQ","SLASH","SLASHEQ","SLICE_PAT","SLICE_TYPE","SOURCE_FILE","STAR","STAREQ","STATIC","STATIC_KW","STRING","STRUCT","STRUCT_KW","SUPER_KW","Statement","StatementOptionalSemi","Statements","SyntaxKind","T","THIN_ARROW","TILDE","TOKEN_TREE","TRAIT","TRAIT_KW","TRUE_KW","TRY_EXPR","TRY_KW","TUPLE_EXPR","TUPLE_FIELD","TUPLE_FIELD_LIST","TUPLE_PAT","TUPLE_STRUCT_PAT","TUPLE_TYPE","TYPE_ALIAS","TYPE_ARG","TYPE_BOUND","TYPE_BOUND_LIST","TYPE_KW","TYPE_PARAM","Token","TokenSource","TreeSink","Type","UNDERSCORE","UNION","UNION_KW","UNSAFE_KW","USE","USE_KW","USE_TREE","USE_TREE_LIST","VARIANT","VARIANT_LIST","VISIBILITY","Visibility","WHERE_CLAUSE","WHERE_KW","WHERE_PRED","WHILE_EXPR","WHILE_KW","WHITESPACE","WILDCARD_PAT","YIELD_EXPR","YIELD_KW","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","current","eq","eq","eq","eq","error","finish_node","fmt","fmt","fmt","fmt","for_node","from","from","from","from","from","from","from_char","from_keyword","hash","hash","hash","into","into","into","into","into","is_jointed_to_next","is_keyword","is_keyword","is_literal","is_punct","is_trivia","kind","lookahead_nth","ne","ne","parse","parse","parse_fragment","partial_cmp","start_node","to_owned","to_owned","to_owned","to_owned","token","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id"],"q":["parserdparsing function for a specific braced-block.","","","","","","","","","","","","","","","","","","","","","","","","","The kind of syntax node, e.g. <code>IDENT</code>, <code>USE_KW</code>, or <code>STRUCT</code>.","","","","","","","","","","","","","","","","","","","","","","<code>Token</code> abstracts the cursor of <code>TokenSource</code> operates on.","<code>TokenSource</code> abstracts the source of the tokens parser …","<code>TreeSink</code> abstracts details of a particular syntax tree …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bump cursor to next token","","","","","","","","","","","","","","","","Finish current branch and restore previous branch as …","","","","","If the node is a braced block, return the corresponding …","","","","","","","","","","","","","","","","","Is the current token joined to the next one (<code>> ></code> vs <code>>></code>).","Is the current token a specified keyword?","","","","","What is the current token?","Lookahead n token","","","Parse given tokens into the given sink as a rust file.","Re-parse given tokens using this <code>Reparser</code>.","","","Start new branch and make it current.","","","","","Adds new token to the current branch.","","","","","","","","","","","","","","",""],"i":[1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,2,2,2,2,2,2,2,2,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,3,2,2,2,2,2,2,2,2,2,2,2,3,2,2,2,2,2,2,2,2,2,4,2,1,5,3,4,2,1,5,3,6,2,1,5,3,2,1,5,3,2,6,2,1,5,3,7,7,2,1,5,3,4,4,2,2,1,5,3,2,2,2,1,3,4,2,1,5,3,5,6,2,2,2,2,5,6,1,5,0,4,0,2,7,2,1,5,3,7,4,2,1,5,3,4,2,1,5,3,4,2,1,5,3],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["syntaxkind",4]],[[],["parseerror",3]],[[],["token",3]],[[],["fragmentkind",4]],[[]],[[]],[[]],[[]],[[["syntaxkind",4]],["ordering",4]],[[],["token",3]],[[["syntaxkind",4]],["bool",15]],[[["parseerror",3]],["bool",15]],[[["token",3]],["bool",15]],[[["fragmentkind",4]],["bool",15]],[[["parseerror",3]]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["syntaxkind",4],["option",4]],[["option",4],["reparser",3]]],[[]],[[]],[[["u16",15]],["syntaxkind",4]],[[]],[[]],[[]],[[["char",15]],[["option",4],["syntaxkind",4]]],[[["str",15]],[["option",4],["syntaxkind",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["str",15]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[["usize",15]],["token",3]],[[["parseerror",3]],["bool",15]],[[["token",3]],["bool",15]],[[["treesink",8],["tokensource",8]]],[[["treesink",8],["tokensource",8]]],[[["treesink",8],["fragmentkind",4],["tokensource",8]]],[[["syntaxkind",4]],[["option",4],["ordering",4]]],[[["syntaxkind",4]]],[[]],[[]],[[]],[[]],[[["syntaxkind",4],["u8",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"ParseError"],[4,"SyntaxKind"],[4,"FragmentKind"],[3,"Reparser"],[3,"Token"],[8,"TokenSource"],[8,"TreeSink"]]},\
"paths":{"doc":"Thin wrappers around <code>std::path</code>, distinguishing between …","t":[3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AbsPath","AbsPathBuf","RelPath","RelPathBuf","as_os_str","as_path","as_path","as_ref","as_ref","as_ref","as_ref","as_ref","assert","assert","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","cmp","cmp","deref","deref","deserialize","display","ends_with","eq","eq","eq","eq","eq","exists","extension","file_name","file_stem","fmt","fmt","fmt","fmt","from","from","hash","hash","hash","hash","into","into","join","ne","ne","ne","ne","new_unchecked","normalize","parent","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pop","serialize","starts_with","strip_prefix","to_owned","to_owned","to_path_buf","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","type_id","type_id"],"q":["paths","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Wrapper around an absolute [<code>Path</code>].","Wrapper around an absolute [<code>PathBuf</code>].","Wrapper around a relative [<code>Path</code>].","Wrapper around a relative [<code>PathBuf</code>].","","Coerces to a <code>AbsPath</code> slice.","Coerces to a <code>RelPath</code> slice.","","","","","","Wrap the given absolute path in <code>AbsPathBuf</code>","Wrap the given absolute path in <code>AbsPath</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Equivalent of [<code>Path::join</code>] for <code>AbsPath</code>.","","","","","Creates a new <code>RelPath</code> from <code>path</code>, without checking if it …","Normalize the given path:","Equivalent of [<code>Path::parent</code>] for <code>AbsPath</code>.","","","","","Equivalent of [<code>PathBuf::pop</code>] for <code>AbsPathBuf</code>.","","","Equivalent of [<code>Path::strip_prefix</code>] for <code>AbsPath</code>.","","","Equivalent of [<code>Path::to_path_buf</code>] for <code>AbsPath</code>.","","","","","","","","","","","",""],"i":[0,0,0,0,1,2,3,2,2,1,3,4,2,1,2,2,1,3,4,2,1,3,4,2,3,2,3,2,1,3,4,2,3,2,1,1,2,2,1,3,4,1,1,1,1,2,1,3,4,2,3,2,1,3,4,2,3,1,2,1,3,4,4,1,1,2,1,3,4,2,2,1,1,2,3,1,2,2,2,3,3,3,2,3,2,1,3,4],"f":[null,null,null,null,[[],["osstr",3]],[[],["abspath",3]],[[],["relpath",3]],[[],["abspath",3]],[[],["path",3]],[[],["path",3]],[[],["path",3]],[[],["path",3]],[[["pathbuf",3]],["abspathbuf",3]],[[["path",3]],["abspath",3]],[[],["abspath",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["abspathbuf",3]],[[],["relpathbuf",3]],[[]],[[]],[[["abspathbuf",3]],["ordering",4]],[[["abspath",3]],["ordering",4]],[[["relpathbuf",3]],["ordering",4]],[[["relpath",3]],["ordering",4]],[[],["abspath",3]],[[],["relpath",3]],[[],["result",4]],[[],["display",3]],[[["relpath",3]],["bool",15]],[[["abspath",3]],["bool",15]],[[["abspathbuf",3]],["bool",15]],[[["abspath",3]],["bool",15]],[[["relpathbuf",3]],["bool",15]],[[["relpath",3]],["bool",15]],[[],["bool",15]],[[],[["option",4],["osstr",3]]],[[],[["option",4],["osstr",3]]],[[],[["option",4],["osstr",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["abspathbuf",3]],[[["abspathbuf",3]],["bool",15]],[[["abspath",3]],["bool",15]],[[["relpathbuf",3]],["bool",15]],[[["relpath",3]],["bool",15]],[[["path",3]],["relpath",3]],[[],["abspathbuf",3]],[[],[["option",4],["abspath",3]]],[[["abspathbuf",3]],[["option",4],["ordering",4]]],[[["abspath",3]],[["option",4],["ordering",4]]],[[["relpathbuf",3]],[["option",4],["ordering",4]]],[[["relpath",3]],[["option",4],["ordering",4]]],[[],["bool",15]],[[],["result",4]],[[["abspath",3]],["bool",15]],[[["abspath",3]],[["relpath",3],["option",4]]],[[]],[[]],[[],["abspathbuf",3]],[[["str",15]],[["result",4],["abspathbuf",3],["pathbuf",3]]],[[],["result",4]],[[["pathbuf",3]],[["result",4],["abspathbuf",3],["pathbuf",3]]],[[["str",15]],[["pathbuf",3],["result",4],["relpathbuf",3]]],[[["pathbuf",3]],[["pathbuf",3],["result",4],["relpathbuf",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"AbsPath"],[3,"AbsPathBuf"],[3,"RelPathBuf"],[3,"RelPath"]]},\
"proc_macro_api":{"doc":"Client-side Proc-Macro crate","t":[13,13,3,3,13,3,3,3,4,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,0,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,4,13,13,13,13,13,8,4,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Attr","CustomDerive","ExpansionResult","ExpansionTask","FuncLike","ListMacrosResult","ListMacrosTask","ProcMacroClient","ProcMacroKind","RustCInfo","attributes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","by_dylib_path","channel","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","commit","date","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","env","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","expansion","extern_process","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","lib","lib","macro_body","macro_name","macros","msg","ne","ne","ne","ne","read_dylib_info","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","Error","ErrorCode","ExpansionError","ExpansionMacro","ExpansionMacro","ListMacro","ListMacro","Message","Request","Response","ResponseError","ServerErrorEnd","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","code","deserialize","deserialize","deserialize","deserialize","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","message","read","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write"],"q":["proc_macro_api","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","proc_macro_api::msg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","Possible attributes for the attribute-like macros.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Environment variables to set during macro expansion.","","","","","","","","","","","","Spawns an external process as the proc macro server and …","","","","","","","","","","","","","","","","","","","","","","","","Argument of macro call.","Name of macro to expand.","","Defines messages for cross-process message passing based …","","","","","Read rustc dylib information","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,0,0,1,0,0,0,0,0,2,3,1,4,2,5,6,7,3,1,4,2,5,6,7,7,6,3,1,4,2,5,3,1,4,2,5,6,6,4,5,3,1,4,2,5,2,3,1,4,2,5,3,1,4,2,5,5,7,3,1,4,2,5,6,7,3,1,4,2,5,6,7,3,1,4,2,5,6,7,3,2,2,2,4,0,3,4,2,5,0,3,1,4,2,5,3,1,4,2,5,3,1,4,4,2,5,5,6,7,3,1,4,2,5,6,7,3,1,4,2,5,6,7,6,8,0,9,10,8,10,8,0,0,0,0,9,10,8,11,9,10,8,11,9,10,8,11,9,10,8,11,9,11,10,8,11,9,10,8,11,9,10,8,11,9,10,8,11,9,11,12,10,8,11,9,10,8,11,9,10,8,11,9,10,8,11,9,10,8,11,9,12],"f":[null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["abspath",3]],[["procmacro",3],["vec",3]]],null,[[],["listmacrostask",3]],[[],["procmacrokind",4]],[[],["listmacrosresult",3]],[[],["expansiontask",3]],[[],["expansionresult",3]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["listmacrosresult",3]],[[],["expansionresult",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["listmacrostask",3]],["bool",15]],[[["procmacrokind",4]],["bool",15]],[[["listmacrosresult",3]],["bool",15]],[[["expansiontask",3]],["bool",15]],[[["expansionresult",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[["abspathbuf",3]],[["result",6],["procmacroclient",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[["listmacrostask",3]],["bool",15]],[[["listmacrosresult",3]],["bool",15]],[[["expansiontask",3]],["bool",15]],[[["expansionresult",3]],["bool",15]],[[["abspath",3]],[["rustcinfo",3],["result",6]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["response",4]],["result",4]],[[],["result",4]],[[["response",4]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["request",4]],[[],["response",4]],[[],["responseerror",3]],[[],["errorcode",4]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["string",3]],[["result",6],["option",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",6]]],"p":[[4,"ProcMacroKind"],[3,"ExpansionTask"],[3,"ListMacrosTask"],[3,"ListMacrosResult"],[3,"ExpansionResult"],[3,"RustCInfo"],[3,"ProcMacroClient"],[4,"Response"],[4,"ErrorCode"],[4,"Request"],[3,"ResponseError"],[8,"Message"]]},\
"proc_macro_srv":{"doc":"RA Proc Macro Server","t":[0,5],"n":["cli","run"],"q":["proc_macro_srv","proc_macro_srv::cli"],"d":["Driver for proc macro server",""],"i":[0,0],"f":[null,[[],["result",6]]],"p":[]},\
"proc_macro_test":{"doc":"Exports a few trivial procedural macros for testing.","t":[7],"n":["PROC_MACRO_TEST_LOCATION"],"q":["proc_macro_test"],"d":[""],"i":[0],"f":[null],"p":[]},\
"profile":{"doc":"A collection of tools for profiling rust-analyzer.","t":[3,3,3,3,3,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,12,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,5,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Bytes","Count","CpuSpan","MemoryUsage","Scope","StopWatch","StopWatchSpan","add_assign","allocated","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cpu_span","default","default","drop","drop","drop","elapsed","enter","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","hash","heartbeat","heartbeat_span","init","init_from","instructions","into","into","into","into","into","into","into","is_active","megabytes","memory","memory","memory_usage","ne","ne","new","now","partial_cmp","partial_cmp","span","start","sub","sub","time","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["profile","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Include <code>_c: Count<Self></code> field in important structs to …","A wrapper around google_cpu_profiler.","","Allows to check if the current code is withing some …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Filtering syntax env RA_PROFILE=*             // dump …","","","","","","","","","","","","","","","","","Create new <code>Count</code>, incrementing the corresponding count.","","","","This function starts a profiling scope in the current …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,2,3,4,5,2,1,6,7,3,4,5,2,1,6,7,2,1,7,2,1,7,1,7,0,1,7,5,6,7,3,5,1,7,4,2,1,6,7,3,4,5,2,1,6,7,1,7,0,0,0,0,4,3,4,5,2,1,6,7,5,1,3,4,0,1,7,7,2,1,7,0,3,2,1,4,2,1,7,4,2,1,3,4,5,2,1,6,7,3,4,5,2,1,6,7,3,4,5,2,1,6,7],"f":[null,null,null,null,null,null,null,[[["usize",15]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["memoryusage",3]],[[],["bytes",3]],[[],["count",3]],[[]],[[]],[[]],[[["bytes",3]],["ordering",4]],[[["count",3]],["ordering",4]],[[],["cpuspan",3]],[[],["bytes",3]],[[],["count",3]],[[]],[[]],[[]],[[],["stopwatchspan",3]],[[],["scope",3]],[[["bytes",3]],["bool",15]],[[["count",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["heartbeatspan",3]],[[]],[[["str",15]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["isize",15]],[[["bool",15]],["stopwatch",3]],null,[[],["memoryusage",3]],[[["bytes",3]],["bool",15]],[[["count",3]],["bool",15]],[[],["count",3]],[[],["memoryusage",3]],[[["bytes",3]],[["option",4],["ordering",4]]],[[["count",3]],[["option",4],["ordering",4]]],[[["str",15]],["profilespan",3]],[[],["stopwatch",3]],[[["memoryusage",3]],["memoryusage",3]],[[["bytes",3]],["bytes",3]],null,[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"Bytes"],[3,"MemoryUsage"],[3,"StopWatch"],[3,"StopWatchSpan"],[3,"Scope"],[3,"CpuSpan"],[3,"Count"]]},\
"project_model":{"doc":"In rust-analyzer, we maintain a strict separation between …","t":[13,13,13,13,3,13,3,6,13,13,13,13,13,3,13,6,3,3,3,13,3,3,13,3,4,4,4,3,6,3,4,13,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,12,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,11,11,12,11,11,12,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["Bench","Bin","BuildScript","Cargo","CargoConfig","CargoToml","CargoWorkspace","CfgOverrides","DetachedFiles","Discover","Example","Json","Lib","ManifestPath","Other","Package","PackageData","PackageDependency","PackageRoot","Path","ProcMacroClient","ProjectJson","ProjectJson","ProjectJsonData","ProjectManifest","ProjectWorkspace","RustcSource","Sysroot","Target","TargetData","TargetKind","Test","WorkspaceBuildScripts","active_features","all_features","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","by_dylib_path","cfg_overrides","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","crates","crates","default","default","default","dependencies","deref","deserialize","discover","discover","discover_all","discover_rustc","discover_single","edition","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exclude","extern_process","features","features","fetch_metadata","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_cargo_metadata3","from_manifest_file","hash","hash","hash","id","include","index","index","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_member","is_member","is_proc_macro","kind","kind","load","load","load_detached_files","load_inline","manifest","metadata","n_crates","n_packages","name","name","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","no_default_features","no_sysroot","package","package_flag","packages","parent","partial_cmp","partial_cmp","path","pkg","proc_macro","public_deps","root","run","run_build_scripts","rustc_source","set_build_scripts","target","target_by_root","targets","to_crate_graph","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_roots","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unset_test_crates","version","workspace_root","wrap_rustc_in_build_scripts","build_scripts","cargo","cfg_overrides","files","project","rustc","rustc_cfg","rustc_cfg","rustc_cfg","sysroot","sysroot","sysroot"],"q":["project_modelproject_model::ProjectWorkspace","","","","","","","","","","",""],"d":["","","","Project workspace was discovered by running <code>cargo metadata</code>…","","","[<code>CargoWorkspace</code>] represents the logical structure of, …","","Project with a set of disjoint files, not belonging to …","Try to automatically detect where the rustc source …","","Project workspace was manually specified using a …","Any kind of Cargo lib crate-type (dylib, rlib, …","More or less [<code>AbsPathBuf</code>] with non-None parent.","","","Information associated with a cargo crate","","<code>PackageRoot</code> describes a package root folder. Which may be …","Explicit path for the rustc source directory.","","Roots and crates that compose this Rust project.","","","","","Describes how to set the rustc source directory.","","","Information associated with a package’s target","","","","List of features enabled on this package","Activate all available features","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over the crates in the project.","","","","","List of packages this package depends on","","","","","","","","Rust edition for this package","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Spawns an external process as the proc macro server and …","List of features to activate. This will be ignored if …","Features provided by the crate, mapped to the features …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Is this package a member of the current workspace","Is a member of the current workspace","Is this target a proc-macro","","Kind of target","","","","","Path containing the <code>Cargo.toml</code>","","Returns the number of crates in the project.","","Name as given in the <code>Cargo.toml</code>","","Name as given in the <code>Cargo.toml</code> or generated from the …","","","","","","","","","","","","","","","Create a new ProjectJson instance.","Do not activate the <code>default</code> feature.","Don’t load sysroot crates (<code>std</code>, <code>core</code> & friends). Might …","Package that provided this target","","","","","","Returns the path to the project’s root folder.","","","","Path to the main source file of the target","","","rustc private crate source","","rustc target","","Targets provided by the crate (lib, bin, example, test, …","","","","","","","","","","","","","","","","","Returns the roots for the current <code>ProjectWorkspace</code> The …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crates to disable <code>#[cfg(test)]</code> on","Version given in the <code>Cargo.toml</code>","","","","","","","","","Holds cfg flags for the current target. We get those by …","","","","",""],"i":[1,1,1,2,0,3,0,0,2,4,1,2,1,0,1,0,0,0,0,4,0,0,3,0,0,0,0,0,0,0,0,1,0,5,6,7,7,8,4,6,5,9,10,1,11,12,13,14,2,15,3,16,7,8,4,6,5,9,10,1,11,12,13,14,2,15,3,16,16,6,7,8,4,6,5,9,10,1,11,12,13,14,2,15,3,7,8,4,6,5,9,10,1,11,12,13,14,2,15,3,7,3,11,13,6,13,15,5,7,12,13,3,3,13,3,5,7,8,4,6,5,9,10,1,11,13,14,2,15,3,7,8,4,6,5,9,10,1,11,13,14,2,15,3,14,16,6,5,8,7,8,4,6,5,9,10,1,11,12,13,14,2,15,3,16,7,8,4,6,5,9,10,1,11,12,13,14,2,15,3,16,8,3,7,14,3,5,14,8,8,13,7,8,4,6,5,9,10,1,11,12,13,14,2,15,3,16,5,14,10,9,10,13,2,2,2,5,5,11,2,5,9,10,7,8,4,6,5,9,10,11,13,14,2,15,3,8,11,6,6,10,8,8,7,7,3,11,9,13,13,10,15,2,6,2,6,8,5,2,7,8,4,6,5,9,10,1,11,12,13,14,2,15,3,2,7,7,8,4,6,5,9,10,1,11,12,13,14,2,15,3,16,7,8,4,6,5,9,10,1,11,12,13,14,2,15,3,16,7,8,4,6,5,9,10,1,11,12,13,14,2,15,3,16,6,5,8,6,17,17,17,18,19,17,17,19,18,17,19,18],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["path",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["abspath",3]],[["vec",3],["procmacro",3],["global",3]]],[[],["cfgoverrides",6]],[[],["manifestpath",3]],[[],["cargoworkspace",3]],[[],["rustcsource",4]],[[],["cargoconfig",3]],[[],["packagedata",3]],[[],["packagedependency",3]],[[],["targetdata",3]],[[],["targetkind",4]],[[],["projectjson",3]],[[],["projectjsondata",3]],[[],["sysroot",3]],[[],["packageroot",3]],[[],["projectworkspace",4]],[[],["workspacebuildscripts",3]],[[],["projectmanifest",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["manifestpath",3]],["ordering",4]],[[["projectmanifest",4]],["ordering",4]],[[]],[[]],[[],["cargoconfig",3]],[[],["sysroot",3]],[[],["workspacebuildscripts",3]],null,[[]],[[],["result",4]],[[["abspath",3]],[["result",6],["sysroot",3]]],[[["abspath",3]],[["vec",3],["result",6]]],[[],[["vec",3],["projectmanifest",4]]],[[["manifestpath",3]],[["option",4],["manifestpath",3]]],[[["abspath",3]],[["projectmanifest",4],["result",6]]],null,[[["manifestpath",3]],["bool",15]],[[["cargoworkspace",3]],["bool",15]],[[["rustcsource",4]],["bool",15]],[[["cargoconfig",3]],["bool",15]],[[["packagedata",3]],["bool",15]],[[["packagedependency",3]],["bool",15]],[[["targetdata",3]],["bool",15]],[[["targetkind",4]],["bool",15]],[[["projectjson",3]],["bool",15]],[[["sysroot",3]],["bool",15]],[[["packageroot",3]],["bool",15]],[[["projectworkspace",4]],["bool",15]],[[["workspacebuildscripts",3]],["bool",15]],[[["projectmanifest",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[["abspathbuf",3]],[["procmacroclient",3],["result",4],["error",3]]],null,null,[[["fn",8],["manifestpath",3],["cargoconfig",3]],[["result",6],["metadata",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["fn",8],["manifestpath",3],["cargoconfig",3]],[["result",6],["cargoworkspace",3]]],[[["abspathbuf",3]],[["projectmanifest",4],["result",6]]],[[]],[[]],[[]],null,null,[[["target",6]],["targetdata",3]],[[["package",6]],["packagedata",3]],[[["idx",3],["sysrootcratedata",3]],["sysrootcratedata",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[["abspath",3]],[["result",6],["sysroot",3]]],[[["projectmanifest",4],["fn",8],["cargoconfig",3]],[["result",6],["projectworkspace",4]]],[[["vec",3],["abspathbuf",3]],[["result",6],["projectworkspace",4]]],[[["option",4],["projectjson",3],["str",15]],[["result",6],["projectworkspace",4]]],null,null,[[],["usize",15]],[[],["usize",15]],null,null,null,[[["manifestpath",3]],["bool",15]],[[["cargoworkspace",3]],["bool",15]],[[["rustcsource",4]],["bool",15]],[[["cargoconfig",3]],["bool",15]],[[["packagedata",3]],["bool",15]],[[["packagedependency",3]],["bool",15]],[[["targetdata",3]],["bool",15]],[[["projectjson",3]],["bool",15]],[[["sysroot",3]],["bool",15]],[[["packageroot",3]],["bool",15]],[[["projectworkspace",4]],["bool",15]],[[["workspacebuildscripts",3]],["bool",15]],[[["projectmanifest",4]],["bool",15]],[[["metadata",3]],["cargoworkspace",3]],[[["projectjsondata",3],["abspath",3]],["projectjson",3]],null,null,null,[[["packagedata",3]],["string",3]],[[]],[[],["abspath",3]],[[["manifestpath",3]],[["option",4],["ordering",4]]],[[["projectmanifest",4]],[["option",4],["ordering",4]]],[[],["abspath",3]],null,[[],[["idx",3],["option",4]]],[[]],null,[[["fn",8],["cargoworkspace",3],["cargoconfig",3]],[["workspacebuildscripts",3],["result",6]]],[[["fn",8],["cargoconfig",3]],[["workspacebuildscripts",3],["result",6]]],null,[[["workspacebuildscripts",3]]],null,[[["abspath",3]],[["option",4],["target",6]]],null,[[["procmacroclient",3],["option",4],["fnmut",8]],["crategraph",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["packageroot",3],["vec",3]]],[[],["result",4]],[[["abspathbuf",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[],["abspath",3]],null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"TargetKind"],[4,"ProjectWorkspace"],[4,"ProjectManifest"],[4,"RustcSource"],[3,"PackageData"],[3,"CargoConfig"],[3,"ManifestPath"],[3,"CargoWorkspace"],[3,"PackageDependency"],[3,"TargetData"],[3,"ProjectJson"],[3,"ProjectJsonData"],[3,"Sysroot"],[3,"PackageRoot"],[3,"WorkspaceBuildScripts"],[3,"ProcMacroClient"],[13,"Cargo"],[13,"DetachedFiles"],[13,"Json"]]},\
"rust_analyzer":{"doc":"Implementation of the LSP for rust-analyzer.","t":[6,6,0,0,5,0,5,5,3,13,13,13,13,4,5,11,11,11,11,11,11,11,11,11,11,5,11,11,12,12,11,11,5,11,11,11,11,11,11,0,12,12,12,12,5,12,12,11,5,12,5,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,12,5,5,12,11,11,11,12,13,3,3,13,3,4,3,13,3,4,18,3,13,13,3,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,12,12,11,12,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,12,13,4,3,13,3,13,3,3,3,4,4,3,3,3,13,13,13,4,3,3,4,4,3,3,4,3,4,3,4,4,3,4,3,4,4,4,3,13,4,13,13,4,3,13,4,13,4,13,4,4,3,4,4,3,4,3,4,3,3,3,4,3,4,3,3,13,13,4,3,4,4,3,13,13,13,4,3,4,4,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["Error","Result","cli","config","from_json","lsp_ext","main_loop","server_capabilities","AnalysisStatsCmd","Normal","Quiet","Spammy","Verbose","Verbosity","apply_ssr_rules","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","diagnostics","drop","drop","enable_build_scripts","enable_proc_macros","from","from","highlight","init","init","into","into","is_spammy","is_verbose","load_cargo","memory_usage","no_sysroot","only","parallel","parse","path","randomize","run","search_for_patterns","skip_inference","symbols","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_deps","LoadCargoConfig","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","load_out_dirs_from_check","load_workspace","load_workspace_at","prefill_caches","try_from","try_into","type_id","with_proc_macro","Client","ClientCommandsConfig","Config","CustomCommand","FilesConfig","FilesWatcher","HoverActionsConfig","InlineJsonProject","LensConfig","LinkedProject","NO_ACTIONS","NotificationsConfig","Notify","ProjectManifest","RunnablesConfig","Rustfmt","RustfmtConfig","WorkspaceSymbolConfig","any","any","assist","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_info_full","caps","cargo","cargo_autoreload","cargo_extra_args","cargo_toml_not_found","change_annotation_support","client_commands","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code_action_group","code_action_literals","code_action_resolve","code_lens_refresh","completion","debug","debug","debug_single","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","detached_files","diagnostics","diagnostics_map","did_change_watched_files_dynamic_registration","did_save_text_document_dynamic_registration","discovered_projects","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","exclude","expand_proc_attr_macros","files","flycheck","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","goto_location","goto_type_def","hierarchical_symbols","highlight_related","highlighting_strings","hover","hover_actions","implementations","implementations","init","init","init","init","init","init","init","init","init","init","init","inlay_hints","insert_replace_support","into","into","into","into","into","into","into","into","into","into","into","join_lines","json_schema","lens","line_folding_only","linked_projects","location_link","lru_capacity","method_refs","ne","ne","ne","new","none","none","notifications","offset_encoding","override_cargo","proc_macro_srv","publish_diagnostics","references","references","refs","root_path","run","run","run_build_scripts","run_single","runnable","runnable","runnables","rustfmt","search_kind","search_scope","semantic_tokens_refresh","server_status_notification","show_reference","signature_help_label_offsets","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trigger_parameter_hints","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","watcher","will_rename","work_done_progress","workspace_symbol","args","command","enable_range_formatting","extra_args","AllSymbols","AnalyzerStatus","AnalyzerStatusParams","Cargo","CargoRunnable","ChainingHint","ClientCommandOptions","CodeAction","CodeActionData","CodeActionRequest","CodeActionResolveRequest","CommandLink","CommandLinkGroup","CompletionResolveData","Down","Edit","Error","ExpandMacro","ExpandMacroParams","ExpandedMacro","ExternalDocs","Health","Hover","HoverParams","HoverRequest","InlayHint","InlayHints","InlayHintsParams","InlayKind","JoinLines","JoinLinesParams","MatchingBrace","MatchingBraceParams","MemoryUsage","MoveItem","MoveItemDirection","MoveItemParams","Ok","OnEnter","OnlyTypes","Op","OpenCargoToml","OpenCargoTomlParams","ParameterHint","ParentModule","Position","PositionOrRange","Range","RelatedTests","ReloadWorkspace","Runnable","RunnableKind","Runnables","RunnablesParams","ServerStatusNotification","ServerStatusParams","SnippetDocumentChangeOperation","SnippetTextDocumentEdit","SnippetTextEdit","SnippetWorkspaceEdit","Ssr","SsrParams","SyntaxTree","SyntaxTreeParams","TestInfo","TypeHint","Up","ViewCrateGraph","ViewCrateGraphParams","ViewHir","ViewItemTree","ViewItemTreeParams","Warning","Workspace","WorkspaceAndDependencies","WorkspaceSymbol","WorkspaceSymbolParams","WorkspaceSymbolSearchKind","WorkspaceSymbolSearchScope","actions","annotation_id","args","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cargo_args","cargo_extra_args","change_annotations","changes","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code_action_params","command","commands","commands","data","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","direction","document_changes","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","edit","edits","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","executable_args","expansion","expect_test","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","full","full_import_path","group","health","hover","id","imported_name","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert_text_format","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_preferred","kind","kind","kind","label","label","location","message","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new_text","override_cargo","parse_only","partial_result_params","position","position","position","position","position","positions","query","query","quiescent","range","range","range","range","ranges","runnable","search_kind","search_scope","selections","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","supports_utf8","text_document","text_document","text_document","text_document","text_document","text_document","text_document","text_document","text_document","text_document","text_document","text_document","title","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tooltip","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","work_done_progress_params","work_done_progress_params","workspace_root"],"q":["rust_analyzer","","","","","","","","rust_analyzer::cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_analyzer::cli::load_cargo","","","","","","","","","","","","","","","","","rust_analyzer::configrust_analyzer::config::RustfmtConfig","","","","rust_analyzer::lsp_extd":["","","Various batch processing tasks, intended primarily for …","Config used by the language server.","","rust-analyzer extensions to the LSP.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Loads a Cargo project into a static instance of analysis, …","","","","","","","","","Searches for <code>patterns</code>, printing debug information for any …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configuration for runnable items, such as <code>main</code> function …","","","Configuration for workspace symbol search requests.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Additional arguments for the <code>cargo</code>, e.g. <code>--release</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Custom command to be executed instead of <code>cargo</code> for …","","","","","","","","","","","","","","","What kind of symbol is being search for.","In what scope should the symbol be searched in.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The annotation id if this is an annotatednclude <em>all</em> crates, not just crates in the workspace.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","File position where SSR was invoked. Paths in <code>query</code> will …","","","","","A non-empty query string","","","","","","","","","","Current selections. Search/replace will be restricted to …i":[0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,2,1,2,1,1,1,2,1,2,1,0,2,1,2,2,2,1,0,2,1,2,1,1,1,0,2,2,2,2,0,2,2,2,0,2,0,1,2,1,2,1,2,1,2,0,3,3,3,3,3,3,3,3,3,0,0,3,3,3,3,3,4,0,0,5,0,0,0,6,0,0,7,0,4,6,0,5,0,0,8,7,9,10,9,6,8,7,11,4,12,5,13,14,10,9,6,8,7,11,4,12,5,13,14,9,9,9,9,13,12,9,9,9,6,8,7,11,4,12,5,13,14,9,6,8,7,11,4,12,5,13,14,9,9,9,9,9,8,7,10,10,9,6,8,7,11,4,12,5,13,14,10,9,6,8,7,11,4,12,5,13,14,9,9,9,9,9,9,10,9,6,8,7,11,4,12,5,13,14,6,8,7,6,8,7,11,9,9,9,9,6,8,7,11,4,12,5,13,14,10,9,6,6,6,8,7,11,4,12,5,13,14,10,7,9,9,9,9,9,8,7,10,9,6,8,7,11,4,12,5,13,14,9,9,10,9,6,8,7,11,4,12,5,13,14,9,9,9,9,9,9,9,8,6,8,7,9,8,7,9,9,13,9,9,8,7,8,9,8,7,9,10,8,7,9,9,14,14,9,9,10,9,9,6,8,7,11,4,12,5,13,14,10,10,9,6,8,7,11,4,12,5,13,14,10,9,6,8,7,11,4,12,5,13,14,10,9,6,8,7,11,4,12,5,13,14,9,11,9,9,9,15,15,16,16,17,0,0,18,0,19,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,0,17,21,0,0,19,0,23,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,20,0,0,0,0,0,22,24,24,0,0,0,0,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,27,18,60,61,62,19,63,64,65,22,66,67,68,21,69,26,70,23,25,71,72,73,74,20,75,76,24,17,77,78,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,27,18,60,61,62,19,63,64,65,22,66,67,68,21,69,26,70,23,25,71,72,73,74,20,75,76,24,17,77,78,60,60,68,68,65,22,66,67,68,21,69,26,70,23,25,71,72,76,24,17,65,22,66,67,68,21,69,26,70,23,25,71,72,76,24,17,67,72,71,78,66,66,68,26,71,72,76,78,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,27,18,60,61,62,19,63,64,65,22,66,67,68,21,69,26,70,23,25,71,72,73,74,20,75,76,24,17,77,78,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,27,18,60,61,62,19,63,64,65,22,66,67,68,21,69,26,70,23,25,71,72,73,74,20,75,76,24,17,77,78,51,52,53,54,55,56,57,58,59,27,18,60,61,62,19,63,64,65,22,66,67,68,21,69,26,70,23,25,71,72,73,74,20,76,24,17,77,78,74,68,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,27,18,60,61,62,19,63,64,65,22,66,67,68,21,69,26,70,23,25,71,72,73,74,20,75,76,24,17,77,78,66,69,19,65,22,66,67,68,21,69,26,70,23,25,71,72,76,24,17,19,65,22,67,68,21,69,26,70,23,76,24,17,60,56,60,51,52,53,54,55,56,57,58,59,27,18,60,61,62,19,63,64,66,67,68,21,69,26,70,23,25,71,72,73,74,20,75,76,24,17,77,78,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,27,18,60,61,62,19,63,64,65,22,66,67,68,21,69,26,70,23,25,71,72,73,74,20,75,76,24,17,77,78,53,77,66,65,25,67,77,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,27,18,60,61,62,19,63,64,65,22,66,67,68,21,69,26,70,23,25,71,72,73,74,20,75,76,24,17,77,78,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,27,18,60,61,62,19,63,64,65,22,66,67,68,21,69,26,70,23,25,71,72,73,74,20,75,76,24,17,77,78,66,27,63,66,27,63,27,65,56,65,66,67,68,21,69,26,70,23,25,71,72,76,26,60,64,76,55,59,64,70,77,57,64,76,65,52,63,26,74,58,61,76,76,64,51,52,53,54,55,56,57,58,59,27,18,60,61,62,19,63,64,65,22,66,67,68,21,69,26,70,23,25,71,72,73,74,20,76,24,17,77,0,51,52,54,55,57,58,59,62,69,70,73,74,66,71,65,22,66,67,68,21,69,26,70,23,25,71,72,76,24,17,72,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,27,18,60,61,62,19,63,64,65,22,66,67,68,21,69,26,70,23,25,71,72,73,74,20,75,76,24,17,77,78,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,27,18,60,61,62,19,63,64,65,22,66,67,68,21,69,26,70,23,25,71,72,73,74,20,75,76,24,17,77,78,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,27,18,60,61,62,19,63,64,65,22,66,67,68,21,69,26,70,23,25,71,72,73,74,20,75,76,24,17,77,78,70,76,60],"f":[null,null,null,null,[[["str",15],["value",4]],[["result",6],["deserializeowned",8]]],null,[[["config",3],["connection",3]],["result",6]],[[["config",3]],["servercapabilities",3]],null,null,null,null,null,null,[[["vec",3],["ssrrule",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["verbosity",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["path",3],["bool",15]],["result",6]],[[["usize",15]]],[[["usize",15]]],null,null,[[]],[[]],[[["bool",15]],["result",6]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,[[["bool",15]],["result",6]],null,null,[[["verbosity",4]],["result",6]],[[["option",4],["vec",3],["string",3],["ssrpattern",3]],["result",6]],null,[[],["result",6]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],null,[[["loadcargoconfig",3],["projectworkspace",4],["cargoconfig",3],["fn",8]],["result",6]],[[["path",3],["loadcargoconfig",3],["fn",8],["cargoconfig",3]],["result",6]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["assistconfig",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],null,[[],["cargoconfig",3]],[[],["bool",15]],null,null,[[],["bool",15]],[[],["clientcommandsconfig",3]],[[],["config",3]],[[],["linkedproject",4]],[[],["lensconfig",3]],[[],["hoveractionsconfig",3]],[[],["filesconfig",3]],[[],["fileswatcher",4]],[[],["notificationsconfig",3]],[[],["rustfmtconfig",4]],[[],["runnablesconfig",3]],[[],["workspacesymbolconfig",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["completionconfig",3]],null,null,null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["diagnosticsconfig",3]],[[],["diagnosticsmapconfig",3]],[[],["bool",15]],[[],["bool",15]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["linkedproject",4]],["bool",15]],[[["lensconfig",3]],["bool",15]],[[["hoveractionsconfig",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["bool",15]],[[],["filesconfig",3]],[[],[["flycheckconfig",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["projectjson",3]]],[[["projectmanifest",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["bool",15]],[[],["highlightrelatedconfig",3]],[[],["bool",15]],[[],["hoverconfig",3]],[[],["hoveractionsconfig",3]],null,null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["inlayhintsconfig",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["joinlinesconfig",3]],[[],["value",4]],[[],["lensconfig",3]],[[],["bool",15]],[[],[["vec",3],["linkedproject",4]]],[[],["bool",15]],[[],[["usize",15],["option",4]]],null,[[["linkedproject",4]],["bool",15]],[[["lensconfig",3]],["bool",15]],[[["hoveractionsconfig",3]],["bool",15]],[[["clientcapabilities",3],["abspathbuf",3]]],[[],["bool",15]],[[],["bool",15]],[[],["notificationsconfig",3]],[[],["offsetencoding",4]],null,[[],["option",4]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,[[],["bool",15]],null,[[],["bool",15]],[[],["bool",15]],[[],["runnablesconfig",3]],[[],["rustfmtconfig",4]],null,null,[[],["bool",15]],[[],["bool",15]],null,[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["value",4]]],null,[[],["bool",15]],[[],["bool",15]],[[],["workspacesymbolconfig",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,[[],["serverstatusparams",3]],[[],["health",4]],[[],["codeaction",3]],[[],["codeactiondata",3]],[[],["snippetworkspaceedit",3]],[[],["snippetdocumentchangeoperation",4]],[[],["snippettextdocumentedit",3]],[[],["snippettextedit",3]],[[],["hoverparams",3]],[[],["positionorrange",4]],[[],["hover",3]],[[],["commandlinkgroup",3]],[[],["commandlink",3]],[[],["workspacesymbolparams",3]],[[],["workspacesymbolsearchscope",4]],[[],["workspacesymbolsearchkind",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[],["codeaction",3]],[[],["snippetworkspaceedit",3]],[[],["snippettextedit",3]],[[],["commandlinkgroup",3]],[[],["commandlink",3]],[[],["workspacesymbolparams",3]],[[],["clientcommandoptions",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,null,[[["inlaykind",4]],["bool",15]],[[["serverstatusparams",3]],["bool",15]],[[["health",4]],["bool",15]],[[["codeaction",3]],["bool",15]],[[["codeactiondata",3]],["bool",15]],[[["snippetworkspaceedit",3]],["bool",15]],[[["snippetdocumentchangeoperation",4]],["bool",15]],[[["snippettextdocumentedit",3]],["bool",15]],[[["snippettextedit",3]],["bool",15]],[[["hoverparams",3]],["bool",15]],[[["positionorrange",4]],["bool",15]],[[["hover",3]],["bool",15]],[[["commandlinkgroup",3]],["bool",15]],[[["commandlink",3]],["bool",15]],[[["workspacesymbolparams",3]],["bool",15]],[[["workspacesymbolsearchscope",4]],["bool",15]],[[["workspacesymbolsearchkind",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[["serverstatusparams",3]],["bool",15]],[[["codeaction",3]],["bool",15]],[[["codeactiondata",3]],["bool",15]],[[["snippetworkspaceedit",3]],["bool",15]],[[["snippetdocumentchangeoperation",4]],["bool",15]],[[["snippettextdocumentedit",3]],["bool",15]],[[["snippettextedit",3]],["bool",15]],[[["hoverparams",3]],["bool",15]],[[["positionorrange",4]],["bool",15]],[[["hover",3]],["bool",15]],[[["commandlinkgroup",3]],["bool",15]],[[["commandlink",3]],["bool",15]],[[["workspacesymbolparams",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["clientcapabilities",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null],"p":[[4,"Verbosity"],[3,"AnalysisStatsCmd"],[3,"LoadCargoConfig"],[4,"FilesWatcher"],[4,"RustfmtConfig"],[4,"LinkedProject"],[3,"HoverActionsConfig"],[3,"LensConfig"],[3,"Config"],[3,"ClientCommandsConfig"],[3,"FilesConfig"],[3,"NotificationsConfig"],[3,"RunnablesConfig"],[3,"WorkspaceSymbolConfig"],[13,"CustomCommand"],[13,"Rustfmt"],[4,"WorkspaceSymbolSearchKind"],[4,"RunnableKind"],[4,"InlayKind"],[4,"MoveItemDirection"],[4,"SnippetDocumentChangeOperation"],[4,"Health"],[4,"PositionOrRange"],[4,"WorkspaceSymbolSearchScope"],[3,"Hover"],[3,"SnippetTextEdit"],[3,"Runnable"],[4,"AnalyzerStatus"],[4,"MemoryUsage"],[4,"ReloadWorkspace"],[4,"SyntaxTree"],[4,"ViewHir"],[4,"ViewCrateGraph"],[4,"ViewItemTree"],[4,"ExpandMacro"],[4,"MatchingBrace"],[4,"ParentModule"],[4,"JoinLines"],[4,"OnEnter"],[4,"Runnables"],[4,"RelatedTests"],[4,"InlayHints"],[4,"Ssr"],[4,"ServerStatusNotification"],[4,"CodeActionRequest"],[4,"CodeActionResolveRequest"],[4,"HoverRequest"],[4,"ExternalDocs"],[4,"OpenCargoToml"],[4,"MoveItem"],[3,"AnalyzerStatusParams"],[3,"SyntaxTreeParams"],[3,"ViewCrateGraphParams"],[3,"ViewItemTreeParams"],[3,"ExpandMacroParams"],[3,"ExpandedMacro"],[3,"MatchingBraceParams"],[3,"JoinLinesParams"],[3,"RunnablesParams"],[3,"CargoRunnable"],[3,"TestInfo"],[3,"InlayHintsParams"],[3,"InlayHint"],[3,"SsrParams"],[3,"ServerStatusParams"],[3,"CodeAction"],[3,"CodeActionData"],[3,"SnippetWorkspaceEdit"],[3,"SnippetTextDocumentEdit"],[3,"HoverParams"],[3,"CommandLinkGroup"],[3,"CommandLink"],[3,"OpenCargoTomlParams"],[3,"MoveItemParams"],[4,"WorkspaceSymbol"],[3,"WorkspaceSymbolParams"],[3,"CompletionResolveData"],[3,"ClientCommandOptions"]]},\
"sourcegen":{"doc":"rust-analyzer relies heavily on source code generation.","t":[3,3,5,11,11,11,11,12,5,11,11,12,11,11,11,11,12,11,11,12,12,5,5,5,5,11,11,11,11,11,11,11],"n":["CommentBlock","Location","add_preamble","borrow","borrow","borrow_mut","borrow_mut","contents","ensure_file_contents","extract","extract_untagged","file","fmt","fmt","from","from","id","into","into","line","line","list_files","list_rust_files","project_root","reformat","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["sourcegen","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","Checks that the <code>file</code> has the specified <code>contents</code>. If that …","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,2,1,2,1,0,1,1,2,2,2,1,2,1,1,2,1,2,0,0,0,0,2,1,2,1,2,1,2],"f":[null,null,[[["str",15],["string",3]],["string",3]],[[]],[[]],[[]],[[]],null,[[["path",3],["str",15]]],[[["str",15]],[["commentblock",3],["vec",3]]],[[["str",15]],[["commentblock",3],["vec",3]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[]],[[]],null,null,[[["path",3]],[["pathbuf",3],["vec",3]]],[[["path",3]],[["pathbuf",3],["vec",3]]],[[],["pathbuf",3]],[[["string",3]],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"CommentBlock"],[3,"Location"]]},\
"stdx":{"doc":"Missing batteries for standard libraries.","t":[12,3,14,11,11,5,11,11,11,14,5,11,14,11,14,11,11,5,5,14,0,5,0,5,5,5,5,5,11,11,11,3,11,11,11,5,11,11,11,11,11,5],"n":["0","JodChild","always","borrow","borrow_mut","defer","deref","deref_mut","drop","eprintln","equal_range_by","fmt","format_to","from","impl_from","into","into_inner","is_ci","iter_eq_by","never","panic_context","print_backtrace","process","replace","timeit","to_lower_snake_case","to_upper_snake_case","trim_indent","try_from","try_into","type_id","PanicContext","borrow","borrow_mut","drop","enter","from","into","try_from","try_into","type_id","streaming_output"],"q":["stdx","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stdx::panic_context","","","","","","","","","","stdx::process"],"d":["","","Asserts that the condition is always true and returns its …","","","","","","","","","","Appends formatted string to a <code>String</code>.","","Generates <code>From</code> impls for <code>Enum E { Foo(Foo), Bar(Bar) }</code> …","","","","","Asserts that the condition is never true and returns its …","A micro-crate to enhance panic messages with context info.","","Read both stdout and stderr of child without deadlocks.","","","","","","","","","","","","","","","","","","",""],"i":[1,0,0,1,1,0,1,1,1,0,0,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,2,2,2,0,2,2,2,2,2,0],"f":[null,null,null,[[]],[[]],[[["fnonce",8]]],[[],["child",3]],[[],["child",3]],[[]],null,[[],[["usize",15],["range",3]]],[[["formatter",3]],["result",6]],null,[[]],null,[[]],[[],["child",3]],[[],["bool",15]],[[],["bool",15]],null,null,[[]],null,[[["char",15],["str",15],["string",3]]],[[["str",15]]],[[["str",15]],["string",3]],[[["str",15]],["string",3]],[[["str",15]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],[[]],[[["string",3]],["paniccontext",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["command",3],["fnmut",8]],[["result",6],["output",3]]]],"p":[[3,"JodChild"],[3,"PanicContext"]]},\
"syntax":{"doc":"Syntax Tree library used throughout the rust analyzer.","tn":["ABI","AMP","AMP2","AMPEQ","ARG_LIST","ARRAY_EXPR","ARRAY_TYPE","ASSOC_ITEM_LIST","ASSOC_TYPE_ARG","ASYNC_KW","AS_KW","AT","ATTR","AUTO_KW","AWAIT_EXPR","AWAIT_KW","AstPtr","BANG","BIN_EXPR","BLOCK_EXPR","BOX_EXPR","BOX_KW","BOX_PAT","BREAK_EXPR","BREAK_KW","BYTE","BYTE_STRING","Between","CALL_EXPR","CARET","CARETEQ","CAST_EXPR","CHAR","CLOSURE_EXPR","COLON","COLON2","COMMA","COMMENT","CONDITION","CONST","CONST_ARG","CONST_BLOCK_PAT","CONST_KW","CONST_PARAM","CONTINUE_EXPR","CONTINUE_KW","CRATE_KW","DEFAULT_KW","DOLLAR","DOT","DOT2","DOT2EQ","DOT3","DYN_KW","DYN_TRAIT_TYPE","Direction","EFFECT_EXPR","ELSE_KW","ENUM","ENUM_KW","EQ","EQ2","ERROR","EXISTENTIAL_KW","EXPR_STMT","EXTERN_BLOCK","EXTERN_CRATE","EXTERN_ITEM_LIST","EXTERN_KW","Enter","FALSE_KW","FAT_ARROW","FIELD_EXPR","FLOAT_NUMBER","FN","FN_KW","FN_PTR_TYPE","FOR_EXPR","FOR_KW","FOR_TYPE","GENERIC_ARG_LIST","GENERIC_PARAM","GENERIC_PARAM_LIST","GTEQ","GreenNode","IDENT","IDENT_PAT","IF_EXPR","IF_KW","IMPL","IMPL_KW","IMPL_TRAIT_TYPE","INDEX_EXPR","INFER_TYPE","INT_NUMBER","IN_KW","ITEM_LIST","LABEL","LET_KW","LET_STMT","LIFETIME","LIFETIME_ARG","LIFETIME_IDENT","LIFETIME_PARAM","LITERAL","LITERAL_PAT","LOOP_EXPR","LOOP_KW","LTEQ","L_ANGLE","L_BRACK","L_CURLY","L_DOLLAR","L_PAREN","Leave","MACRO_ARM","MACRO_CALL","MACRO_DEF","MACRO_ITEMS","MACRO_KW","MACRO_PAT","MACRO_RULES","MACRO_RULES_KW","MACRO_STMTS","MACRO_TYPE","MATCH_ARM","MATCH_ARM_LIST","MATCH_EXPR","MATCH_GUARD","MATCH_KW","META","METHOD_CALL_EXPR","MINUS","MINUSEQ","MODULE","MOD_KW","MOVE_KW","MUT_KW","NAME","NAME_REF","NEQ","NEVER_TYPE","Next","Node","NodeOrToken","None","OR_PAT","PARAM","PARAM_LIST","PAREN_EXPR","PAREN_PAT","PAREN_TYPE","PATH","PATH_EXPR","PATH_PAT","PATH_SEGMENT","PATH_TYPE","PERCENT","PERCENTEQ","PIPE","PIPE2","PIPEEQ","PLUS","PLUSEQ","POUND","PREFIX_EXPR","PTR_TYPE","PUB_KW","Parse","Prev","QUESTION","RANGE_EXPR","RANGE_PAT","RAW_KW","RECORD_EXPR","RECORD_EXPR_FIELD","RECORD_EXPR_FIELD_LIST","RECORD_FIELD","RECORD_FIELD_LIST","RECORD_PAT","RECORD_PAT_FIELD","RECORD_PAT_FIELD_LIST","REF_EXPR","REF_KW","REF_PAT","REF_TYPE","RENAME","REST_PAT","RETURN_EXPR","RETURN_KW","RET_TYPE","R_ANGLE","R_BRACK","R_CURLY","R_DOLLAR","R_PAREN","SELF_KW","SELF_PARAM","SEMICOLON","SHEBANG","SHL","SHLEQ","SHR","SHREQ","SLASH","SLASHEQ","SLICE_PAT","SLICE_TYPE","SOURCE_FILE","STAR","STAREQ","STATIC","STATIC_KW","STRING","STRUCT","STRUCT_KW","SUPER_KW","Single","SmolStr","SourceFile","SyntaxElement","SyntaxElementChildren","SyntaxError","SyntaxKind","SyntaxNode","SyntaxNodeChildren","SyntaxNodePtr","SyntaxText","SyntaxToken","SyntaxTreeBuilder","T","THIN_ARROW","TILDE","TOKEN_TREE","TRAIT","TRAIT_KW","TRUE_KW","TRY_EXPR","TRY_KW","TUPLE_EXPR","TUPLE_FIELD","TUPLE_FIELD_LIST","TUPLE_PAT","TUPLE_STRUCT_PAT","TUPLE_TYPE","TYPE_ALIAS","TYPE_ARG","TYPE_BOUND","TYPE_BOUND_LIST","TYPE_KW","TYPE_PARAM","TextRange","TextSize","Token","Token","TokenAtOffset","TokenText","UNDERSCORE","UNION","UNION_KW","UNSAFE_KW","USE","USE_KW","USE_TREE","USE_TREE_LIST","VARIANT","VARIANT_LIST","VISIBILITY","WHERE_CLAUSE","WHERE_KW","WHERE_PRED","WHILE_EXPR","WHILE_KW","WHITESPACE","WILDCARD_PAT","WalkEvent","YIELD_EXPR","YIELD_KW","add","add","add","add","add_assign","add_assign","add_assign","algo","ancestors","ancestors","as_node","as_ref","as_str","as_str","as_token","ast","at","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast","char_at","checked_add","checked_add","checked_sub","checked_sub","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","contains","contains_char","contains_inclusive","contains_range","cover","cover_offset","debug_dump","default","default","default","default","deref","deref","deref","deserialize","detach","detach","display","empty","end","end_bound","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","errors","find_char","finish","finish_node","first_token","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_chunk","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_char","from_iter","from_iter","from_iter","from_iter","from_keyword","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","index","index","intersect","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_node","into_token","is_empty","is_empty","is_empty","is_heap_allocated","is_keyword","is_literal","is_punct","is_trivia","kind","kind","kind","kind","kind","last_token","left_biased","len","len","len","len","lex_single_syntax_kind","lex_single_valid_syntax_kind","map","map","match_ast","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new_at_offset","new_inline","new_inline_from_ascii","next","next_sibling_or_token","next_sibling_or_token","of","ok","ordering","parent","parent","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","prev_sibling_or_token","prev_sibling_or_token","range","reparse","right_biased","serialize","size_hint","slice","start","start_bound","start_node","sub","sub","sub","sub","sub_assign","sub_assign","sum","syntax_element","syntax_element","syntax_element","syntax_node","syntax_node_ptr","ted","text_len","text_len","text_range","text_range","to_node","to_node","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_syntax","token","tokenize","tree","try_fold_chunks","try_for_each_chunk","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","up_to","utils","with_range","After","Before","First","InsertPosition","Last","TreeDiff","ancestors_at_offset","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","diff","eq","equivalent","find_node_at_offset","find_node_at_range","fmt","fmt","from","from","has_errors","insert_children","into","into","into_text_edit","is_empty","least_common_ancestor","ne","neighbor","non_trivia_sibling","replace_children","skip_trivia_token","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","ALL","Abi","AddAssign","Addition","Adt","Align","ArgList","ArgListOwner","ArrayExpr","ArrayExpr","ArrayExprKind","ArrayType","ArrayType","Assignment","AssocItem","AssocItemList","AssocTypeArg","AssocTypeArg","AstChildren","AstNode","AstToken","Asterisk","Async","Attr","AttrKind","AttrsOwner","AttrsOwnerNode","AwaitExpr","AwaitExpr","BinExpr","BinExpr","BinOp","Binary","BitAndAssign","BitOrAssign","BitXorAssign","BitwiseAnd","BitwiseOr","BitwiseXor","Block","Block","BlockExpr","BlockExpr","Bool","BooleanAnd","BooleanOr","BoxExpr","BoxExpr","BoxPat","BoxPat","BreakExpr","BreakExpr","Byte","ByteString","ByteString","CallExpr","CallExpr","CastExpr","CastExpr","Char","Close","ClosureExpr","ClosureExpr","Colon","Comment","CommentIter","CommentKind","CommentPlacement","CommentShape","Condition","Const","Const","Const","Const","ConstArg","ConstArg","ConstBlockPat","ConstBlockPat","ConstParam","ConstParam","ContinueExpr","ContinueExpr","CrateKw","Decimal","Deref","DivAssign","Division","DocCommentsOwner","DollarSign","Dot","DynTraitType","DynTraitType","Effect","EffectExpr","EffectExpr","ElementList","ElseBranch","Enum","Enum","Enum","EqualityTest","Exclusive","Expr","ExprStmt","ExprStmt","ExternBlock","ExternBlock","ExternCrate","ExternCrate","ExternItem","ExternItemList","FieldExpr","FieldExpr","FieldKind","FieldList","Fill","FloatNumber","FloatNumber","Fn","Fn","Fn","Fn","FnPtrType","FnPtrType","ForExpr","ForExpr","ForType","ForType","ForType","FormatSpecifier","GenericArg","GenericArgList","GenericParam","GenericParamList","GenericParamsOwner","GreaterEqualTest","GreaterTest","HasFormatSpecifier","Hexadecimal","IdentPat","IdentPat","Identifier","IfExpr","IfExpr","IfExpr","Impl","Impl","ImplTraitType","ImplTraitType","In","Inclusive","Index","IndexExpr","IndexExpr","InferType","InferType","Inner","Inner","IntNumber","IntNumber","Integer","IsString","Item","Item","ItemList","Label","Label","LeftShift","LesserEqualTest","LesserTest","LetStmt","LetStmt","Lifetime","Lifetime","Lifetime","LifetimeArg","LifetimeArg","LifetimeParam","LifetimeParam","Line","Literal","Literal","LiteralKind","LiteralPat","LiteralPat","LoopBodyOwner","LoopExpr","LoopExpr","Macro","MacroCall","MacroCall","MacroCall","MacroCall","MacroCall","MacroDef","MacroDef","MacroDef","MacroItems","MacroPat","MacroPat","MacroRules","MacroRules","MacroRules","MacroStmts","MacroStmts","MacroType","MacroType","MatchArm","MatchArmList","MatchExpr","MatchExpr","MatchGuard","Meta","MethodCallExpr","MethodCallExpr","Module","Module","ModuleItemOwner","MulAssign","Multiplication","MutRef","Name","Name","Name","Name","Name","NameLike","NameOrNameRef","NameOwner","NameRef","NameRef","NameRef","Neg","NegatedEqualityTest","NeverType","NeverType","Not","NumberSign","Octal","Open","OrPat","OrPat","Outer","Outer","Owned","Param","ParamList","ParenExpr","ParenExpr","ParenPat","ParenPat","ParenType","ParenType","Pat","Path","PathExpr","PathExpr","PathPat","PathPat","PathSegment","PathSegmentKind","PathType","PathType","PathType","PrefixExpr","PrefixExpr","PrefixOp","PtrType","PtrType","Pub","PubCrate","PubSelf","PubSuper","QuestionMark","QuoteOffsets","Radix","RangeExpr","RangeExpr","RangeOp","RangePat","RangePat","Record","RecordExpr","RecordExpr","RecordExprField","RecordExprFieldList","RecordField","RecordFieldList","RecordFieldList","RecordPat","RecordPat","RecordPatField","RecordPatFieldList","Ref","RefExpr","RefExpr","RefPat","RefPat","RefType","RefType","RemAssign","Remainder","Rename","Repeat","RestPat","RestPat","RetType","ReturnExpr","ReturnExpr","RightShift","SelfKw","SelfParam","SelfParamKind","ShlAssign","ShrAssign","Sign","SlicePat","SlicePat","SlicePatComponents","SliceType","SliceType","SourceFile","Static","Static","Static","Stmt","String","String","Struct","Struct","Struct","StructKind","SubAssign","Subtraction","SuperKw","TokenTree","Trait","Trait","Try","TryExpr","TryExpr","Tuple","TupleExpr","TupleExpr","TupleField","TupleFieldList","TupleFieldList","TuplePat","TuplePat","TupleStructPat","TupleStructPat","TupleType","TupleType","Type","Type","TypeAlias","TypeAlias","TypeAlias","TypeAlias","TypeArg","TypeArg","TypeBound","TypeBoundKind","TypeBoundList","TypeBoundsOwner","TypeParam","TypeParam","Union","Union","Union","Unit","Unsafe","Use","Use","UseTree","UseTreeList","Variant","VariantList","Visibility","VisibilityKind","VisibilityOwner","WhereClause","WherePred","WhileExpr","WhileExpr","Whitespace","WildcardPat","WildcardPat","YieldExpr","YieldExpr","Zero","abi","abi","abi","add_arm","add_field","add_generic_param","add_item","add_predicate","amp_token","amp_token","amp_token","amp_token","arg_list","arg_list","args","args","arms","as_name_ref","as_simple_atom","as_simple_call","as_single_name_ref","as_single_segment","as_token","as_token","as_token","as_tuple_field","assoc_item_list","assoc_item_list","assoc_items","async_token","async_token","async_token","async_token","at_token","attrs","attrs","auto_token","await_token","base","block_expr","block_expr","blocks","body","body","body","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","box_token","box_token","break_token","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","char_ranges","char_ranges","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_for_update","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_subtree","close_quote_text_range","close_quote_text_range","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","coloncolon_token","coloncolon_token","coloncolon_token","coloncolon_token","comma_token","comma_token","components","condition","condition","const_params","const_token","const_token","const_token","const_token","const_token","const_token","const_token","const_token","const_token","contents","continue_token","crate_token","crate_token","crate_token","default_token","default_token","default_token","default_token","default_type","default_val","doc","doc_comment","doc_comments","doc_comments","dot_token","dot_token","dot_token","dotdot_token","dotdot_token","dotdot_token","dotdotdot_token","dyn_token","edit","edit_in_place","effect","else_branch","else_token","end","end","enum_token","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","excl_token","excl_token","excl_token","excl_token","excl_token","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","exprs","extern_item_list","extern_items","extern_token","extern_token","fat_arrow_token","field_access","field_list","field_list","field_name","field_name","fields","fields","fields","fields","fields","fields","fields","fields","first_qualifier_or_self","first_segment","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_token","fn_token","for_field_name","for_field_name","for_field_name_ref","for_name_ref","for_token","for_token","for_token","for_token","for_trait_name_ref","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_syntax_node","generic_arg_list","generic_arg_list","generic_args","generic_param_list","generic_param_list","generic_param_list","generic_param_list","generic_param_list","generic_param_list","generic_params","get_or_create_assoc_item_list","get_or_create_body","get_or_create_generic_arg_list","get_or_create_generic_param_list","get_or_create_generic_param_list","get_or_create_generic_param_list","get_or_create_generic_param_list","get_or_create_generic_param_list","get_or_create_where_clause","get_or_create_where_clause","get_or_create_where_clause","get_or_create_where_clause","get_or_create_where_clause","guard","has_atom_attr","has_atom_attr","has_inner_comment","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","ident_token","ident_token","if_token","if_token","impl_token","impl_token","in_token","in_token","index","index_token","initializer","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_assignment","is_block","is_block_like","is_empty","is_eq_to","is_inner","is_inner","is_line","is_outer","is_outer","is_raw","is_raw","is_simple_glob","is_simple_ident","is_simple_path","is_standalone","item_list","items","items","items","iterable","kind","kind","kind","kind","kind","kind","kind","kind","kind","kind","l_angle_token","l_angle_token","l_angle_token","l_brack_token","l_brack_token","l_brack_token","l_brack_token","l_brack_token","l_brack_token","l_brack_token","l_curly_token","l_curly_token","l_curly_token","l_curly_token","l_curly_token","l_curly_token","l_curly_token","l_curly_token","l_curly_token","l_curly_token","l_curly_token","l_paren_token","l_paren_token","l_paren_token","l_paren_token","l_paren_token","l_paren_token","l_paren_token","l_paren_token","l_paren_token","l_paren_token","l_paren_token","l_paren_token","label","label","label","left_delimiter_token","let_token","let_token","lex_format_specifier","lex_format_specifier","lhs","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime_bounds","lifetime_ident_token","lifetime_params","literal","loop_body","loop_body","loop_token","macro_call","macro_call","macro_rules_token","macro_token","make","map_range_up","match_arm_list","match_token","meta","mod_token","move_token","mut_token","mut_token","mut_token","mut_token","mut_token","mut_token","mut_token","name","name","name","name_ref","name_ref","name_ref","name_ref","name_ref","name_ref","name_ref","name_ref","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","next","next","op_details","op_kind","op_kind","op_kind","op_token","op_token","op_token","open_quote_text_range","open_quote_text_range","param_list","param_list","param_list","param_list","params","parent","parent_enum","parent_path","parent_path","parent_record_lit","parent_use_tree","parse","parse","parse","parse","parse","parse","parse","parse","pat","pat","pat","pat","pat","pat","pat","pat","pat","pat","path","path","path","path","path","path","path","path","path","path","path","path_type","pats","pats","pipe_token","pound_token","predicates","prefix","prefix","prefix","preorder","pub_token","push_front","qualifier","qualifiers","question_mark_token","question_mark_token","quote_offsets","quote_offsets","quotes","r_angle_token","r_angle_token","r_angle_token","r_brack_token","r_brack_token","r_brack_token","r_brack_token","r_brack_token","r_brack_token","r_brack_token","r_curly_token","r_curly_token","r_curly_token","r_curly_token","r_curly_token","r_curly_token","r_curly_token","r_curly_token","r_curly_token","r_curly_token","r_curly_token","r_paren_token","r_paren_token","r_paren_token","r_paren_token","r_paren_token","r_paren_token","r_paren_token","r_paren_token","r_paren_token","r_paren_token","r_paren_token","r_paren_token","radix","raw_token","receiver","record_expr_field_list","record_field_list","record_pat_field_list","ref_token","remove","remove","remove","remove","rename","rename","replace_op","ret_type","ret_type","ret_type","ret_type","return_token","rhs","right_delimiter_token","segment","segments","self_param","self_token","self_token","self_token","self_ty","semicolon_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","shape","shebang_token","simple_name","slice","spans_multiple_lines","split_prefix","spread","star_token","star_token","start","start","statements","statements","static_token","static_token","struct_token","sub_exprs","suffix","suffix","suffix","super_token","super_token","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","tail_expr","text","text","text","text","text","text_range_between_quotes","text_range_between_quotes","then_branch","thin_arrow_token","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token","token_tree","token_tree","token_tree","token_tree","top_path","trait_","trait_token","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_token","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","type_bound_list","type_bound_list","type_bound_list","type_bound_list","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_params","type_token","underscore_token","underscore_token","underscore_token","underscore_token","union_token","unsafe_token","unsafe_token","unsafe_token","unsafe_token","unsafe_token","use_token","use_tree","use_tree_list","use_trees","value","value","value","variant_list","variants","visibility","visibility","walk","walk","walk","walk_patterns","where_clause","where_clause","where_token","while_token","yield_token","initializer","repeat","trait_ref","type_ref","0","AstNodeEdit","IndentLevel","add","borrow","borrow_mut","clone","clone_into","dedent","fmt","fmt","from","from","from_element","from_node","from_token","indent","indent_level","into","is_zero","remove_attrs_and_docs","replace_children","reset_indent","single","to_owned","to_string","try_from","try_into","type_id","GenericParamsOwnerEdit","get_or_create_generic_param_list","get_or_create_where_clause","arg_list","assoc_item_list","block_expr","condition","expr_assignment","expr_break","expr_call","expr_continue","expr_empty_block","expr_for_loop","expr_if","expr_literal","expr_match","expr_method_call","expr_paren","expr_path","expr_prefix","expr_ref","expr_return","expr_stmt","expr_try","expr_tuple","expr_unit","ext","fn_","generic_param_list","ident_pat","impl_trait","let_stmt","lifetime","lifetime_param","literal_pat","match_arm","match_arm_list","match_arm_with_guard","name","name_ref","param","param_list","path_concat","path_from_segments","path_from_text","path_pat","path_qualified","path_segment","path_segment_crate","path_segment_self","path_segment_super","path_unqualified","record_expr","record_expr_field","record_expr_field_list","record_field","record_field_list","record_pat","record_pat_field","record_pat_field_list","record_pat_with_fields","ret_type","struct_","token","tokens","tuple_field","tuple_field_list","tuple_pat","tuple_struct_pat","ty","ty_path","ty_ref","ty_tuple","ty_unit","type_param","use_","use_tree","use_tree_glob","use_tree_list","variant","visibility_pub","visibility_pub_crate","where_clause","where_pred","wildcard_pat","empty_block_expr","expr_todo","expr_unreachable","ident_path","simple_ident_pat","ty_bool","ty_option","ty_result","WsBuilder","blank_line","borrow","borrow_mut","doc_comment","from","into","literal","new","single_newline","single_space","try_from","try_into","type_id","whitespace","ws","const_label","fn_as_proc_macro_label","function_declaration","macro_label","type_label","Element","Position","after","append_child","append_child_raw","before","borrow","borrow_mut","first_child_of","fmt","from","insert","insert_all","insert_all_raw","insert_raw","into","last_child_of","remove","remove_all","remove_all_iter","replace","replace_all","replace_with_many","syntax_element","try_from","try_into","type_id","path_to_string_stripping_turbo_fish"],"q":["syntaxsyntax::algo","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syntax::astsyntax::ast::ArrayExprKind","","syntax::ast::PathSegmentKind","","syntax::ast::edit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syntax::ast::edit_in_place","","","syntax::ast::make","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syntax::ast::make::ext","","","","","","","","syntax::ast::make::tokens","","","","","","","","","","","","","","","","syntax::display","","","","","syntax::ted","","","","","","","","","","","","","","","","","","","","","","","","","","","syntax::utils"],"d":["","","","","","","","","","","","","","","","","Like <code>SyntaxNodePtr</code>, but remembers the type of node","","","","","","","","","","","Offset is exactly between two leaves.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fired before traversing the node.","","","","","","","","","","","","","","","Internal node in the immutable tree. It has other nodes …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fired after the node is traversed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","No leaves at offset – possible for the empty file.","","","","","","","","","","","","","","","","","","","","","","","<code>Parse</code> is the result of the parsing: a syntax tree and a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Only a single leaf at offset.","A <code>SmolStr</code> is a string type that has the following …","","","","Represents the result of unsuccessful tokenization, …","The kind of syntax node, e.g. <code>IDENT</code>, <code>USE_KW</code>, or <code>STRUCT</code>.","","","A pointer to a syntax node inside a file. It can be used …","","","","","","","","","","","","","","","","","","","","","","","","","A range in text, represented as a pair of [<code>TextSize</code>][…","A measure of text length. Also, equivalently, an index …","A token of Rust source.","","There might be zero, one or two leaves at a given offset.","","","","","","","","","","","","","","","","","","","","<code>WalkEvent</code> describes tree walking process.","","","","","","","","","","Collection of assorted algorithms for syntax trees.","","","","","","","","Abstract Syntax Tree, layered on top of untyped <code>SyntaxNode</code>…","Create a new <code>TextRange</code> with the given <code>offset</code> and <code>len</code> (…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add an offset to this range.","Checked addition. Returns <code>None</code> if overflow occurred.","Subtract an offset from this range.","Checked subtraction. Returns <code>None</code> if overflow occurred.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check if this range contains an offset.","","Check if this range contains an offset.","Check if this range completely contains another range.","Extends the range to cover <code>other</code> as well.","Extends the range to cover <code>other</code> offsets as well.","","","","","","","","","","","","This module contains utilities for turning SyntaxNodes …","Create a zero-length range at the specified offset (…","The end point of this range.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The range covered by both ranges, if it exists. If the …","","","","","","","","","","","","","","","","","","","","","","Check if this range is empty.","","","","","","","Returns kind of this element.","Returns kind of this element.","","","The kind of token.","","Convert to option, preferring the left leaf in case of a …","","The size of this range.","","The length of the token.","Returns <code>SyntaxKind</code> and <code>Option<SyntaxError></code> if <code>text</code> parses …","The same as <code>lex_single_syntax_kind()</code> but returns only …","","","Matches a <code>SyntaxNode</code> against an <code>ast</code> type.","","","","","","","","","","","","Creates new Node.","Creates a new <code>TextRange</code> with the given <code>start</code> and <code>end</code> (…","","","Constructs inline variant of <code>SmolStr</code>.","","","","","The text size of some primitive text-like object.","","Relative order of the two ranges (overlapping ranges are …","","","","","","","","","","","","","","Convert to option, preferring the right leaf in case of a …","","","","The start point of this range.","","","","","","","","","","","","","","","Primitive tree editor, ed for trees.","Returns the length of the text covered by this element.","Returns the length of the text covered by this element.","","","“Dereference” the pointer to get the node it points …","","","","","","","","","","","","","","","","","","","","","","","","","","","Break a string up into its component tokens. Beware that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a range up to the given end (<code>..end</code>).","A set of utils methods to reuse on other abstraction …","","","","","","","","Returns ancestors of the node at the offset, sorted by …","","","","","","","Finds a (potentially minimal) diff, which, applied to <code>from</code>…","","","Finds a node of specific Ast type at offset. Note that …","","","","","","","Adds specified children (tokens or nodes) to the current …","","","","","","","","Finds the first sibling in the given direction which is …","Replaces all nodes in <code>to_delete</code> with nodes from <code>to_insert</code>","Skip to next non <code>trivia</code> token","","","","","","","","","","The <code>+=</code> operator for assignment after addition","The <code>+</code> operator for addition","","","","","","","","","","The <code>=</code> operator for assignment","","","","","An iterator over <code>SyntaxNode</code> children of a particular AST …","The main trait to go from untyped <code>SyntaxNode</code>  to a typed …","Like <code>AstNode</code>, but wraps tokens rather than interior nodes.","","","","","","Basically an owned <code>dyn AttrsOwner</code> without extra boxing.","","","","","","","The <code>&=</code> operator for assignment after bitwise AND","The <code>|=</code> operator for assignment after bitwise OR","The <code>^=</code> operator for assignment after bitwise XOR","The <code>&</code> operator for bitwise AND","The <code>|</code> operator for bitwise OR","The <code>^</code> operator for bitwise XOR","","","","","","The <code>&&</code> operator for boolean AND","The <code>||</code> operator for boolean OR","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>*</code> operator for dereferencing","The <code>/=</code> operator for assignment after division","The <code>/</code> operator for division","","","","","","","","","","","","","","The <code>==</code> operator for equality testing","<code>..</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","for<’a> …","","","","","","","The <code>>=</code> operator for greater-equal testing","The <code>></code> operator for comparison","","","","","","","","","","","","","","<code>..=</code>","","","","","","","","","","","","","","","","","The <code><<</code> operator for left shift","The <code><=</code> operator for lesser-equal testing","The <code><</code> operator for comparison","","","","","’a","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>*=</code> operator for assignment after multiplication","The <code>*</code> operator for multiplication","&mut self","","","","","","","","","","","","The <code>-</code> operator for negation","The <code>!=</code> operator for equality testing","","","The <code>!</code> operator for logical inversion","","","","","","","","self","","","","","","","","","","","","","","","","","","","Trait","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&self","","","","","","","The <code>%=</code> operator for assignment after remainders","The <code>%</code> operator for remainder after division","","","","","","","","The <code>>></code> operator for right shift","","","","The <code><<=</code> operator for assignment after shifting left","The <code>>>=</code> operator for assignment after shifting right","","","","","","","","","","","","","","","","","","The <code>-=</code> operator for assignment after subtraction","The <code>-</code> operator for subtractioneturns the textual content of a doc comment node as a …","","","","","","","","","","","This module contains functions for editing syntax trees. …","Structural editing for asteals with field init shorthand","Deals with field init shorthandeturns <code>true</code> if the attr_kind is <code>Inner</code>.","","","Returns <code>true</code> if the attr_kind is <code>Outer</code>.","","","","","","false if the block is an intrinsic part of the syntax and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module contains free-standing functions for creating …eturns the parent ast::Module, this is different than …","","","","","","Returns <code>text</code>, parsed as a path, but only if it has no …","Returns <code>text</code>, parsed as an attribute, but only if it has …","","Returns <code>text</code>, parsed as an type reference, but only if it …","Returns <code>text</code>, parsed as an expression, but only if it has …","Returns <code>text</code>, parsed as an item, but only if it has no …","Returns <code>text</code>, parsed as statement, but only if it has no …","Returns <code>text</code>, parsed as a pattern, but only if it has no …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Preorder walk all the expression’s child expressions …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Splits off the given prefix, making it the path component …reorder walk all the type’s sub types.","Preorder walk all the expression’s child expressions.","Preorder walk all the pattern’s sub patterns.","Preorder walk all the expression’s child patterns.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","While the parent module defines basic atomic “…","","","","","","","","","","","","","","","","","","","Returns a <code>BindPat</code> if the path has just one segment, a …","","","","","","","","","","","","","","","","","","","","","","Creates a tuple of patterns from an iterator of patterns.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Utility trait to allow calling <code>ted</code> functions with …","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"if":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textsize",3]],[[["textsize",3]],["textsize",3]],[[]],[[["textsize",3],["delta",4]]],[[]],null,[[]],[[]],[[],["option",4]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["option",4]],null,[[["textsize",3]],["textrange",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["greennodedata",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["astptr",3],["option",4]]],[[],[["option",4],["astptr",3]]],[[],[["option",4],["parse",3]]],[[["textsize",3]],[["option",4],["char",15]]],[[["textsize",3]],[["textrange",3],["option",4]]],[[["textsize",3]],[["option",4],["textsize",3]]],[[["textsize",3]],[["textrange",3],["option",4]]],[[["textsize",3]],[["option",4],["textsize",3]]],[[],["syntaxerror",3]],[[],["token",3]],[[],["syntaxnodeptr",3]],[[],["astptr",3]],[[],["parse",3]],[[],["greennode",3]],[[],["syntaxtext",3]],[[],["nodeortoken",4]],[[],["direction",4]],[[],["walkevent",4]],[[],["tokenatoffset",4]],[[],["textrange",3]],[[],["textsize",3]],[[],["syntaxkind",4]],[[],["smolstr",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["ordering",4]],[[["token",3]],["ordering",4]],[[["nodeortoken",4]],["ordering",4]],[[["direction",4]],["ordering",4]],[[["textsize",3]],["ordering",4]],[[["syntaxkind",4]],["ordering",4]],[[["smolstr",3]],["ordering",4]],[[["textsize",3]],["bool",15]],[[["char",15]],["bool",15]],[[["textsize",3]],["bool",15]],[[["textrange",3]],["bool",15]],[[["textrange",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[],["string",3]],[[],["syntaxtreebuilder",3]],[[],["textrange",3]],[[],["textsize",3]],[[],["smolstr",3]],[[],["str",15]],[[],["greennodedata",3]],[[],["str",15]],[[],[["result",4],["smolstr",3]]],[[]],[[]],null,[[["textsize",3]],["textrange",3]],[[],["textsize",3]],[[],[["bound",4],["textsize",3]]],[[["tokentext",3]],["bool",15]],[[["string",3]],["bool",15]],[[],["bool",15]],[[["syntaxerror",3]],["bool",15]],[[["token",3]],["bool",15]],[[["syntaxnodeptr",3]],["bool",15]],[[["astptr",3]],["bool",15]],[[["parse",3]],["bool",15]],[[["greennode",3]],["bool",15]],[[],["bool",15]],[[["syntaxtext",3]],["bool",15]],[[["str",15]],["bool",15]],[[["nodeortoken",4]],["bool",15]],[[["direction",4]],["bool",15]],[[["textrange",3]],["bool",15]],[[["textsize",3]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[],["bool",15]],[[["str",15]],["bool",15]],[[["string",3]],["bool",15]],[[["string",3]],["bool",15]],[[["smolstr",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["textsize",3],["parseerror",3]]],[[]],[[["char",15]],[["option",4],["textsize",3]]],[[],[["parse",3],["syntaxnode",6]]],[[]],[[],[["syntaxtoken",3],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["astptr",3]],["syntaxnodeptr",3]],[[]],[[]],[[]],[[["cow",4],["greennodedata",3]],["greennode",3]],[[]],[[["syntaxtoken",3]],[["syntaxnode",3],["nodeortoken",4],["syntaxtoken",3]]],[[["greentoken",3]],[["nodeortoken",4],["greentokendata",3],["greennodedata",3]]],[[["syntaxnode",3]],[["syntaxnode",3],["nodeortoken",4],["syntaxtoken",3]]],[[["syntaxtoken",3]],[["syntaxnode",3],["nodeortoken",4],["syntaxtoken",3]]],[[["syntaxnode",3],["nodeortoken",4],["syntaxtoken",3]],[["syntaxnode",3],["nodeortoken",4],["syntaxtoken",3]]],[[["greentoken",3]],[["nodeortoken",4],["greennode",3],["greentoken",3]]],[[["cow",4],["greennodedata",3]],[["nodeortoken",4],["greennode",3],["greentoken",3]]],[[["greennode",3]],[["nodeortoken",4],["greentokendata",3],["greennodedata",3]]],[[["syntaxnode",3],["nodeortoken",4],["syntaxtoken",3]],[["syntaxnode",3],["nodeortoken",4],["syntaxtoken",3]]],[[["syntaxnode",3]],[["syntaxnode",3],["nodeortoken",4],["syntaxtoken",3]]],[[["greennode",3]],[["nodeortoken",4],["greennode",3],["greentoken",3]]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],["textsize",3]],[[]],[[["u16",15]],["syntaxkind",4]],[[]],[[]],[[],["smolstr",3]],[[["char",15]],[["option",4],["syntaxkind",4]]],[[],["smolstr",3]],[[],["smolstr",3]],[[],["smolstr",3]],[[],["smolstr",3]],[[["str",15]],[["option",4],["syntaxkind",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["textrange",3]],[["textrange",3],["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["syntaxkind",3]],[[],["syntaxkind",3]],[[],["syntaxkind",3]],[[]],null,[[],[["syntaxtoken",3],["option",4]]],[[],["option",4]],[[],["textsize",3]],[[],["textsize",3]],[[],["usize",15]],null,[[["str",15]],["option",4]],[[["str",15]],[["syntaxkind",4],["option",4]]],[[],["walkevent",4]],[[],["tokenatoffset",4]],null,[[["syntaxerror",3]],["bool",15]],[[["token",3]],["bool",15]],[[["syntaxnodeptr",3]],["bool",15]],[[["parse",3]],["bool",15]],[[["greennode",3]],["bool",15]],[[["nodeortoken",4]],["bool",15]],[[["textrange",3]],["bool",15]],[[["textsize",3]],["bool",15]],[[["textrange",3]]],[[["syntaxnode",6]],["syntaxnodeptr",3]],[[],["astptr",3]],[[["syntaxkind",3]],["greennode",3]],[[["textsize",3]],["textrange",3]],[[],["smolstr",3]],[[["textsize",3]]],[[["str",15]],["smolstr",3]],[[["usize",15]],["smolstr",3]],[[],["option",4]],[[],[["option",4],["nodeortoken",4]]],[[],[["option",4],["nodeortoken",4]]],[[],["textsize",3]],[[],[["result",4],["arc",3]]],[[["textrange",3]],["ordering",4]],[[],[["option",4],["syntaxnode",3]]],[[],[["syntaxnode",3],["option",4]]],[[],[["option",4],["ordering",4]]],[[["token",3]],[["option",4],["ordering",4]]],[[["nodeortoken",4]],[["option",4],["ordering",4]]],[[["direction",4]],[["option",4],["ordering",4]]],[[["textsize",3]],[["option",4],["ordering",4]]],[[["syntaxkind",4]],[["option",4],["ordering",4]]],[[["smolstr",3]],[["option",4],["ordering",4]]],[[],[["option",4],["nodeortoken",4]]],[[],[["option",4],["nodeortoken",4]]],[[],["textrange",3]],[[["indel",3]],[["sourcefile",3],["parse",3]]],[[],["option",4]],[[],["result",4]],[[]],[[],["syntaxtext",3]],[[],["textsize",3]],[[],[["bound",4],["textsize",3]]],[[["syntaxkind",4]]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textsize",3]],[[["textsize",3]],["textsize",3]],[[]],[[]],[[],["textsize",3]],[[],["syntaxelement",6]],[[],["syntaxelement",6]],[[],["syntaxelement",6]],[[],["syntaxnode",6]],[[],["syntaxnodeptr",3]],null,[[],["textsize",3]],[[],["textsize",3]],[[],["textrange",3]],[[],["textrange",3]],[[["syntaxnode",6]],["syntaxnode",6]],[[["syntaxnode",6]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["nodeortoken",4],["greennode",3],["greentoken",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],[["parse",3],["syntaxnode",6]]],[[["str",15],["syntaxkind",4]]],[[["str",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]],[["textsize",3],["tryfrominterror",3],["result",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["textsize",3]],["textrange",3]],null,[[["textrange",3]]],null,null,null,null,null,null,[[["syntaxnode",6],["textsize",3]]],[[]],[[]],[[]],[[]],[[],["insertposition",4]],[[]],[[["syntaxnode",6]],["treediff",3]],[[["insertposition",4]],["bool",15]],[[],["bool",15]],[[["syntaxnode",6],["textsize",3]],[["astnode",8],["option",4]]],[[["textrange",3],["syntaxnode",6]],[["astnode",8],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["syntaxnode",6]],["bool",15]],[[["syntaxnode",6],["insertposition",4],["syntaxelement",6]],["syntaxnode",6]],[[]],[[]],[[["texteditbuilder",3]]],[[],["bool",15]],[[["syntaxnode",6]],[["option",4],["syntaxnode",6]]],[[["insertposition",4]],["bool",15]],[[["direction",4]],[["astnode",8],["option",4]]],[[["direction",4],["syntaxelement",6]],[["syntaxelement",6],["option",4]]],[[["rangeinclusive",3],["syntaxnode",6],["syntaxelement",6]],["syntaxnode",6]],[[["direction",4],["syntaxtoken",6]],[["syntaxtoken",6],["option",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["abi",3],["option",4]]],[[],[["abi",3],["option",4]]],[[],[["abi",3],["option",4]]],[[["matcharm",3]]],[[["recordexprfield",3]]],[[["genericparam",4]]],[[["associtem",4]]],[[["wherepred",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["arglist",3],["option",4]]],[[],[["arglist",3],["option",4]]],[[],[["tokentree",3],["option",4]]],[[],[["astchildren",3],["expr",4]]],[[],[["matcharm",3],["astchildren",3]]],[[],[["option",4],["nameref",3]]],[[],[["option",4],["smolstr",3]]],[[],["option",4]],[[],[["option",4],["nameref",3]]],[[],[["option",4],["pathsegment",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["associtemlist",3],["option",4]]],[[],[["associtemlist",3],["option",4]]],[[],[["astchildren",3],["associtem",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["astchildren",3],["attr",3]]],[[],[["astchildren",3],["attr",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["expr",4]]],[[],[["blockexpr",3],["option",4]]],[[],[["blockexpr",3],["option",4]]],[[],[["astchildren",3],["blockexpr",3]]],[[],[["option",4],["expr",4]]],[[],[["blockexpr",3],["option",4]]],[[],[["tokentree",3],["option",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["exprtypebound",3],["astchildren",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxkind",4]],["bool",15]],[[["syntaxnode",6]],["option",4]],[[["syntaxtoken",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxtoken",6]],["option",4]],[[["syntaxtoken",6]],["option",4]],[[["syntaxtoken",6]],["option",4]],[[["syntaxtoken",6]],["option",4]],[[["syntaxtoken",6]],["option",4]],[[["syntaxtoken",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[],[["option",4],["vec",3]]],[[],[["option",4],["vec",3]]],[[],["name",3]],[[],["nameref",3]],[[],["lifetime",3]],[[],["path",3]],[[],["pathsegment",3]],[[],["genericarglist",3]],[[],["paramlist",3]],[[],["rettype",3]],[[],["pathtype",3]],[[],["typearg",3]],[[],["assoctypearg",3]],[[],["lifetimearg",3]],[[],["constarg",3]],[[],["genericparamlist",3]],[[],["typeboundlist",3]],[[],["macrocall",3]],[[],["attr",3]],[[],["tokentree",3]],[[],["macroitems",3]],[[],["macrostmts",3]],[[],["sourcefile",3]],[[],["const",3]],[[],["enum",3]],[[],["externblock",3]],[[],["externcrate",3]],[[],["fn",3]],[[],["impl",3]],[[],["macrorules",3]],[[],["macrodef",3]],[[],["module",3]],[[],["static",3]],[[],["struct",3]],[[],["trait",3]],[[],["typealias",3]],[[],["union",3]],[[],["use",3]],[[],["visibility",3]],[[],["itemlist",3]],[[],["rename",3]],[[],["usetree",3]],[[],["usetreelist",3]],[[],["abi",3]],[[],["whereclause",3]],[[],["blockexpr",3]],[[],["selfparam",3]],[[],["param",3]],[[],["recordfieldlist",3]],[[],["tuplefieldlist",3]],[[],["recordfield",3]],[[],["tuplefield",3]],[[],["variantlist",3]],[[],["variant",3]],[[],["associtemlist",3]],[[],["externitemlist",3]],[[],["constparam",3]],[[],["lifetimeparam",3]],[[],["typeparam",3]],[[],["wherepred",3]],[[],["meta",3]],[[],["exprstmt",3]],[[],["letstmt",3]],[[],["arrayexpr",3]],[[],["awaitexpr",3]],[[],["binexpr",3]],[[],["boxexpr",3]],[[],["breakexpr",3]],[[],["callexpr",3]],[[],["castexpr",3]],[[],["closureexpr",3]],[[],["continueexpr",3]],[[],["effectexpr",3]],[[],["fieldexpr",3]],[[],["forexpr",3]],[[],["ifexpr",3]],[[],["indexexpr",3]],[[],["literal",3]],[[],["loopexpr",3]],[[],["matchexpr",3]],[[],["methodcallexpr",3]],[[],["parenexpr",3]],[[],["pathexpr",3]],[[],["prefixexpr",3]],[[],["rangeexpr",3]],[[],["recordexpr",3]],[[],["refexpr",3]],[[],["returnexpr",3]],[[],["tryexpr",3]],[[],["tupleexpr",3]],[[],["whileexpr",3]],[[],["yieldexpr",3]],[[],["label",3]],[[],["recordexprfieldlist",3]],[[],["recordexprfield",3]],[[],["arglist",3]],[[],["condition",3]],[[],["matcharmlist",3]],[[],["matcharm",3]],[[],["matchguard",3]],[[],["arraytype",3]],[[],["dyntraittype",3]],[[],["fnptrtype",3]],[[],["fortype",3]],[[],["impltraittype",3]],[[],["infertype",3]],[[],["macrotype",3]],[[],["nevertype",3]],[[],["parentype",3]],[[],["ptrtype",3]],[[],["reftype",3]],[[],["slicetype",3]],[[],["tupletype",3]],[[],["typebound",3]],[[],["identpat",3]],[[],["boxpat",3]],[[],["restpat",3]],[[],["literalpat",3]],[[],["macropat",3]],[[],["orpat",3]],[[],["parenpat",3]],[[],["pathpat",3]],[[],["wildcardpat",3]],[[],["rangepat",3]],[[],["recordpat",3]],[[],["refpat",3]],[[],["slicepat",3]],[[],["tuplepat",3]],[[],["tuplestructpat",3]],[[],["constblockpat",3]],[[],["recordpatfieldlist",3]],[[],["recordpatfield",3]],[[],["genericarg",4]],[[],["type",4]],[[],["expr",4]],[[],["item",4]],[[],["stmt",4]],[[],["pat",4]],[[],["fieldlist",4]],[[],["adt",4]],[[],["associtem",4]],[[],["externitem",4]],[[],["genericparam",4]],[[],["whitespace",3]],[[],["comment",3]],[[],["string",3]],[[],["bytestring",3]],[[],["intnumber",3]],[[],["floatnumber",3]],[[],["commentkind",3]],[[],["commentshape",4]],[[],["commentplacement",4]],[[],["radix",4]],[[],["macro",4]],[[],["attrkind",4]],[[],["pathsegmentkind",4]],[[],["structkind",4]],[[],["namelike",4]],[[],["nameornameref",4]],[[],["fieldkind",4]],[[],["selfparamkind",4]],[[],["typeboundkind",4]],[[],["elsebranch",4]],[[],["prefixop",4]],[[],["binop",4]],[[],["rangeop",4]],[[],["literalkind",4]],[[],["effect",4]],[[],["astchildrentextrange",3],["option",4]]],[[],[["textrange",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],["slicepatcomponents",3]],[[],[["option",4],["condition",3]]],[[],[["option",4],["condition",3]]],[[]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],null,[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["type",4]]],[[],[["option",4],["expr",4]]],null,[[],[["str",15],["option",4]]],[[],["commentiter",3]],[[],["commentiter",3]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],null,null,[[],["effect",4]],[[],[["elsebranch",4],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["expr",4]]],[[],[["pat",4],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[["name",3]],["bool",15]],[[["nameref",3]],["bool",15]],[[["lifetime",3]],["bool",15]],[[["path",3]],["bool",15]],[[["pathsegment",3]],["bool",15]],[[["genericarglist",3]],["bool",15]],[[["paramlist",3]],["bool",15]],[[["rettype",3]],["bool",15]],[[["pathtype",3]],["bool",15]],[[["typearg",3]],["bool",15]],[[["assoctypearg",3]],["bool",15]],[[["lifetimearg",3]],["bool",15]],[[["constarg",3]],["bool",15]],[[["genericparamlist",3]],["bool",15]],[[["typeboundlist",3]],["bool",15]],[[["macrocall",3]],["bool",15]],[[["attr",3]],["bool",15]],[[["tokentree",3]],["bool",15]],[[["macroitems",3]],["bool",15]],[[["macrostmts",3]],["bool",15]],[[["sourcefile",3]],["bool",15]],[[["const",3]],["bool",15]],[[["enum",3]],["bool",15]],[[["externblock",3]],["bool",15]],[[["externcrate",3]],["bool",15]],[[["fn",3]],["bool",15]],[[["impl",3]],["bool",15]],[[["macrorules",3]],["bool",15]],[[["macrodef",3]],["bool",15]],[[["module",3]],["bool",15]],[[["static",3]],["bool",15]],[[["struct",3]],["bool",15]],[[["trait",3]],["bool",15]],[[["typealias",3]],["bool",15]],[[["union",3]],["bool",15]],[[["use",3]],["bool",15]],[[["visibility",3]],["bool",15]],[[["itemlist",3]],["bool",15]],[[["rename",3]],["bool",15]],[[["usetree",3]],["bool",15]],[[["usetreelist",3]],["bool",15]],[[["abi",3]],["bool",15]],[[["whereclause",3]],["bool",15]],[[["blockexpr",3]],["bool",15]],[[["selfparam",3]],["bool",15]],[[["param",3]],["bool",15]],[[["recordfieldlist",3]],["bool",15]],[[["tuplefieldlist",3]],["bool",15]],[[["recordfield",3]],["bool",15]],[[["tuplefield",3]],["bool",15]],[[["variantlist",3]],["bool",15]],[[["variant",3]],["bool",15]],[[["associtemlist",3]],["bool",15]],[[["externitemlist",3]],["bool",15]],[[["constparam",3]],["bool",15]],[[["lifetimeparam",3]],["bool",15]],[[["typeparam",3]],["bool",15]],[[["wherepred",3]],["bool",15]],[[["meta",3]],["bool",15]],[[["exprstmt",3]],["bool",15]],[[["letstmt",3]],["bool",15]],[[["arrayexpr",3]],["bool",15]],[[["awaitexpr",3]],["bool",15]],[[["binexpr",3]],["bool",15]],[[["boxexpr",3]],["bool",15]],[[["breakexpr",3]],["bool",15]],[[["callexpr",3]],["bool",15]],[[["castexpr",3]],["bool",15]],[[["closureexpr",3]],["bool",15]],[[["continueexpr",3]],["bool",15]],[[["effectexpr",3]],["bool",15]],[[["fieldexpr",3]],["bool",15]],[[["forexpr",3]],["bool",15]],[[["ifexpr",3]],["bool",15]],[[["indexexpr",3]],["bool",15]],[[["literal",3]],["bool",15]],[[["loopexpr",3]],["bool",15]],[[["matchexpr",3]],["bool",15]],[[["methodcallexpr",3]],["bool",15]],[[["parenexpr",3]],["bool",15]],[[["pathexpr",3]],["bool",15]],[[["prefixexpr",3]],["bool",15]],[[["rangeexpr",3]],["bool",15]],[[["recordexpr",3]],["bool",15]],[[["refexpr",3]],["bool",15]],[[["returnexpr",3]],["bool",15]],[[["tryexpr",3]],["bool",15]],[[["tupleexpr",3]],["bool",15]],[[["whileexpr",3]],["bool",15]],[[["yieldexpr",3]],["bool",15]],[[["label",3]],["bool",15]],[[["recordexprfieldlist",3]],["bool",15]],[[["recordexprfield",3]],["bool",15]],[[["arglist",3]],["bool",15]],[[["condition",3]],["bool",15]],[[["matcharmlist",3]],["bool",15]],[[["matcharm",3]],["bool",15]],[[["matchguard",3]],["bool",15]],[[["arraytype",3]],["bool",15]],[[["dyntraittype",3]],["bool",15]],[[["fnptrtype",3]],["bool",15]],[[["fortype",3]],["bool",15]],[[["impltraittype",3]],["bool",15]],[[["infertype",3]],["bool",15]],[[["macrotype",3]],["bool",15]],[[["nevertype",3]],["bool",15]],[[["parentype",3]],["bool",15]],[[["ptrtype",3]],["bool",15]],[[["reftype",3]],["bool",15]],[[["slicetype",3]],["bool",15]],[[["tupletype",3]],["bool",15]],[[["typebound",3]],["bool",15]],[[["identpat",3]],["bool",15]],[[["boxpat",3]],["bool",15]],[[["restpat",3]],["bool",15]],[[["literalpat",3]],["bool",15]],[[["macropat",3]],["bool",15]],[[["orpat",3]],["bool",15]],[[["parenpat",3]],["bool",15]],[[["pathpat",3]],["bool",15]],[[["wildcardpat",3]],["bool",15]],[[["rangepat",3]],["bool",15]],[[["recordpat",3]],["bool",15]],[[["refpat",3]],["bool",15]],[[["slicepat",3]],["bool",15]],[[["tuplepat",3]],["bool",15]],[[["tuplestructpat",3]],["bool",15]],[[["constblockpat",3]],["bool",15]],[[["recordpatfieldlist",3]],["bool",15]],[[["recordpatfield",3]],["bool",15]],[[["genericarg",4]],["bool",15]],[[["type",4]],["bool",15]],[[["expr",4]],["bool",15]],[[["item",4]],["bool",15]],[[["stmt",4]],["bool",15]],[[["pat",4]],["bool",15]],[[["fieldlist",4]],["bool",15]],[[["adt",4]],["bool",15]],[[["associtem",4]],["bool",15]],[[["externitem",4]],["bool",15]],[[["genericparam",4]],["bool",15]],[[["whitespace",3]],["bool",15]],[[["comment",3]],["bool",15]],[[["string",3]],["bool",15]],[[["bytestring",3]],["bool",15]],[[["intnumber",3]],["bool",15]],[[["floatnumber",3]],["bool",15]],[[["commentkind",3]],["bool",15]],[[["commentshape",4]],["bool",15]],[[["commentplacement",4]],["bool",15]],[[["radix",4]],["bool",15]],[[["macro",4]],["bool",15]],[[["attrkind",4]],["bool",15]],[[["pathsegmentkind",4]],["bool",15]],[[["structkind",4]],["bool",15]],[[["nameornameref",4]],["bool",15]],[[["fieldkind",4]],["bool",15]],[[["selfparamkind",4]],["bool",15]],[[["typeboundkind",4]],["bool",15]],[[["elsebranch",4]],["bool",15]],[[["prefixop",4]],["bool",15]],[[["binop",4]],["bool",15]],[[["rangeop",4]],["bool",15]],[[["literalkind",4]],["bool",15]],[[["effect",4]],["bool",15]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["expr",4]]],[[],[["astchildren",3],["expr",4]]],[[],[["option",4],["externitemlist",3]]],[[],[["externitem",4],["astchildren",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["fieldkind",4]]],[[],[["option",4],["fieldlist",4]]],[[],[["option",4],["fieldlist",4]]],[[],[["option",4],["nameref",3]]],[[],[["option",4],["nameornameref",4]]],[[],[["astchildren",3],["recordfield",3]]],[[],[["tuplefield",3],["astchildren",3]]],[[],[["astchildren",3],["expr",4]]],[[],[["astchildren",3],["recordexprfield",3]]],[[],[["astchildren",3],["type",4]]],[[],[["astchildren",3],["pat",4]]],[[],[["astchildren",3],["pat",4]]],[[],[["astchildren",3],["recordpatfield",3]]],[[],["path",3]],[[],[["option",4],["pathsegment",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[["nameref",3]],[["recordexprfield",3],["option",4]]],[[["name",3]],[["option",4],["recordpatfield",3]]],[[["nameref",3]],[["option",4],["recordpatfield",3]]],[[["nameref",3]],[["recordexprfield",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[["nameref",3]],[["impl",3],["optiontypearg",3]],["genericarg",4]],[[["assoctypearg",3]],["genericarg",4]],[[["lifetimearg",3]],["genericarg",4]],[[]],[[["constarg",3]],["genericarg",4]],[[["pathtype",3]],["type",4]],[[["reftype",3]],["type",4]],[[]],[[["arraytype",3]],["type",4]],[[["dyntraittype",3]],["type",4]],[[["fnptrtype",3]],["type",4]],[[["ptrtype",3]],["type",4]],[[["parentype",3]],["type",4]],[[["nevertype",3]],["type",4]],[[["macrotype",3]],["type",4]],[[["infertype",3]],["type",4]],[[["impltraittype",3]],["type",4]],[[["fortype",3]],["type",4]],[[["tupletype",3]],["type",4]],[[["slicetype",3]],["type",4]],[[["macrocall",3]],["expr",4]],[[["matchexpr",3]],["expr",4]],[[["breakexpr",3]],["expr",4]],[[["boxexpr",3]],["expr",4]],[[["blockexpr",3]],["expr",4]],[[["binexpr",3]],["expr",4]],[[["awaitexpr",3]],["expr",4]],[[["arrayexpr",3]],["expr",4]],[[["effectexpr",3]],["expr",4]],[[]],[[["castexpr",3]],["expr",4]],[[["closureexpr",3]],["expr",4]],[[["yieldexpr",3]],["expr",4]],[[["fieldexpr",3]],["expr",4]],[[["forexpr",3]],["expr",4]],[[["ifexpr",3]],["expr",4]],[[["whileexpr",3]],["expr",4]],[[["tupleexpr",3]],["expr",4]],[[["tryexpr",3]],["expr",4]],[[["returnexpr",3]],["expr",4]],[[["refexpr",3]],["expr",4]],[[["recordexpr",3]],["expr",4]],[[["rangeexpr",3]],["expr",4]],[[["prefixexpr",3]],["expr",4]],[[["pathexpr",3]],["expr",4]],[[["parenexpr",3]],["expr",4]],[[["methodcallexpr",3]],["expr",4]],[[["callexpr",3]],["expr",4]],[[["continueexpr",3]],["expr",4]],[[["macrostmts",3]],["expr",4]],[[["loopexpr",3]],["expr",4]],[[["literal",3]],["expr",4]],[[["indexexpr",3]],["expr",4]],[[["macrodef",3]],["item",4]],[[]],[[["externcrate",3]],["item",4]],[[["externblock",3]],["item",4]],[[["fn",3]],["item",4]],[[["const",3]],["item",4]],[[["impl",3]],["item",4]],[[["macrocall",3]],["item",4]],[[["macrorules",3]],["item",4]],[[["enum",3]],["item",4]],[[["module",3]],["item",4]],[[["static",3]],["item",4]],[[["struct",3]],["item",4]],[[["trait",3]],["item",4]],[[["typealias",3]],["item",4]],[[["union",3]],["item",4]],[[["use",3]],["item",4]],[[]],[[["exprstmt",3]],["stmt",4]],[[["item",4]],["stmt",4]],[[["letstmt",3]],["stmt",4]],[[["identpat",3]],["pat",4]],[[["macropat",3]],["pat",4]],[[["boxpat",3]],["pat",4]],[[["restpat",3]],["pat",4]],[[["literalpat",3]],["pat",4]],[[]],[[["orpat",3]],["pat",4]],[[["parenpat",3]],["pat",4]],[[["pathpat",3]],["pat",4]],[[["wildcardpat",3]],["pat",4]],[[["rangepat",3]],["pat",4]],[[["constblockpat",3]],["pat",4]],[[["tuplestructpat",3]],["pat",4]],[[["tuplepat",3]],["pat",4]],[[["slicepat",3]],["pat",4]],[[["refpat",3]],["pat",4]],[[["recordpat",3]],["pat",4]],[[["recordfieldlist",3]],["fieldlist",4]],[[["tuplefieldlist",3]],["fieldlist",4]],[[]],[[]],[[["enum",3]],["adt",4]],[[["struct",3]],["adt",4]],[[["union",3]],["adt",4]],[[["typealias",3]],["associtem",4]],[[]],[[["const",3]],["associtem",4]],[[["fn",3]],["associtem",4]],[[["macrocall",3]],["associtem",4]],[[["fn",3]],["externitem",4]],[[["static",3]],["externitem",4]],[[["macrocall",3]],["externitem",4]],[[]],[[["typealias",3]],["externitem",4]],[[]],[[["constparam",3]],["genericparam",4]],[[["lifetimeparam",3]],["genericparam",4]],[[["typeparam",3]],["genericparam",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["macrodef",3]]],[[["macrorules",3]]],[[]],[[]],[[]],[[]],[[]],[[["name",3]],["namelike",4]],[[["nameref",3]],["namelike",4]],[[["lifetime",3]],["namelike",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["syntaxnode",6]],["commentiter",3]],[[],[["option",4],["genericarglist",3]]],[[],[["option",4],["genericarglist",3]]],[[],[["astchildren",3],["genericarg",4]]],[[],[["option",4],["genericparamlist",3]]],[[],[["option",4],["genericparamlist",3]]],[[],[["option",4],["genericparamlist",3]]],[[],[["option",4],["genericparamlist",3]]],[[],[["option",4],["genericparamlist",3]]],[[],[["option",4],["genericparamlist",3]]],[[],[["genericparam",4],["astchildren",3]]],[[],["associtemlist",3]],[[],["blockexpr",3]],[[],["genericarglist",3]],[[],["genericparamlist",3]],[[],["genericparamlist",3]],[[],["genericparamlist",3]],[[],["genericparamlist",3]],[[],["genericparamlist",3]],[[],["whereclause",3]],[[],["whereclause",3]],[[],["whereclause",3]],[[],["whereclause",3]],[[],["whereclause",3]],[[],[["option",4],["matchguard",3]]],[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[],["boolsyntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["expr",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["exprbool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["option",4],["itemlist",3]]],[[],[["astchildren",3],["item",4]]],[[],[["astchildren",3],["item",4]]],[[],[["astchildren",3],["item",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["pathsegmentkind",4]]],[[],["attrkind",4]],[[],["structkind",4]],[[],["visibilitykind",4]],[[],["selfparamkind",4]],[[],["structkind",4]],[[],["arrayexprkind",4]],[[],["literalkind",4]],[[],["typeboundkind",4]],[[],["commentkind",3]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["label",3]]],[[],[["option",4],["label",3]]],[[],[["label",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[]],[[]],[[],[["option",4],["expr",4]]],[[],[["option",4],["lifetime",3]]],[[],[["option",4],["lifetime",3]]],[[],[["option",4],["lifetime",3]]],[[],[["option",4],["lifetime",3]]],[[],[["option",4],["lifetime",3]]],[[],[["option",4],["lifetime",3]]],[[],[["option",4],["lifetime",3]]],[[],[["option",4],["lifetime",3]]],[[],[["option",4],["lifetime",3]]],[[]],[[],[["syntaxtoken",6],["option",4]]],[[]],[[],[["literal",3],["option",4]]],[[],[["option",4],["blockexpr",3]]],[[],[["option",4],["blockexpr",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["macrocall",3],["option",4]]],[[],[["macrocall",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],null,[[["textrange",3]],[["textrange",3],["option",4]]],[[],[["option",4],["matcharmlist",3]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["meta",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["name",3]]],[[],[["option",4],["name",3]]],[[],[["option",4],["name",3]]],[[],[["option",4],["nameref",3]]],[[],[["option",4],["nameref",3]]],[[],[["option",4],["nameref",3]]],[[],[["option",4],["nameref",3]]],[[],[["option",4],["nameref",3]]],[[],[["option",4],["nameref",3]]],[[],[["option",4],["nameref",3]]],[[],[["option",4],["nameref",3]]],[[["name",3]],["bool",15]],[[["nameref",3]],["bool",15]],[[["lifetime",3]],["bool",15]],[[["path",3]],["bool",15]],[[["pathsegment",3]],["bool",15]],[[["genericarglist",3]],["bool",15]],[[["paramlist",3]],["bool",15]],[[["rettype",3]],["bool",15]],[[["pathtype",3]],["bool",15]],[[["typearg",3]],["bool",15]],[[["assoctypearg",3]],["bool",15]],[[["lifetimearg",3]],["bool",15]],[[["constarg",3]],["bool",15]],[[["genericparamlist",3]],["bool",15]],[[["typeboundlist",3]],["bool",15]],[[["macrocall",3]],["bool",15]],[[["attr",3]],["bool",15]],[[["tokentree",3]],["bool",15]],[[["macroitems",3]],["bool",15]],[[["macrostmts",3]],["bool",15]],[[["sourcefile",3]],["bool",15]],[[["const",3]],["bool",15]],[[["enum",3]],["bool",15]],[[["externblock",3]],["bool",15]],[[["externcrate",3]],["bool",15]],[[["fn",3]],["bool",15]],[[["impl",3]],["bool",15]],[[["macrorules",3]],["bool",15]],[[["macrodef",3]],["bool",15]],[[["module",3]],["bool",15]],[[["static",3]],["bool",15]],[[["struct",3]],["bool",15]],[[["trait",3]],["bool",15]],[[["typealias",3]],["bool",15]],[[["union",3]],["bool",15]],[[["use",3]],["bool",15]],[[["visibility",3]],["bool",15]],[[["itemlist",3]],["bool",15]],[[["rename",3]],["bool",15]],[[["usetree",3]],["bool",15]],[[["usetreelist",3]],["bool",15]],[[["abi",3]],["bool",15]],[[["whereclause",3]],["bool",15]],[[["blockexpr",3]],["bool",15]],[[["selfparam",3]],["bool",15]],[[["param",3]],["bool",15]],[[["recordfieldlist",3]],["bool",15]],[[["tuplefieldlist",3]],["bool",15]],[[["recordfield",3]],["bool",15]],[[["tuplefield",3]],["bool",15]],[[["variantlist",3]],["bool",15]],[[["variant",3]],["bool",15]],[[["associtemlist",3]],["bool",15]],[[["externitemlist",3]],["bool",15]],[[["constparam",3]],["bool",15]],[[["lifetimeparam",3]],["bool",15]],[[["typeparam",3]],["bool",15]],[[["wherepred",3]],["bool",15]],[[["meta",3]],["bool",15]],[[["exprstmt",3]],["bool",15]],[[["letstmt",3]],["bool",15]],[[["arrayexpr",3]],["bool",15]],[[["awaitexpr",3]],["bool",15]],[[["binexpr",3]],["bool",15]],[[["boxexpr",3]],["bool",15]],[[["breakexpr",3]],["bool",15]],[[["callexpr",3]],["bool",15]],[[["castexpr",3]],["bool",15]],[[["closureexpr",3]],["bool",15]],[[["continueexpr",3]],["bool",15]],[[["effectexpr",3]],["bool",15]],[[["fieldexpr",3]],["bool",15]],[[["forexpr",3]],["bool",15]],[[["ifexpr",3]],["bool",15]],[[["indexexpr",3]],["bool",15]],[[["literal",3]],["bool",15]],[[["loopexpr",3]],["bool",15]],[[["matchexpr",3]],["bool",15]],[[["methodcallexpr",3]],["bool",15]],[[["parenexpr",3]],["bool",15]],[[["pathexpr",3]],["bool",15]],[[["prefixexpr",3]],["bool",15]],[[["rangeexpr",3]],["bool",15]],[[["recordexpr",3]],["bool",15]],[[["refexpr",3]],["bool",15]],[[["returnexpr",3]],["bool",15]],[[["tryexpr",3]],["bool",15]],[[["tupleexpr",3]],["bool",15]],[[["whileexpr",3]],["bool",15]],[[["yieldexpr",3]],["bool",15]],[[["label",3]],["bool",15]],[[["recordexprfieldlist",3]],["bool",15]],[[["recordexprfield",3]],["bool",15]],[[["arglist",3]],["bool",15]],[[["condition",3]],["bool",15]],[[["matcharmlist",3]],["bool",15]],[[["matcharm",3]],["bool",15]],[[["matchguard",3]],["bool",15]],[[["arraytype",3]],["bool",15]],[[["dyntraittype",3]],["bool",15]],[[["fnptrtype",3]],["bool",15]],[[["fortype",3]],["bool",15]],[[["impltraittype",3]],["bool",15]],[[["infertype",3]],["bool",15]],[[["macrotype",3]],["bool",15]],[[["nevertype",3]],["bool",15]],[[["parentype",3]],["bool",15]],[[["ptrtype",3]],["bool",15]],[[["reftype",3]],["bool",15]],[[["slicetype",3]],["bool",15]],[[["tupletype",3]],["bool",15]],[[["typebound",3]],["bool",15]],[[["identpat",3]],["bool",15]],[[["boxpat",3]],["bool",15]],[[["restpat",3]],["bool",15]],[[["literalpat",3]],["bool",15]],[[["macropat",3]],["bool",15]],[[["orpat",3]],["bool",15]],[[["parenpat",3]],["bool",15]],[[["pathpat",3]],["bool",15]],[[["wildcardpat",3]],["bool",15]],[[["rangepat",3]],["bool",15]],[[["recordpat",3]],["bool",15]],[[["refpat",3]],["bool",15]],[[["slicepat",3]],["bool",15]],[[["tuplepat",3]],["bool",15]],[[["tuplestructpat",3]],["bool",15]],[[["constblockpat",3]],["bool",15]],[[["recordpatfieldlist",3]],["bool",15]],[[["recordpatfield",3]],["bool",15]],[[["genericarg",4]],["bool",15]],[[["type",4]],["bool",15]],[[["expr",4]],["bool",15]],[[["item",4]],["bool",15]],[[["stmt",4]],["bool",15]],[[["pat",4]],["bool",15]],[[["fieldlist",4]],["bool",15]],[[["adt",4]],["bool",15]],[[["associtem",4]],["bool",15]],[[["externitem",4]],["bool",15]],[[["genericparam",4]],["bool",15]],[[["whitespace",3]],["bool",15]],[[["comment",3]],["bool",15]],[[["string",3]],["bool",15]],[[["bytestring",3]],["bool",15]],[[["intnumber",3]],["bool",15]],[[["floatnumber",3]],["bool",15]],[[["commentkind",3]],["bool",15]],[[["macro",4]],["bool",15]],[[["pathsegmentkind",4]],["bool",15]],[[["structkind",4]],["bool",15]],[[["nameornameref",4]],["bool",15]],[[["fieldkind",4]],["bool",15]],[[["typeboundkind",4]],["bool",15]],[[["elsebranch",4]],["bool",15]],[[["literalkind",4]],["bool",15]],[[["effect",4]],["bool",15]],[[["attrsowner",8]]],[[],[["comment",3],["option",4]]],[[],["option",4]],[[],["option",4]],[[],[["option",4],["binop",4]]],[[],[["prefixop",4],["option",4]]],[[],[["rangeop",4],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["textrange",3],["option",4]]],[[],[["textrange",3],["option",4]]],[[],[["option",4],["paramlist",3]]],[[],[["option",4],["paramlist",3]]],[[],[["option",4],["paramlist",3]]],[[],[["option",4],["paramlist",3]]],[[],[["astchildren",3],["param",3]]],[[],[["module",3],["option",4]]],[[],["enum",3]],[[],[["option",4],["path",3]]],[[],["path",3]],[[],["recordexpr",3]],[[],["usetree",3]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],[["sourcefile",3],["parse",3]]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],[["pat",4],["option",4]]],[[],[["pat",4],["option",4]]],[[],[["pat",4],["option",4]]],[[],[["pat",4],["option",4]]],[[],[["pat",4],["option",4]]],[[],[["pat",4],["option",4]]],[[],[["pat",4],["option",4]]],[[],[["pat",4],["option",4]]],[[],[["pat",4],["option",4]]],[[],[["pat",4],["option",4]]],[[],[["option",4],["path",3]]],[[],[["option",4],["path",3]]],[[],[["option",4],["path",3]]],[[],[["option",4],["path",3]]],[[],[["option",4],["path",3]]],[[],[["option",4],["path",3]]],[[],[["option",4],["path",3]]],[[],[["option",4],["path",3]]],[[],[["option",4],["path",3]]],[[],[["option",4],["path",3]]],[[],[["option",4],["path",3]]],[[],[["option",4],["pathtype",3]]],[[],[["astchildren",3],["pat",4]]],[[],[["astchildren",3],["pat",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["wherepred",3],["astchildren",3]]],[[],["str",15]],[[],["str",15]],null,[[["fnmut",8]]],[[],[["syntaxtoken",6],["option",4]]],[[["stmt",4]]],[[],[["option",4],["path",3]]],[[]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["quoteoffsets",3]]],[[],[["option",4],["quoteoffsets",3]]],null,[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],["radix",4]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["expr",4]]],[[],[["option",4],["recordexprfieldlist",3]]],[[],[["option",4],["recordfieldlist",3]]],[[],[["option",4],["recordpatfieldlist",3]]],[[],[["syntaxtoken",6],["option",4]]],[[]],[[]],[[]],[[]],[[],[["rename",3],["option",4]]],[[],[["rename",3],["option",4]]],[[["syntaxkind",4]],[["option",4],["binexpr",3]]],[[],[["rettype",3],["option",4]]],[[],[["rettype",3],["option",4]]],[[],[["rettype",3],["option",4]]],[[],[["rettype",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["expr",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["pathsegment",3],["option",4]]],[[]],[[],[["selfparam",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["type",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],null,[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["smolstr",3]]],null,[[],["bool",15]],[[["path",3]],["usetree",3]],[[],[["option",4],["expr",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["expr",4]]],[[],[["pat",4],["option",4]]],[[],[["astchildren",3],["stmt",4]]],[[],[["astchildren",3],["stmt",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[]],[[],[["str",15],["option",4]]],[[],[["str",15],["option",4]]],null,[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],["syntaxnode",6]],[[],["syntaxtoken",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],["syntaxtoken",6]],[[],["syntaxtoken",6]],[[],["syntaxtoken",6]],[[],["syntaxtoken",6]],[[],["syntaxtoken",6]],[[],["syntaxtoken",6]],[[],["syntaxnode",6]],[[],["syntaxnode",6]],[[],[["option",4],["expr",4]]],[[],["str",15]],[[],["tokentext",3]],[[],["tokentext",3]],[[],["tokentext",3]],[[],["tokentext",3]],[[],[["textrange",3],["option",4]]],[[],[["textrange",3],["option",4]]],[[],[["option",4],["blockexpr",3]]],[[],[["syntaxtoken",6],["optionstring",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["syntaxtoken",6]],[[],[["tokentree",3],["option",4]]],[[],[["tokentree",3],["option",4]]],[[],[["tokentree",3],["option",4]]],[[],[["tokentree",3],["option",4]]],[[],["path",3]],[[],[["option",4],["type",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["syntaxtoken",6],["option",4]]],[[],[["option",4],["type",4]]],[[],[["option",4],["type",4]]],[[],[["option",4],["type",4]]],[[],[["option",4],["type",4]]],[[],[["option",4],["type",4]]],[[],[["option",4],["type",4]]],[[],[["option",4],["type",4]]],[[],[["option",4],["type",4]]],[[],[["option",4],["type",4]]],[[],[["option",4],["type",4]]],[[],[["option",4],["type",4]]],[[],[["option",4],["type",4]]],[[],[["option",4],["type",4]]],[[],[["option",4],["type",4]]],[[],[["option",4],["type",4]]],[[],[["option",4],["type",4]]],[[],[["option",4],["type",4]]],[[],[["option",4],["type",4]]],[[],[["option",4],["type",4]]],[[],[["option",4],["type",4]]],[[],[["option",4],["type",4]]],[[],[["option",4],["typeboundlist",3]]],[[],[["option",4],["typeboundlist",3]]],[[],[["typeboundlist",3],["option",4]]],[[],[["typeboundlist",3],["option",4]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["usetree",3],["option",4]]],[[],[["option",4],["usetreelist",3]]],[[],[["astchildren",3],["usetree",3]]],[[],[["cow",4],["option",4]]],[[],[["cow",4],["option",4]]],[[],[["u128",15],["option",4]]],[[],[["variantlist",3],["option",4]]],[[],[["astchildren",3],["variant",3]]],[[],[["visibility",3],["option",4]]],[[],[["visibility",3],["option",4]]],[[["fnmut",8]]],[[["fnmut",8]]],[[["fnmut",8]]],[[["fnmut",8]]],[[],[["whereclause",3],["option",4]]],[[],[["whereclause",3],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],[[],[["syntaxtoken",6],["option",4]]],null,null,null,null,null,null,null,[[["u8",15]],["indentlevel",3]],[[]],[[]],[[],["indentlevel",3]],[[]],[[["indentlevel",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["u8",15]],["indentlevel",3]],[[["syntaxelement",6]],["indentlevel",3]],[[["syntaxnode",6]],["indentlevel",3]],[[["syntaxtoken",6]],["indentlevel",3]],[[["indentlevel",3]]],[[],["indentlevel",3]],[[]],[[],["bool",15]],[[],["attrsowner",8]],[[["rangeinclusive",3],["syntaxelement",6]]],[[]],[[],["indentlevel",3]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[],["genericparamlist",3]],[[],["whereclause",3]],[[],["arglist",3]],[[],["associtemlist",3]],[[["option",4],["expr",4]],["blockexpr",3]],[[["pat",4],["option",4],["expr",4]],["condition",3]],[[["expr",4]],["expr",4]],[[["option",4],["expr",4]],["expr",4]],[[["arglist",3],["expr",4]],["expr",4]],[[],["expr",4]],[[],["expr",4]],[[["pat",4],["blockexpr",3],["expr",4]],["expr",4]],[[["elsebranch",4],["condition",3],["blockexpr",3],["option",4]],["expr",4]],[[["str",15]],["literal",3]],[[["matcharmlist",3],["expr",4]],["expr",4]],[[["arglist",3],["str",15],["expr",4]],["expr",4]],[[["expr",4]],["expr",4]],[[["path",3]],["expr",4]],[[["expr",4],["syntaxkind",4]],["expr",4]],[[["bool",15],["expr",4]],["expr",4]],[[["option",4],["expr",4]],["expr",4]],[[["expr",4]],["exprstmt",3]],[[["expr",4]],["expr",4]],[[],["expr",4]],[[],["expr",4]],null,[[["rettype",3],["option",4],["option",4],["option",4],["genericparamlist",3],["name",3],["bool",15],["paramlist",3],["visibility",3],["blockexpr",3]],["fn",3]],[[],["genericparamlist",3]],[[["bool",15],["name",3]],["identpat",3]],[[["path",3]],["impl",3]],[[["option",4],["type",4],["option",4],["expr",4],["pat",4]],["letstmt",3]],[[["str",15]],["lifetime",3]],[[["lifetime",3]],["lifetimeparam",3]],[[["str",15]],["literalpat",3]],[[["option",4],["expr",4]],["matcharm",3]],[[],["matcharmlist",3]],[[["expr",4]],["matcharm",3]],[[["str",15]],["name",3]],[[["str",15]],["nameref",3]],[[["pat",4],["type",4]],["param",3]],[[["option",4],["selfparam",3]],["paramlist",3]],[[["path",3]],["path",3]],[[["bool",15]],["path",3]],[[["str",15]],["path",3]],[[["path",3]],["pat",4]],[[["path",3],["pathsegment",3]],["path",3]],[[["nameref",3]],["pathsegment",3]],[[],["pathsegment",3]],[[],["pathsegment",3]],[[],["pathsegment",3]],[[["pathsegment",3]],["path",3]],[[["path",3],["recordexprfieldlist",3]],["recordexpr",3]],[[["nameref",3],["option",4],["expr",4]],["recordexprfield",3]],[[],["recordexprfieldlist",3]],[[["type",4],["option",4],["visibility",3],["name",3]],["recordfield",3]],[[],["recordfieldlist",3]],[[["path",3]],["recordpat",3]],[[["nameref",3],["pat",4]],["recordpatfield",3]],[[],["recordpatfieldlist",3]],[[["path",3],["recordpatfieldlist",3]],["recordpat",3]],[[["type",4]],["rettype",3]],[[["genericparamlist",3],["option",4],["fieldlist",4],["visibility",3],["option",4],["name",3]],["struct",3]],[[["syntaxkind",4]],["syntaxtoken",6]],null,[[["visibility",3],["type",4],["option",4]],["tuplefield",3]],[[],["tuplefieldlist",3]],[[],["tuplepat",3]],[[["path",3]],["tuplestructpat",3]],[[["str",15]],["type",4]],[[["path",3]],["type",4]],[[["type",4],["bool",15]],["type",4]],[[],["type",4]],[[],["type",4]],[[["option",4],["typeboundlist",3],["name",3]],["typeparam",3]],[[["visibility",3],["usetree",3],["option",4]],["use",3]],[[["rename",3],["bool",15],["option",4],["usetreelist",3],["path",3],["option",4]],["usetree",3]],[[],["usetree",3]],[[],["usetreelist",3]],[[["fieldlist",4],["option",4],["name",3]],["variant",3]],[[],["visibility",3]],[[],["visibility",3]],[[],["whereclause",3]],[[["path",3]],["wherepred",3]],[[],["wildcardpat",3]],[[],["blockexpr",3]],[[],["expr",4]],[[],["expr",4]],[[["str",15]],["path",3]],[[["name",3]],["identpat",3]],[[],["type",4]],[[["type",4]],["type",4]],[[["type",4]],["type",4]],null,[[],["syntaxtoken",6]],[[]],[[]],[[["str",15]],["syntaxtoken",6]],[[]],[[]],[[["str",15]],["syntaxtoken",6]],[[["str",15]],["wsbuilder",3]],[[],["syntaxtoken",6]],[[],["syntaxtoken",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["str",15]],["syntaxtoken",6]],[[],["syntaxtoken",6]],[[["const",3]],["string",3]],[[["fn",3]],["string",3]],[[["fn",3]],["string",3]],[[["macro",4]],["string",3]],[[["typealias",3]],["string",3]],null,null,[[],["position",3]],[[]],[[]],[[],["position",3]],[[]],[[]],[[],["position",3]],[[["formatter",3]],["result",6]],[[]],[[["position",3]]],[[["vec",3],["position",3],["syntaxelement",6]]],[[["vec",3],["position",3],["syntaxelement",6]]],[[["position",3]]],[[]],[[],["position",3]],[[]],[[["rangeinclusive",3],["syntaxelement",6]]],[[]],[[]],[[["rangeinclusive",3],["vec",3],["syntaxelement",6]]],[[["vec",3],["syntaxelement",6]]],[[],["syntaxelement",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["path",3]],["string",3]]],"p":[[4,"SyntaxKind"],[4,"TokenAtOffset"],[4,"WalkEvent"],[4,"Direction"],[4,"NodeOrToken"],[3,"TextRange"],[3,"TextSize"],[3,"TokenText"],[3,"SmolStr"],[3,"SyntaxTreeBuilder"],[3,"SyntaxError"],[3,"Token"],[3,"SyntaxNodePtr"],[3,"AstPtr"],[3,"Parse"],[3,"GreenNode"],[3,"SyntaxText"],[6,"SyntaxNode"],[6,"SyntaxToken"],[6,"SyntaxElement"],[4,"InsertPosition"],[3,"TreeDiff"],[4,"Radix"],[4,"BinOp"],[4,"FormatSpecifier"],[4,"Expr"],[4,"Type"],[4,"GenericArg"],[4,"Effect"],[4,"CommentShape"],[4,"ElseBranch"],[4,"LiteralKind"],[4,"Pat"],[4,"Item"],[4,"AssocItem"],[4,"GenericParam"],[4,"PathSegmentKind"],[4,"PrefixOp"],[4,"ArrayExprKind"],[4,"Adt"],[4,"RangeOp"],[4,"Stmt"],[4,"ExternItem"],[4,"TypeBoundKind"],[4,"VisibilityKind"],[4,"FieldKind"],[4,"CommentPlacement"],[4,"AttrKind"],[4,"NameLike"],[4,"Macro"],[4,"SelfParamKind"],[4,"NameOrNameRef"],[4,"StructKind"],[4,"FieldList"],[3,"ExternBlock"],[3,"Fn"],[3,"FnPtrType"],[3,"MatchArmList"],[3,"RecordExprFieldList"],[3,"GenericParamList"],[3,"AssocItemList"],[3,"WhereClause"],[3,"SelfParam"],[3,"RefExpr"],[3,"RefType"],[3,"RefPat"],[8,"ArgListOwner"],[3,"MacroDef"],[3,"ArgList"],[3,"Attr"],[3,"Path"],[3,"PathSegment"],[3,"Rename"],[3,"CastExpr"],[3,"NameRef"],[3,"Impl"],[3,"Trait"],[3,"ClosureExpr"],[3,"EffectExpr"],[3,"IdentPat"],[8,"AttrsOwner"],[3,"AwaitExpr"],[3,"IndexExpr"],[3,"ConstBlockPat"],[3,"IfExpr"],[3,"Const"],[3,"Static"],[3,"CommentIter"],[3,"QuoteOffsets"],[3,"AttrsOwnerNode"],[3,"SlicePatComponents"],[3,"Name"],[3,"Lifetime"],[3,"GenericArgList"],[3,"ParamList"],[3,"RetType"],[3,"PathType"],[3,"TypeArg"],[3,"AssocTypeArg"],[3,"LifetimeArg"],[3,"ConstArg"],[3,"TypeBoundList"],[3,"MacroCall"],[3,"TokenTree"],[3,"MacroItems"],[3,"MacroStmts"],[3,"SourceFile"],[3,"Enum"],[3,"ExternCrate"],[3,"MacroRules"],[3,"Module"],[3,"Struct"],[3,"TypeAlias"],[3,"Union"],[3,"Use"],[3,"Visibility"],[3,"ItemList"],[3,"UseTree"],[3,"UseTreeList"],[3,"Abi"],[3,"BlockExpr"],[3,"Param"],[3,"RecordFieldList"],[3,"TupleFieldList"],[3,"RecordField"],[3,"TupleField"],[3,"VariantList"],[3,"Variant"],[3,"ExternItemList"],[3,"ConstParam"],[3,"LifetimeParam"],[3,"TypeParam"],[3,"WherePred"],[3,"Meta"],[3,"ExprStmt"],[3,"LetStmt"],[3,"ArrayExpr"],[3,"BinExpr"],[3,"BoxExpr"],[3,"BreakExpr"],[3,"CallExpr"],[3,"ContinueExpr"],[3,"FieldExpr"],[3,"ForExpr"],[3,"Literal"],[3,"LoopExpr"],[3,"MatchExpr"],[3,"MethodCallExpr"],[3,"ParenExpr"],[3,"PathExpr"],[3,"PrefixExpr"],[3,"RangeExpr"],[3,"RecordExpr"],[3,"ReturnExpr"],[3,"TryExpr"],[3,"TupleExpr"],[3,"WhileExpr"],[3,"YieldExpr"],[3,"Label"],[3,"RecordExprField"],[3,"Condition"],[3,"MatchArm"],[3,"MatchGuard"],[3,"ArrayType"],[3,"DynTraitType"],[3,"ForType"],[3,"ImplTraitType"],[3,"InferType"],[3,"MacroType"],[3,"NeverType"],[3,"ParenType"],[3,"PtrType"],[3,"SliceType"],[3,"TupleType"],[3,"TypeBound"],[3,"BoxPat"],[3,"RestPat"],[3,"LiteralPat"],[3,"MacroPat"],[3,"OrPat"],[3,"ParenPat"],[3,"PathPat"],[3,"WildcardPat"],[3,"RangePat"],[3,"RecordPat"],[3,"SlicePat"],[3,"TuplePat"],[3,"TupleStructPat"],[3,"RecordPatFieldList"],[3,"RecordPatField"],[3,"Whitespace"],[3,"Comment"],[3,"String"],[3,"ByteString"],[3,"IntNumber"],[3,"FloatNumber"],[3,"CommentKind"],[3,"AstChildren"],[8,"AstNode"],[8,"AstToken"],[8,"HasFormatSpecifier"],[8,"IsString"],[8,"TypeBoundsOwner"],[8,"DocCommentsOwner"],[8,"GenericParamsOwner"],[8,"ModuleItemOwner"],[8,"LoopBodyOwner"],[8,"NameOwner"],[8,"VisibilityOwner"],[13,"Repeat"],[13,"Type"],[3,"IndentLevel"],[8,"AstNodeEdit"],[8,"GenericParamsOwnerEdit"],[3,"WsBuilder"],[3,"Position"],[8,"Element"]]},\
"test_utils":{"doc":"Assorted testing utilities.","t":[3,17,17,3,6,3,13,13,4,5,5,14,5,0,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,12,5,12,11,11,11,5,5,5,5,5,11,5,11,11,11,11,11,11,11,11,12,12,11,11,11,12,5,11,5,11,12,11,5,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5],"n":["AssertLinear","CURSOR_MARKER","ESCAPED_CURSOR_MARKER","Fixture","FxHashMap","MiniCore","Offset","Range","RangeOrOffset","__diff","add_cursor","assert_eq_text","bench","bench_fixture","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfg_atoms","cfg_key_values","clone","clone_into","default","deps","drop","edition","ensure_file_contents","env","eq","expect_offset","expect_range","extract_annotations","extract_offset","extract_range","extract_range_or_offset","extract_tags","fmt","format_diff","from","from","from","from","into","into","into","into","introduce_new_source_root","krate","ne","next_round","parse","path","project_root","sample","skip_slow_tests","source_code","text","to_owned","try_ensure_file_contents","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","big_struct","big_struct_n","glorious_old_parser","numerous_macro_rules"],"q":["test_utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","test_utils::bench_fixture","","",""],"d":["","","","","Type alias for a hashmap using the <code>fx</code> hash algorithm.","","","","","","Inserts <code>$0</code> marker into the <code>text</code> at <code>offset</code>.","Asserts that two strings are equal, otherwise displays a …","Utility for writing benchmark tests.","Generates large snippets of Rust code for usage in the …","","","","","","","","","","","","","","","","","Checks that the <code>file</code> has the specified <code>contents</code>. If that …","","","","","Extracts <code>//^^^ some text</code> annotations.","Infallible version of <code>try_extract_offset()</code>.","Infallible version of <code>try_extract_range()</code>.","Extracts <code>TextRange</code> or <code>TextSize</code> depending on the amount of …","Extracts ranges, marked with <code><tag> </tag></code> pairs from the …","","","","","","","","","","","","","","","Parses text which looks like this:","","Returns the path to the root directory of <code>rust-analyzer</code> …","","Returns <code>false</code> if slow tests should not run, otherwise …","Strips parts of minicore.rs which are flagged by inactive …","","","Checks that the <code>file</code> has the specified <code>contents</code>. If that …","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,1,0,0,0,0,0,0,2,3,4,1,2,3,4,1,3,3,1,1,4,3,4,3,0,3,3,1,1,0,0,0,0,0,3,0,2,3,4,1,2,3,4,1,3,3,3,4,3,3,0,4,0,2,3,1,0,2,3,4,1,2,3,4,1,2,3,4,1,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,[[["str",15]],[["vec",3],["chunk",4],["global",3]]],[[["str",15],["textsize",3]],["string",3]],null,[[["str",15]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["rangeoroffset",4]],[[]],[[],["assertlinear",3]],null,[[]],null,[[["path",3],["str",15]]],null,[[["fixture",3]],["bool",15]],[[],["textsize",3]],[[],["textrange",3]],[[["str",15]],["vec",3]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["formatter",3]],["result",6]],[[["vec",3],["chunk",4]],["string",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["fixture",3]],["bool",15]],[[],["bool",15]],[[["str",15]]],null,[[],["pathbuf",3]],[[["f64",15]]],[[],["bool",15]],[[],["string",3]],null,[[]],[[["path",3],["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["string",3]],[[["u32",15]],["string",3]],[[],["string",3]],[[],["string",3]]],"p":[[4,"RangeOrOffset"],[3,"MiniCore"],[3,"Fixture"],[3,"AssertLinear"]]},\
"text_edit":{"doc":"Representation of a <code>TextEdit</code>.","t":[3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Indel","TextEdit","TextEditBuilder","TextRange","TextSize","add","add","add","add","add_assign","add_assign","apply","apply","apply_to_offset","at","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","checked_add","checked_add","checked_sub","checked_sub","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","contains","contains_inclusive","contains_range","cover","cover_offset","default","default","default","default","delete","delete","delete","delete","empty","end","end_bound","eq","eq","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","insert","insert","insert","insert","intersect","into","into","into","into","into","into_iter","invalidates_offset","is_empty","is_empty","iter","len","len","ne","ne","new","of","ordering","partial_cmp","replace","replace","replace","start","start_bound","sub","sub","sub","sub","sub_assign","sub_assign","sum","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","up_to"],"q":["text_edit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["<code>InsertDelete</code> – a single “atomic” change to text","","","A range in text, represented as a pair of [<code>TextSize</code>][…","A measure of text length. Also, equivalently, an index …","","","","","","","","","","Create a new <code>TextRange</code> with the given <code>offset</code> and <code>len</code> (…","","","","","","","","","","","","Add an offset to this range.","Checked addition. Returns <code>None</code> if overflow occurred.","Subtract an offset from this range.","Checked subtraction. Returns <code>None</code> if overflow occurred.","","","","","","","","","","","","Check if this range contains an offset.","Check if this range contains an offset.","Check if this range completely contains another range.","Extends the range to cover <code>other</code> as well.","Extends the range to cover <code>other</code> offsets as well.","","","","","","","","Refers to offsets in the original text","Create a zero-length range at the specified offset (…","The end point of this range.","","","","","","","","","","","","","","","","","","","","","","The range covered by both ranges, if it exists. If the …","","","","","","","","","Check if this range is empty.","","","The size of this range.","","","Creates a new <code>TextRange</code> with the given <code>start</code> and <code>end</code> (…","The text size of some primitive text-like object.","Relative order of the two ranges (overlapping ranges are …","","","","","The start point of this range.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a range up to the given end (<code>..end</code>)."],"i":[0,0,0,0,0,1,1,2,2,1,2,3,4,4,1,3,4,5,1,2,3,4,5,1,2,4,1,2,1,2,3,4,5,1,2,3,4,5,1,2,2,1,1,1,1,1,4,5,1,2,3,4,5,3,1,1,1,1,2,5,3,4,5,1,2,3,4,5,1,2,2,1,2,3,4,5,3,1,3,4,5,1,2,4,5,4,1,4,4,1,1,2,1,2,1,2,3,4,5,1,1,1,1,2,2,1,2,2,3,4,5,1,2,3,4,5,1,2,2,3,4,5,1,2,3,4,5,1,2,4,1],"f":[null,null,null,null,null,[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textsize",3]],[[["textsize",3]],["textsize",3]],[[]],[[]],[[["string",3]]],[[["string",3]]],[[["textsize",3]],[["option",4],["textsize",3]]],[[["textsize",3]],["textrange",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["texteditbuilder",3]],[[["textsize",3]],[["textrange",3],["option",4]]],[[["textsize",3]],[["option",4],["textsize",3]]],[[["textsize",3]],[["textrange",3],["option",4]]],[[["textsize",3]],[["option",4],["textsize",3]]],[[],["indel",3]],[[],["textedit",3]],[[],["texteditbuilder",3]],[[],["textrange",3]],[[],["textsize",3]],[[]],[[]],[[]],[[]],[[]],[[["textsize",3]],["ordering",4]],[[["textsize",3]],["bool",15]],[[["textsize",3]],["bool",15]],[[["textrange",3]],["bool",15]],[[["textrange",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[],["textedit",3]],[[],["texteditbuilder",3]],[[],["textrange",3]],[[],["textsize",3]],[[["textrange",3]],["indel",3]],[[["textrange",3]],["textedit",3]],[[["textrange",3]]],null,[[["textsize",3]],["textrange",3]],[[],["textsize",3]],[[],[["textsize",3],["bound",4]]],[[["textrange",3]],["bool",15]],[[["textsize",3]],["bool",15]],[[],["textedit",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[["u32",15]],["textsize",3]],[[]],[[]],[[]],[[["textsize",3],["string",3]],["indel",3]],[[["textsize",3],["string",3]],["textedit",3]],[[["textsize",3],["string",3]]],null,[[["textrange",3]],[["textrange",3],["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["textsize",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["indel",3],["iter",3]]],[[],["usize",15]],[[],["textsize",3]],[[["textrange",3]],["bool",15]],[[["textsize",3]],["bool",15]],[[["textsize",3]],["textrange",3]],[[],["textsize",3]],[[["textrange",3]],["ordering",4]],[[["textsize",3]],[["option",4],["ordering",4]]],[[["textrange",3],["string",3]],["indel",3]],[[["textrange",3],["string",3]],["textedit",3]],[[["textrange",3],["string",3]]],[[],["textsize",3]],[[],[["textsize",3],["bound",4]]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textsize",3]],[[["textsize",3]],["textsize",3]],[[]],[[]],[[],["textsize",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]],[["tryfrominterror",3],["result",4],["textsize",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["textedit",3]],[["textedit",3],["result",4]]],[[["textsize",3]],["textrange",3]]],"p":[[3,"TextRange"],[3,"TextSize"],[3,"Indel"],[3,"TextEdit"],[3,"TextEditBuilder"]]},\
"toolchain":{"doc":"Discovery of <code>cargo</code> & <code>rustc</code> executables.","t":[5,5,5,5],"n":["cargo","rustc","rustfmt","rustup"],"q":["toolchain","","",""],"d":["","","",""],"i":[0,0,0,0],"f":[[[],["pathbuf",3]],[[],["pathbuf",3]],[[],["pathbuf",3]],[[],["pathbuf",3]]],"p":[]},\
"tt":{"doc":"<code>tt</code> crate defines a <code>TokenTree</code> data structure: this is the …","t":[12,13,13,13,3,4,4,13,13,3,13,13,13,4,13,3,13,13,3,13,3,4,3,13,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,13,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["0","Alone","Brace","Bracket","Delimiter","DelimiterKind","ExpansionError","ExpansionError","IOError","Ident","Ident","Joint","JsonError","Leaf","Leaf","Literal","Literal","Parenthesis","Punct","Punct","SmolStr","Spacing","Subtree","Subtree","TokenId","TokenTree","Unknown","as_debug_string","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","char","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","count","default","default","delimiter","delimiter_kind","deref","deserialize","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_iter","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","id","id","id","id","into","into","into","into","into","into","into","into","into","into","into","into","is_empty","is_heap_allocated","kind","len","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new_inline","new_inline_from_ascii","partial_cmp","serialize","spacing","text","text","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token_trees","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unspecified","Cursor","Leaf","Subtree","TokenBuffer","TokenTreeRef","begin","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bump","bump_subtree","clone","clone_into","cloned","end","eof","eq","fmt","fmt","fmt","from","from","from","from_subtree","from_tokens","into","into","into","is_root","subtree","to_owned","token_tree","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["tttt::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","A <code>SmolStr</code> is a string type that has the following …","","","","Represents identity of the token.","","","A simple line string used for debugging","","","","","","","","","","","","","","","","","","","","","","","","","","","Stateful iteration over token trees.","","","","","","","","","","","","","","","","","","","","","","","","","","","Count the number of tokens recursively","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs inline variant of <code>SmolStr</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A safe version of <code>Cursor</code> from <code>syn</code> crate …","","","A token tree buffer The safe version of <code>syn</code> <code>TokenBuffer</code>","","Creates a cursor referencing the first token in the …","","","","","","","Bump the cursor","Bump the cursor, if it is a subtree, returns a cursor …","","","","If the cursor is pointing at the end of a subtree, returns…","Check whether it is eof","","","","","","","","","","","","","Check whether it is a top level","If the cursor is pointing at a <code>Subtree</code>, returns a cursor …","","If the cursor is pointing at a <code>TokenTree</code>, returns it","","","","","","","","",""],"i":[1,2,3,3,0,0,0,4,4,0,5,2,4,0,6,0,5,3,0,5,0,0,0,6,0,0,4,7,8,1,6,5,7,9,3,10,11,2,12,4,8,8,1,6,5,7,9,3,10,11,2,12,4,8,0,11,1,6,5,7,9,3,10,11,2,12,4,8,1,6,5,7,9,3,10,11,2,12,4,8,8,7,7,8,7,7,8,8,6,1,6,5,7,9,3,10,11,2,12,4,8,8,8,8,8,1,6,6,5,5,7,7,9,3,10,10,11,11,2,12,12,4,4,8,8,1,6,6,6,5,5,5,5,7,9,3,10,11,2,12,4,8,8,8,8,8,8,1,6,5,7,9,3,10,11,2,12,8,9,10,11,12,1,6,5,7,9,3,10,11,2,12,4,8,8,8,9,8,1,6,5,7,9,10,11,12,4,8,8,8,8,8,11,10,12,1,6,5,7,9,3,10,11,2,12,4,8,6,5,7,10,11,12,4,8,8,7,1,6,5,7,9,3,10,11,2,12,4,8,1,6,5,7,9,3,10,11,2,12,4,8,1,6,5,7,9,3,10,11,2,12,4,8,1,0,13,13,0,0,14,14,13,15,14,13,15,15,15,15,15,13,15,15,15,14,13,15,14,13,15,14,14,14,13,15,15,15,15,15,14,13,15,14,13,15,14,13,15],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["string",3]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["tokenid",3]],[[],["tokentree",4]],[[],["leaf",4]],[[],["subtree",3]],[[],["delimiter",3]],[[],["delimiterkind",4]],[[],["literal",3]],[[],["punct",3]],[[],["spacing",4]],[[],["ident",3]],[[],["expansionerror",4]],[[],["smolstr",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["smolstr",3]],["ordering",4]],[[],["usize",15]],[[],["subtree",3]],[[],["smolstr",3]],null,[[],[["option",4],["delimiterkind",4]]],[[],["str",15]],[[],[["result",4],["smolstr",3]]],[[]],[[["tokenid",3]],["bool",15]],[[["tokentree",4]],["bool",15]],[[["leaf",4]],["bool",15]],[[["subtree",3]],["bool",15]],[[["delimiter",3]],["bool",15]],[[["delimiterkind",4]],["bool",15]],[[["literal",3]],["bool",15]],[[["punct",3]],["bool",15]],[[["spacing",4]],["bool",15]],[[["ident",3]],["bool",15]],[[["expansionerror",4]],["bool",15]],[[["string",3]],["bool",15]],[[["string",3]],["bool",15]],[[["str",15]],["bool",15]],[[["smolstr",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[["leaf",4]],["tokentree",4]],[[]],[[["subtree",3]],["tokentree",4]],[[["literal",3]],["leaf",4]],[[]],[[["punct",3]],["leaf",4]],[[["ident",3]],["leaf",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["smolstr",3]],[[],["smolstr",3]],[[],["smolstr",3]],[[],["smolstr",3]],[[],["smolstr",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],null,[[],["usize",15]],[[["tokenid",3]],["bool",15]],[[["tokentree",4]],["bool",15]],[[["leaf",4]],["bool",15]],[[["subtree",3]],["bool",15]],[[["delimiter",3]],["bool",15]],[[["literal",3]],["bool",15]],[[["punct",3]],["bool",15]],[[["ident",3]],["bool",15]],[[["expansionerror",4]],["bool",15]],[[],["smolstr",3]],[[["str",15]],["smolstr",3]],[[["usize",15]],["smolstr",3]],[[["smolstr",3]],[["option",4],["ordering",4]]],[[],["result",4]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["tokenid",3]],null,null,null,null,null,[[],["cursor",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["cursor",3]],[[],["cursor",3]],[[],["cursor",3]],[[]],[[],["tokentree",4]],[[],[["option",4],["subtree",3]]],[[],["bool",15]],[[["cursor",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["subtree",3]],["tokenbuffer",3]],[[],["tokenbuffer",3]],[[]],[[]],[[]],[[],["bool",15]],[[],[["cursor",3],["option",4]]],[[]],[[],[["option",4],["tokentreeref",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"TokenId"],[4,"Spacing"],[4,"DelimiterKind"],[4,"ExpansionError"],[4,"Leaf"],[4,"TokenTree"],[3,"Subtree"],[3,"SmolStr"],[3,"Delimiter"],[3,"Literal"],[3,"Punct"],[3,"Ident"],[4,"TokenTreeRef"],[3,"TokenBuffer"],[3,"Cursor"]]},\
"vfs":{"doc":"Virtual File System","t":[12,3,3,3,3,4,3,13,13,3,13,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,13,4,13,8,13,4,13,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,10,12,10,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12],"n":["0","AbsPath","AbsPathBuf","AnchoredPath","AnchoredPathBuf","ChangeKind","ChangedFile","Create","Delete","FileId","Modify","Vfs","VfsPath","anchor","anchor","as_os_str","as_path","as_path","as_ref","as_ref","as_ref","assert","assert","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","change_kind","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","default","deref","deserialize","display","ends_with","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exists","exists","extension","file_contents","file_id","file_id","file_name","file_path","file_set","file_stem","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","has_changes","hash","hash","hash","hash","into","into","into","into","into","into","into","into","is_created_or_deleted","iter","join","join","len","loader","name_and_extension","ne","ne","ne","ne","ne","ne","new_virtual_path","normalize","parent","parent","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","path","pop","pop","serialize","set_file_contents","starts_with","starts_with","strip_prefix","take_changes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_path_buf","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","FileSet","FileSetConfig","FileSetConfigBuilder","add_file_set","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone_into","default","default","default","eq","equivalent","file_for_path","fmt","fmt","from","from","from","insert","into","into","into","iter","len","len","ne","partition","path_for_file","resolve_path","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Config","Directories","Directories","Entry","Files","Handle","Loaded","Message","Progress","Sender","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cargo_package_dependency","clone","clone","clone_into","clone_into","contains_dir","contains_dir","contains_file","contains_file","default","exclude","extensions","fmt","fmt","fmt","fmt","from","from","from","from","include","into","into","into","into","invalidate","load","load_sync","local_cargo_package","rs_files_recursively","set_config","spawn","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","watch","config_version","files","n_done","n_total"],"q":["vfsvfs::file_set","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vfs::loader","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vfs::loader::Message","","",""],"d":["","Wrapper around an absolute [<code>Path</code>].","Wrapper around an absolute [<code>PathBuf</code>].","Path relative to a file.","Path relative to a file.","Kind of file change.","Changed file in the [<code>Vfs</code>].","The file was (re-)created","The file was deleted","Handle to a file in [<code>Vfs</code>]","The file was modified","Storage for all files read by rust-analyzer.","Path in <code>Vfs</code>.","File that this path is relative to.","File that this path is relative to.","","Returns the <code>AbsPath</code> representation of <code>self</code> if <code>self</code> is on …","Coerces to a <code>AbsPath</code> slice.","","","","Wrap the given absolute path in <code>AbsPathBuf</code>","Wrap the given absolute path in <code>AbsPath</code>","","","","","","","","","","","","","","","","","","","","Kind of change","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the change is not <code>Delete</code>.","","","File content corresponding to the given <code>file_id</code>.","Id of the given path if it exists in the <code>Vfs</code> and is not …","Id of the changed file","","File path corresponding to the given <code>file_id</code>.","Partitions a list of files into disjoint subsets.","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the <code>Vfs</code> contains changes.","","","","","","","","","","","","","Returns <code>true</code> if the change is <code>Create</code> or <code>Delete</code>.","Returns an iterator over the stored ids and their …","Creates a new <code>VfsPath</code> with <code>path</code> adjoined to <code>self</code>.","Equivalent of [<code>Path::join</code>] for <code>AbsPath</code>.","Amount of files currently stored.","Object safe interface for file watching and reading.","Returns <code>self</code>’s base name and file extension.","","","","","","","Creates an “in-memory” path from <code>/</code>-separated string.","Normalize the given path:","Returns the <code>VfsPath</code> without its final component, if there …","Equivalent of [<code>Path::parent</code>] for <code>AbsPath</code>.","","","","","Path relative to <code>anchor</code>’s containing directory.","Path relative to <code>anchor</code>’s containing directory.","Remove the last component of <code>self</code> if there is one.","Equivalent of [<code>PathBuf::pop</code>] for <code>AbsPathBuf</code>.","","Update the <code>path</code> with the given <code>contents</code>. <code>None</code> means the …","Returns <code>true</code> if <code>other</code> is a prefix of <code>self</code>.","","Equivalent of [<code>Path::strip_prefix</code>] for <code>AbsPath</code>.","Drain and returns all the changes in the <code>Vfs</code>.","","","","","","","Equivalent of [<code>Path::to_path_buf</code>] for <code>AbsPath</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A set of [<code>VfsPath</code>]s identified by [<code>FileId</code>]s.","This contains path prefixes to partition a [<code>Vfs</code>] into […","Builder for [<code>FileSetConfig</code>].","Add a new set of paths prefixes.","","","","","","","Build the <code>FileSetConfig</code>.","Returns a builder for <code>FileSetConfig</code>.","","","","","","","","Get the id corresponding to <code>path</code> if it exists in the set.","","","","","","Insert the <code>file_id, path</code> pair into the set.","","","","Iterate over this set’s ids.","Returns the number of sets currently held.","Returns the number of stored paths.","","Partition <code>vfs</code> into <code>FileSet</code>s.","Get the path corresponding to <code>file</code> if it exists in the …","Get the id of the file corresponding to <code>path</code>.","","","","","","","","","","","[<code>Handle</code>]’s configuration.","Specifies a set of files on the file system.","The <code>Entry</code> is represented by <code>Directories</code>.","A set of files on the file system.","The <code>Entry</code> is represented by a raw set of files.","Interface for reading and watching files.","The handle loaded the following files’ content.","Message about an action taken by a [<code>Handle</code>].","Indicate a gradual progress.","Type that will receive <code>Messages</code> from a [<code>Handle</code>].","","","","","","","","","Returns:","","","","","Returns <code>true</code> if <code>path</code> is included in <code>self</code>.","Returns <code>true</code> if <code>path</code> is included in <code>self</code>.","Returns <code>true</code> if <code>path</code> is included in <code>self</code>.","Returns <code>true</code> if <code>path</code> is included in <code>self</code>.","","","","","","","","","","","","","","","","","The file’s content at <code>path</code> has been modified, and …","Set of initially loaded files.","Load the content of the given file, returning [<code>None</code>] if …","Returns:","Returns:","Set this handle’s configuration.","Spawn a new handle with the given <code>sender</code>.","","","","","","","","","","","","","","","Version number to associate progress updates to the right …","Index of watched entries in <code>load</code>.","","","",""],"i":[1,0,0,0,0,0,0,2,2,0,2,0,0,3,4,5,6,7,7,7,5,7,5,8,3,4,6,1,9,2,7,7,5,8,3,4,6,1,9,2,7,5,8,3,4,6,1,2,7,3,4,6,1,2,7,6,1,7,5,9,7,7,5,5,3,4,6,1,2,7,7,5,3,4,6,1,2,7,5,8,5,5,9,9,8,5,9,0,5,3,4,6,6,1,9,2,7,5,8,3,4,6,6,1,9,2,7,9,6,1,7,5,8,3,4,6,1,9,2,7,8,9,6,5,9,0,6,3,4,6,1,7,5,6,5,6,5,6,1,7,5,3,4,6,7,7,9,6,5,5,9,3,4,6,1,2,7,5,6,8,3,4,6,1,9,2,7,7,7,8,3,4,6,1,9,2,7,8,3,4,6,1,9,2,7,5,0,0,0,10,10,11,12,10,11,12,10,12,11,11,10,11,12,11,11,11,11,12,10,11,12,11,10,11,12,11,10,11,11,12,11,11,11,10,11,12,10,11,12,10,11,12,0,0,13,0,13,0,14,0,14,0,14,13,15,16,14,13,15,16,13,13,15,13,15,13,15,13,15,15,15,15,14,13,15,16,14,13,15,16,15,14,13,15,16,17,16,17,13,13,17,17,13,15,14,13,15,16,14,13,15,16,14,13,15,16,16,16,18,19,18,18],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["osstr",3]],[[],[["option",4],["abspath",3]]],[[],["abspath",3]],[[],["path",3]],[[],["abspath",3]],[[],["path",3]],[[["pathbuf",3]],["abspathbuf",3]],[[["path",3]],["abspath",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["abspath",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["anchoredpathbuf",3]],[[],["anchoredpath",3]],[[],["vfspath",3]],[[],["fileid",3]],[[],["changekind",4]],[[],["abspathbuf",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vfspath",3]],["ordering",4]],[[["fileid",3]],["ordering",4]],[[["abspathbuf",3]],["ordering",4]],[[["abspath",3]],["ordering",4]],[[],["vfs",3]],[[],["abspath",3]],[[],[["result",4],["abspathbuf",3]]],[[],["display",3]],[[["relpath",3]],["bool",15]],[[["anchoredpathbuf",3]],["bool",15]],[[["anchoredpath",3]],["bool",15]],[[["vfspath",3]],["bool",15]],[[["fileid",3]],["bool",15]],[[["changekind",4]],["bool",15]],[[["abspath",3]],["bool",15]],[[["abspathbuf",3]],["bool",15]],[[["abspath",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["option",4],["osstr",3]]],[[["fileid",3]]],[[["vfspath",3]],[["option",4],["fileid",3]]],null,[[],[["option",4],["osstr",3]]],[[["fileid",3]],["vfspath",3]],null,[[],[["option",4],["osstr",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[["abspathbuf",3]]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[["str",15]],[["vfspath",3],["option",4]]],[[],["abspathbuf",3]],[[],["usize",15]],null,[[],["option",4]],[[["anchoredpathbuf",3]],["bool",15]],[[["anchoredpath",3]],["bool",15]],[[["vfspath",3]],["bool",15]],[[["fileid",3]],["bool",15]],[[["abspathbuf",3]],["bool",15]],[[["abspath",3]],["bool",15]],[[["string",3]],["vfspath",3]],[[],["abspathbuf",3]],[[],[["vfspath",3],["option",4]]],[[],[["option",4],["abspath",3]]],[[["vfspath",3]],[["option",4],["ordering",4]]],[[["fileid",3]],[["option",4],["ordering",4]]],[[["abspathbuf",3]],[["option",4],["ordering",4]]],[[["abspath",3]],[["option",4],["ordering",4]]],null,null,[[],["bool",15]],[[],["bool",15]],[[],["result",4]],[[["vfspath",3],["vec",3],["option",4]],["bool",15]],[[["vfspath",3]],["bool",15]],[[["abspath",3]],["bool",15]],[[["abspath",3]],[["option",4],["relpath",3]]],[[],[["vec",3],["changedfile",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["abspathbuf",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],[["pathbuf",3],["result",4],["abspathbuf",3]]],[[["pathbuf",3]],[["pathbuf",3],["result",4],["abspathbuf",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[["vec",3],["vfspath",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["filesetconfig",3]],[[],["filesetconfigbuilder",3]],[[],["fileset",3]],[[]],[[]],[[],["fileset",3]],[[]],[[["fileset",3]],["bool",15]],[[],["bool",15]],[[["vfspath",3]],[["fileid",3],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["vfspath",3],["fileid",3]]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["fileset",3]],["bool",15]],[[["vfs",3]],[["fileset",3],["vec",3]]],[[["fileid",3]],[["vfspath",3],["option",4]]],[[["anchoredpath",3]],[["option",4],["fileid",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["abspathbuf",3]],["entry",4]],[[],["entry",4]],[[],["directories",3]],[[]],[[]],[[["abspath",3]],["bool",15]],[[["abspath",3]],["bool",15]],[[["abspath",3]],["bool",15]],[[["abspath",3]],["bool",15]],[[],["directories",3]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[["abspathbuf",3]]],null,[[["abspath",3]],[["vec",3],["option",4]]],[[["abspathbuf",3]],["entry",4]],[[["abspathbuf",3]],["entry",4]],[[["config",3]]],[[["sender",6]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null],"p":[[3,"FileId"],[4,"ChangeKind"],[3,"AnchoredPathBuf"],[3,"AnchoredPath"],[3,"AbsPath"],[3,"VfsPath"],[3,"AbsPathBuf"],[3,"ChangedFile"],[3,"Vfs"],[3,"FileSetConfigBuilder"],[3,"FileSet"],[3,"FileSetConfig"],[4,"Entry"],[4,"Message"],[3,"Directories"],[3,"Config"],[8,"Handle"],[13,"Progress"],[13,"Loaded"]]},\
"vfs_notify":{"doc":"An implementation of <code>loader::Handle</code>, based on <code>walkdir</code> and …","t":[3,11,11,11,11,11,11,11,11,11,11,11,11],"n":["NotifyHandle","borrow","borrow_mut","fmt","from","into","invalidate","load_sync","set_config","spawn","try_from","try_into","type_id"],"q":["vfs_notify","","","","","","","","","","","",""],"d":["","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[["abspathbuf",3]]],[[["abspath",3]],[["vec",3],["option",4]]],[[["config",3]]],[[["sender",6]],["notifyhandle",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"NotifyHandle"]]},\
"xtask":{"doc":"See https://github.com/matklad/cargo-xtask/.","t":[5,0,0,0,5,5,0,5,0,5,3,11,11,11,12,5,5,11,5,11,5,5,11,11,12,12,11,11,11,11,3,13,3,13,3,13,18,18,3,13,3,13,3,13,3,13,3,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,13,4,13,17,3,13,17,11,11,11,11,11,11,5,11,11,12,5,11,11,11,5,5,11,11,11,12,11,11,11,11,11,11,11,11,11,11,3,3,6,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,12,12,11,11,12,5,12,11,12,12,11,11,11,11,11,11,11,11,0,13,13,13,13,3,4,13,11,11,11,11,11,11,11,11,5,11,11,12,12,5,5,11,11,11,11,11,11,11,5],"n":["date_iso","dist","flags","install","is_release_tag","main","metrics","project_root","release","run_fuzzer","Patch","borrow","borrow_mut","commit","contents","dist_client","dist_server","drop","exe_suffix","from","get_target","gzip","into","new","original_contents","path","replace","try_from","try_into","type_id","Bb","Bb","Dist","Dist","FuzzTests","FuzzTests","HELP","HELP_","Help","Help","Install","Install","Metrics","Metrics","Promote","Promote","Release","Release","Xtask","XtaskCmd","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","client","client_patch_version","code_bin","dry_run","dry_run","dry_run","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_env","from_env_","from_vec_","help","into","into","into","into","into","into","into","into","into","into","jemalloc","mimalloc","parse_","parse_","parse_","parse_","parse_","parse_","parse_","parse_","parse_","run","run","run","run","run","server","server","subcommand","suffix","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ClientOpt","Jemalloc","Malloc","Mimalloc","REQUIRED_RUST_VERSION","ServerOpt","System","VS_CODES","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_version","clone","clone_into","code_bin","fix_path_for_mac","from","from","from","install_client","install_server","into","into","into","malloc","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Host","Metrics","Unit","borrow","borrow","borrow_mut","borrow_mut","cpu","fmt","fmt","from","from","host","into","into","json","measure_analysis_stats","measure_analysis_stats_path","measure_analysis_stats_self","measure_build","mem","metrics","new","new","os","parse_metrics","perf_revision","report","revision","timestamp","to_json","to_json","try_from","try_from","try_into","try_into","type_id","type_id","changelog","Feature","Fix","Internal","Other","PrInfo","PrKind","Skip","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","from","from","get_changelog","into","into","kind","message","parse_changelog_line","parse_title_line","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unescape"],"q":["xtask","","","","","","","","","","xtask::dist","","","","","","","","","","","","","","","","","","","","xtask::flags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xtask::install","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xtask::metrics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xtask::release","xtask::release::changelog","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","Installs rust-analyzer language server and/or editor …i":[0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,0,1,0,0,1,1,1,1,1,1,1,1,0,2,0,2,0,2,3,3,0,2,0,2,0,2,0,2,0,2,0,0,3,2,4,5,6,7,8,9,10,11,3,2,4,5,6,7,8,9,10,11,5,5,9,5,7,8,10,3,2,4,5,6,7,8,9,10,11,3,2,4,5,6,7,8,9,10,11,3,3,3,4,3,2,4,5,6,7,8,9,10,11,5,5,3,4,5,6,7,8,9,10,11,5,7,8,9,10,5,5,3,11,3,2,4,5,6,7,8,9,10,11,3,2,4,5,6,7,8,9,10,11,3,2,4,5,6,7,8,9,10,11,0,12,0,12,0,0,12,0,13,12,14,13,12,14,0,14,14,14,0,13,12,14,0,0,13,12,14,13,14,13,12,14,13,12,14,13,12,14,0,0,0,15,16,15,16,16,15,16,15,16,15,15,16,15,15,15,15,15,16,15,15,16,16,0,15,15,15,15,15,16,15,16,15,16,15,16,0,17,17,17,17,0,0,17,18,17,18,17,17,17,18,17,0,18,17,18,18,0,0,17,18,17,18,17,18,17,0],"f":[[[],[["result",6],["string",3]]],null,null,null,[[["str",15]],["bool",15]],[[],["result",6]],null,[[],["pathbuf",3]],null,[[],["result",6]],null,[[]],[[]],[[],["result",6]],null,[[["str",15]],["result",6]],[[["str",15]],["result",6]],[[]],[[["str",15]],["string",3]],[[]],[[],["string",3]],[[["path",3]],["result",6]],[[]],[[],[["result",6],["patch",3]]],null,null,[[["str",15]],["patch",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4],["clientopt",3]]],null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",6]],[[],["result",6]],[[["vec",3],["osstring",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["parser",3]],["result",6]],[[["parser",3]],["result",6]],[[["parser",3]],["result",6]],[[["parser",3]],["result",6]],[[["parser",3]],["result",6]],[[["parser",3]],["result",6]],[[["parser",3]],["result",6]],[[["parser",3]],["result",6]],[[["parser",3]],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],[["option",4],["serveropt",3]]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15],["str",15]],["bool",15]],[[],["clientopt",3]],[[]],null,[[],["result",6]],[[]],[[]],[[]],[[["clientopt",3]],["result",6]],[[["serveropt",3]],["result",6]],[[]],[[]],[[]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[]],[[]],[[],["string",3]],[[["str",15]],["result",6]],[[["str",15]],["result",6]],[[],["result",6]],[[],["result",6]],null,null,[[],[["result",6],["metrics",3]]],[[],[["result",6],["host",3]]],null,[[["str",15]],["vec",3]],null,[[["string",3],["str",15],["u64",15]]],null,null,[[["object",3]]],[[["object",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["prkind",4]],[[]],[[]],[[]],[[["usize",15],["str",15]],[["result",6],["string",3]]],[[]],[[]],null,null,[[["str",15]],[["prinfo",3],["option",4]]],[[["str",15]],["prinfo",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["str",15]],["string",3]]],"p":[[3,"Patch"],[4,"XtaskCmd"],[3,"Xtask"],[3,"Help"],[3,"Install"],[3,"FuzzTests"],[3,"Release"],[3,"Promote"],[3,"Dist"],[3,"Metrics"],[3,"Bb"],[4,"Malloc"],[3,"ServerOpt"],[3,"ClientOpt"],[3,"Metrics"],[3,"Host"],[4,"PrKind"],[3,"PrInfo"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};